{
  "contractName": "BondedECDSAKeepFactoryVendorStub",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "masterBondedECDSAKeepAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "sortitionPoolFactory",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenStaking",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "keepBonding",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "randomBeacon",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_bondTokenAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "keepAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "members",
          "type": "address[]"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "application",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "honestThreshold",
          "type": "uint256"
        }
      ],
      "name": "BondedECDSAKeepCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "application",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "sortitionPool",
          "type": "address"
        }
      ],
      "name": "SortitionPoolCreated",
      "type": "event"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_relayEntry",
          "type": "uint256"
        }
      ],
      "name": "__beaconCallback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_delegatedAuthorityRecipient",
          "type": "address"
        }
      ],
      "name": "__isRecognized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "bondTokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "callbackGas",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_application",
          "type": "address"
        }
      ],
      "name": "createSortitionPool",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getKeepAtIndex",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getKeepCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_keep",
          "type": "address"
        }
      ],
      "name": "getKeepOpenedTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_application",
          "type": "address"
        }
      ],
      "name": "getSortitionPool",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_application",
          "type": "address"
        }
      ],
      "name": "getSortitionPoolWeight",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "groupSelectionSeed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "hasMinimumStake",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "isOperatorAuthorized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_application",
          "type": "address"
        }
      ],
      "name": "isOperatorEligible",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_application",
          "type": "address"
        }
      ],
      "name": "isOperatorRegistered",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_application",
          "type": "address"
        }
      ],
      "name": "isOperatorUpToDate",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "keeps",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "masterKeepAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "minimumBond",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "newEntryFeeEstimate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "newGroupSelectionSeedFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "openKeepFeeEstimate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "poolStakeWeightDivisor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_application",
          "type": "address"
        }
      ],
      "name": "registerMemberCandidate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "requestNewGroupSelectionSeed",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "reseedPool",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_minimumBondableValue",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_groupSize",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_honestThreshold",
          "type": "uint256"
        }
      ],
      "name": "setMinimumBondableValue",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_application",
          "type": "address"
        }
      ],
      "name": "updateOperatorStatus",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_groupSize",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_honestThreshold",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_bond",
          "type": "uint256"
        }
      ],
      "name": "openKeep",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_groupSize",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_honestThreshold",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_bond",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_stakeLockDuration",
          "type": "uint256"
        }
      ],
      "name": "openKeep",
      "outputs": [
        {
          "internalType": "address",
          "name": "keepAddress",
          "type": "address"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "calculateKeepAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"masterBondedECDSAKeepAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sortitionPoolFactory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenStaking\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"keepBonding\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"randomBeacon\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_bondTokenAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"keepAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"members\",\"type\":\"address[]\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"application\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"honestThreshold\",\"type\":\"uint256\"}],\"name\":\"BondedECDSAKeepCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"application\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sortitionPool\",\"type\":\"address\"}],\"name\":\"SortitionPoolCreated\",\"type\":\"event\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_relayEntry\",\"type\":\"uint256\"}],\"name\":\"__beaconCallback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_delegatedAuthorityRecipient\",\"type\":\"address\"}],\"name\":\"__isRecognized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bondTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"calculateKeepAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"callbackGas\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_application\",\"type\":\"address\"}],\"name\":\"createSortitionPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getKeepAtIndex\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getKeepCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_keep\",\"type\":\"address\"}],\"name\":\"getKeepOpenedTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_application\",\"type\":\"address\"}],\"name\":\"getSortitionPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_application\",\"type\":\"address\"}],\"name\":\"getSortitionPoolWeight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"groupSelectionSeed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"hasMinimumStake\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isOperatorAuthorized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_application\",\"type\":\"address\"}],\"name\":\"isOperatorEligible\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_application\",\"type\":\"address\"}],\"name\":\"isOperatorRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_application\",\"type\":\"address\"}],\"name\":\"isOperatorUpToDate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"keeps\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"masterKeepAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minimumBond\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newEntryFeeEstimate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newGroupSelectionSeedFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_groupSize\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_honestThreshold\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_bond\",\"type\":\"uint256\"}],\"name\":\"openKeep\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_groupSize\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_honestThreshold\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_bond\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_stakeLockDuration\",\"type\":\"uint256\"}],\"name\":\"openKeep\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"keepAddress\",\"type\":\"address\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"openKeepFeeEstimate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"poolStakeWeightDivisor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_application\",\"type\":\"address\"}],\"name\":\"registerMemberCandidate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"requestNewGroupSelectionSeed\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"reseedPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minimumBondableValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_groupSize\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_honestThreshold\",\"type\":\"uint256\"}],\"name\":\"setMinimumBondableValue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_application\",\"type\":\"address\"}],\"name\":\"updateOperatorStatus\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract is for testing purposes only.\",\"methods\":{\"__beaconCallback(uint256)\":{\"details\":\"The function is expected to be called in a callback by the random beacon.\",\"params\":{\"_relayEntry\":\"Beacon output.\"}},\"__isRecognized(address)\":{\"params\":{\"_delegatedAuthorityRecipient\":\"Address of the delegated authority recipient.\"},\"return\":\"True if provided address is recognized delegated token staking authority for this factory contract.\"},\"balanceOf(address)\":{\"params\":{\"_operator\":\"The operator to query the balance of.\"},\"return\":\"An uint256 representing the amount staked by the passed operator.\"},\"calculateKeepAddress()\":{\"details\":\"Calculates an address for a keep based on the address of the factory. We need it to have predictable addresses for factories verification.\"},\"createSortitionPool(address)\":{\"details\":\"Emits an event after sortition pool creation.\",\"params\":{\"_application\":\"Address of the application.\"},\"return\":\"Address of the created sortition pool contract.\"},\"getKeepAtIndex(uint256)\":{\"return\":\"The address of the keep at the given index.\"},\"getKeepCount()\":{\"details\":\"Checks the size of the keeps array.\",\"return\":\"The number of keeps opened so far.\"},\"getKeepOpenedTimestamp(address)\":{\"return\":\"Timestamp the given keep was opened at or 0 if this keep was not created by this factory.\"},\"getSortitionPool(address)\":{\"details\":\"Reverts if sortition does not exist for the application.\",\"params\":{\"_application\":\"Address of the application.\"},\"return\":\"Address of the sortition pool contract.\"},\"getSortitionPoolWeight(address)\":{\"details\":\"Reverts if sortition does not exits for the application.\",\"params\":{\"_application\":\"Address of the application.\"},\"return\":\"The sum of all registered operators' weights in the pool. Reverts if sortition pool for the application does not exist.\"},\"hasMinimumStake(address)\":{\"params\":{\"_operator\":\"operator's address\"},\"return\":\"True if has enough active stake to participate in the network, false otherwise.\"},\"isOperatorAuthorized(address)\":{\"params\":{\"_operator\":\"operator's address\"},\"return\":\"True if the factory has access to the staked token balance of the provided operator and can slash that stake. False otherwise.\"},\"isOperatorEligible(address,address)\":{\"params\":{\"_application\":\"Customer application address.\",\"_operator\":\"Operator's address.\"}},\"isOperatorRegistered(address,address)\":{\"params\":{\"_application\":\"Customer application address.\",\"_operator\":\"Operator's address.\"},\"return\":\"True if operator is already registered in the candidates pool, false otherwise.\"},\"isOperatorUpToDate(address,address)\":{\"params\":{\"_application\":\"Customer application address.\",\"_operator\":\"Operator's address.\"}},\"newEntryFeeEstimate()\":{\"return\":\"Uint256 estimate.\"},\"openKeep(uint256,uint256,address,uint256,uint256)\":{\"details\":\"Selects a list of signers for the keep based on provided parameters. A caller of this function is expected to be an application for which member candidates were registered in a pool.\",\"params\":{\"_bond\":\"Value of ETH bond required from the keep in wei.\",\"_groupSize\":\"Number of signers in the keep.\",\"_honestThreshold\":\"Minimum number of honest keep signers.\",\"_owner\":\"Address of the keep owner.\",\"_stakeLockDuration\":\"Stake lock duration in seconds.\"},\"return\":\"Created keep address.\"},\"openKeepFeeEstimate()\":{\"return\":\"Uint256 estimate.\"},\"registerMemberCandidate(address)\":{\"details\":\"If caller is already registered it returns without any changes.\",\"params\":{\"_application\":\"Address of the application.\"}},\"setMinimumBondableValue(uint256,uint256,uint256)\":{\"params\":{\"_groupSize\":\"Number of signers in the keep.\",\"_honestThreshold\":\"Minimum number of honest keep signers.\",\"_minimumBondableValue\":\"The minimum bond value the application requires from a single keep.\"}},\"updateOperatorStatus(address,address)\":{\"params\":{\"_application\":\"Customer application address.\",\"_operator\":\"Operator's address.\"}}},\"title\":\"Bonded ECDSA Keep Factory Stub for vendor testing\"},\"userdoc\":{\"methods\":{\"__beaconCallback(uint256)\":{\"notice\":\"Sets a new group selection seed value.\"},\"__isRecognized(address)\":{\"notice\":\"Verifies if delegates authority recipient is valid address recognized by the factory for token staking authority delegation.\"},\"balanceOf(address)\":{\"notice\":\"Gets the stake balance of the specified operator.\"},\"createSortitionPool(address)\":{\"notice\":\"Creates new sortition pool for the application.\"},\"getKeepAtIndex(uint256)\":{\"notice\":\"Gets a specific keep address at a given index.\"},\"getKeepCount()\":{\"notice\":\"Gets how many keeps have been opened by this contract.\"},\"getKeepOpenedTimestamp(address)\":{\"notice\":\"Gets the opened timestamp of the given keep.\"},\"getSortitionPool(address)\":{\"notice\":\"Gets the sortition pool address for the given application.\"},\"getSortitionPoolWeight(address)\":{\"notice\":\"Gets the total weight of operators in the sortition pool for the given application.\"},\"hasMinimumStake(address)\":{\"notice\":\"Checks if the specified account has enough active stake to become network operator and that this contract has been authorized for potential slashing.     /// Having the required minimum of active stake makes the operator eligible to join the network. If the active stake is not currently undelegating, operator is also eligible for work selection. \"},\"isOperatorAuthorized(address)\":{\"notice\":\"Checks if the factory has the authorization to operate on stake represented by the provided operator. \"},\"isOperatorEligible(address,address)\":{\"notice\":\"Checks if given operator is eligible for the given application.\"},\"isOperatorRegistered(address,address)\":{\"notice\":\"Checks if operator is registered as a candidate for the given customer application.\"},\"isOperatorUpToDate(address,address)\":{\"notice\":\"Checks if operator's details in the member candidates pool are up to date for the given application. If not update operator status function should be called by the one who is monitoring the status.\"},\"newEntryFeeEstimate()\":{\"notice\":\"Gets a fee estimate for a new random entry.\"},\"newGroupSelectionSeedFee()\":{\"notice\":\"Calculates the fee requestor has to pay to reseed the factory for signer selection. Depending on how much value is stored in the reseed pool and the price of a new relay entry, returned value may vary.\"},\"openKeep(uint256,uint256,address,uint256,uint256)\":{\"notice\":\"Opens a new ECDSA keep.\"},\"openKeepFeeEstimate()\":{\"notice\":\"Gets a fee estimate for opening a new keep.\"},\"registerMemberCandidate(address)\":{\"notice\":\"Register caller as a candidate to be selected as keep member for the provided customer application.\"},\"requestNewGroupSelectionSeed()\":{\"notice\":\"Reseeds the value used for a signer selection. Requires enough payment to be passed. The required payment can be calculated using reseedFee function. Factory is automatically triggering reseeding after opening a new keep but the reseed can be also triggered at any moment using this function.\"},\"setMinimumBondableValue(uint256,uint256,uint256)\":{\"notice\":\"Sets the minimum bondable value required from the operator to join the sortition pool of the given application. It is up to the application to specify a reasonable minimum bond for operators trying to join the pool to prevent griefing by operators joining without enough bondable value.\"},\"updateOperatorStatus(address,address)\":{\"notice\":\"Invokes update of operator's details in the member candidates pool for the given application\"}}}},\"settings\":{\"compilationTarget\":{\"/home/kowal/Projects/sovryn/keep-ecdsa/solidity/contracts/test/BondedECDSAKeepFactoryVendorStub.sol\":\"BondedECDSAKeepFactoryVendorStub\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/kowal/Projects/sovryn/keep-ecdsa/solidity/contracts/AbstractBondedECDSAKeep.sol\":{\"keccak256\":\"0xf30ee72199b66699bda3d0b543ecbea81f3c6f038d114653b0dff3ed965917af\",\"urls\":[\"bzz-raw://fc82178453c6503c722989f6d4f6d088f79e77845601893e1a2357d9b3b54e7b\",\"dweb:/ipfs/QmSbXo1w66Jw3TfbSenyJH7J7vKrrKnbQg2E3rDyQSSefK\"]},\"/home/kowal/Projects/sovryn/keep-ecdsa/solidity/contracts/AbstractBonding.sol\":{\"keccak256\":\"0xfa1dc6ce7275597b41bf827cbaccba02356221fd4582043f4202a564283a8c94\",\"urls\":[\"bzz-raw://1467ee58821e268916c01214a60ba89a6c1f86552b6804c03e6a24ff8c2324fa\",\"dweb:/ipfs/QmPWHY2yazh7XfTnYCEwZBvoAShK7vkjCXGikMeE9UCaaG\"]},\"/home/kowal/Projects/sovryn/keep-ecdsa/solidity/contracts/BondedECDSAKeep.sol\":{\"keccak256\":\"0x034a5dc5aafcde1958d66e687e0ffb459ee2e674afa088974f26a6a2ec203c61\",\"urls\":[\"bzz-raw://692686e7b6b9d673c5fcd2016fa027f60cf01f42888dc54761323a31fe5f62ec\",\"dweb:/ipfs/QmYdpb79ra3jiNaSEdoZhdQxcNY648ZbXd9QJGxGVeotDi\"]},\"/home/kowal/Projects/sovryn/keep-ecdsa/solidity/contracts/BondedECDSAKeepFactory.sol\":{\"keccak256\":\"0x8a2458db2682e68dd06cda051ca4a5e7da88940f8627f0e5ecd75684dfd167ce\",\"urls\":[\"bzz-raw://8d469b3b2e3200ce7c19df102e953149cc0dc8e19ebef198fd7ae30b352ca6ac\",\"dweb:/ipfs/QmfAaEMh7dZbK51jk4ANLcYKifazCoPoafs1ahxbeMCfhk\"]},\"/home/kowal/Projects/sovryn/keep-ecdsa/solidity/contracts/CandidatesPools.sol\":{\"keccak256\":\"0x8e7bdbebd3dfe16d075d516ea52cd8c9438a2e8a8fb7254a7f29a06ddd941fcc\",\"urls\":[\"bzz-raw://2cbd86e98e09ee38b70f1d5e2bf4fbec12755131b89640ebacdd2cb47072ced0\",\"dweb:/ipfs/QmTXj4eZmpfTQNMxfyiXsi6ge4RyUqBnNsv6QrF7xPQQ5A\"]},\"/home/kowal/Projects/sovryn/keep-ecdsa/solidity/contracts/CloneFactory.sol\":{\"keccak256\":\"0xc474d7a9994b783d28962cf9b22fa015563d2a94461af48b7e559439caf53ef1\",\"urls\":[\"bzz-raw://8fe135f81f3f4ab4e13c5a86c2a0853309d91918159b3533c0c483c889035243\",\"dweb:/ipfs/QmVg1wsXggXH4chee9HuwuwdUjaj75WHBrv17ESCjwAfJh\"]},\"/home/kowal/Projects/sovryn/keep-ecdsa/solidity/contracts/GroupSelectionSeed.sol\":{\"keccak256\":\"0x105193bb6372cd0928ee93e1e3325c1f083dc11517ffc1efbf6957943be85316\",\"urls\":[\"bzz-raw://54baf3a168f857eb1091fdeaac8457d725992ca434f1a3e56409136a9cd5c522\",\"dweb:/ipfs/QmT7R8JXJsKDXjK3ie54oEcPo7PD9ARHYWPJD6ZcxdwvZz\"]},\"/home/kowal/Projects/sovryn/keep-ecdsa/solidity/contracts/KeepBonding.sol\":{\"keccak256\":\"0x9d735436f51788923fdb965c03f74ff9781e91351998f8f6335cfcd0b5547c3a\",\"urls\":[\"bzz-raw://d013bde0b2aeb22fb561540c17dc99efe2ff0fef0bd1b60672dfcbcd78a68d9b\",\"dweb:/ipfs/QmeWWdKv6z7QXNpzHAnFwcUUPWAcDeYiL6T7VeHtPYCepr\"]},\"/home/kowal/Projects/sovryn/keep-ecdsa/solidity/contracts/KeepCreator.sol\":{\"keccak256\":\"0x0e0f7f07e0da6300e3f7ab54a04f657f6b639ca6d8ca173ed0c72ed984f9ff29\",\"urls\":[\"bzz-raw://c194e148dd7a9722840f191bccfd8bd0e587980e224d09ed75b763394ad706e3\",\"dweb:/ipfs/QmehudS123595jGdobFd5i54rH8fEKqT7ExBmsg9sBxXmC\"]},\"/home/kowal/Projects/sovryn/keep-ecdsa/solidity/contracts/api/IBondedECDSAKeep.sol\":{\"keccak256\":\"0x7ecd15b29cfe5da88d5b37e290fb9b49505e7dc49c311b76ab1ead34b2455eaf\",\"urls\":[\"bzz-raw://db6e10bf48ed6c451bc9fb43576f43f8bc2888bfba874eab58aed1bbe2dae7ce\",\"dweb:/ipfs/QmW9KhkuBLek9WhNnhc8CrX4N4msBndb9FQh2ypv71UDvs\"]},\"/home/kowal/Projects/sovryn/keep-ecdsa/solidity/contracts/api/IBondedECDSAKeepFactory.sol\":{\"keccak256\":\"0x07ae883d2a0f5b7fe2c0b055206f565da51b04d1ca574ae4d4da3a19e6badcdb\",\"urls\":[\"bzz-raw://038b4f5b45b2d676ef7411b69cadd490d5789e3d245afd78aaa72177ce042572\",\"dweb:/ipfs/QmRaBYU4HCDSH33a3gpLN4t2TsyNaFRxLKv3WeAZEgk9Rr\"]},\"/home/kowal/Projects/sovryn/keep-ecdsa/solidity/contracts/api/IBondingManagement.sol\":{\"keccak256\":\"0x00888f7edf918020ce70acf3ab6a17ff3d4b410a5413bf7ded1d3d5f21de1fb7\",\"urls\":[\"bzz-raw://a8e5989318021ed8866f03537c649c12fb75831859df5198028e5a4430494799\",\"dweb:/ipfs/QmWCPALgJvVfq3aveqEyRcquEckdeHFFbD7ATuraMAVaer\"]},\"/home/kowal/Projects/sovryn/keep-ecdsa/solidity/contracts/test/BondedECDSAKeepFactoryVendorStub.sol\":{\"keccak256\":\"0xb0fb20be5be11058514f2d365b9a851e51222a189974ef4976ace8e5581c5afe\",\"urls\":[\"bzz-raw://dec8244b4b8d2a111593ec370c1b33f2d0849b89d0d615028beb4845e652fa17\",\"dweb:/ipfs/QmSxaRYQgQP71bdmubDjcgBGGtg9qZbtv5tW3tpUWpUCPm\"]},\"@keep-network/keep-core/contracts/Authorizations.sol\":{\"keccak256\":\"0xd49b3840507c924cc37ac2da48bf1549013a79d84daf2cb106b4d4b9c6096e7a\",\"urls\":[\"bzz-raw://2b740d974564d027f9df04253f71ce2314839a682beac926b778e0f7ea59fbb5\",\"dweb:/ipfs/QmamRuiYLpt2fCUPrQypkvrf7BrCsdV12QgaSHQYPsJHT2\"]},\"@keep-network/keep-core/contracts/GrantStakingPolicy.sol\":{\"keccak256\":\"0x9d7604d5ccd4bf23b5aca39074183aabad98ce47bc74edd2023e7e0b1be6d1b5\",\"urls\":[\"bzz-raw://92fb21051ecfa9b9885b775c2cff1778cfbab3afe3b436e234a4f08181277983\",\"dweb:/ipfs/QmPxQUWpL6iFcydJxyFsZjmWRnxziPVA2rqrgwhn6F7Tfe\"]},\"@keep-network/keep-core/contracts/IRandomBeacon.sol\":{\"keccak256\":\"0x7582dc270725d9d15dbc2e13b263fa2f2c3164d9c2ac4a452b2a891a8285262a\",\"urls\":[\"bzz-raw://25cfc654326961065b23bd76da82b9c86354b30bf0b37d16c4734bdc3033b84d\",\"dweb:/ipfs/QmYvebB1arUVwod3speEHWZx6qZNaPuB94XhSFR6hPw8a6\"]},\"@keep-network/keep-core/contracts/KeepRegistry.sol\":{\"keccak256\":\"0x723cf0ade28c4158935e6c22f1da1ee98252ad1bc1cac30fe8fa462fe36ea886\",\"urls\":[\"bzz-raw://6244a0370c42ae7bac430e646694d64b80397e02209ae9ec1e01776e6b5a49fc\",\"dweb:/ipfs/QmcygjqGFv81ZpyKTUwdMRt1VdnM9H6pGUuKAP5YLmL5U8\"]},\"@keep-network/keep-core/contracts/KeepToken.sol\":{\"keccak256\":\"0x50defd2a00e356ed8eaf9aba405719f567c2da0164db5cdeadd68d155f6ded3b\",\"urls\":[\"bzz-raw://dbc8fb24f311c2dc95a26b1a1dfc9c7d93c634d32ef623fc23f799da5988fafb\",\"dweb:/ipfs/QmShZ3FtP2WUC9r1rbka8BWSf6oFkBbuxgxiDqhpwxo6zZ\"]},\"@keep-network/keep-core/contracts/ManagedGrant.sol\":{\"keccak256\":\"0x47f1cccc9f9c095b34ca514ae25cc467bbced15251b06f39896e0237e7fdec7c\",\"urls\":[\"bzz-raw://cad43bec15804ff17bd40fdee3598676f716b60204da9be163f15f45135ad250\",\"dweb:/ipfs/QmYHYEfR2UPZJZpsDhN2o1iD7drVSz8oqbYQFVT4G2oKqr\"]},\"@keep-network/keep-core/contracts/StakeDelegatable.sol\":{\"keccak256\":\"0xa1d81d17bc9f6bcc5878fb9b8acfdf7797c1561bf35111bac6bdbc3bba2c62aa\",\"urls\":[\"bzz-raw://deca3e5444cd9a5546818854009f9ac8c8e58479609de1a128ca73863f10ae7a\",\"dweb:/ipfs/QmcWYJkcHxsmCEhxRz6W5gSBgH597VYZgEaog9pzoLyZtt\"]},\"@keep-network/keep-core/contracts/TokenGrant.sol\":{\"keccak256\":\"0xad97f1a667f3be66dc6904fb7925e940ca57e4c88d38ae960672d95d7911bf6f\",\"urls\":[\"bzz-raw://f3f6b377ddcc2ad2b47811f115c20bdf6a6a208066afaebe027ac4eb165ca231\",\"dweb:/ipfs/QmXNSkqCDoBS1KGQbQ3PqXr1iMPgkPNWLcEKiBrV8u5LeW\"]},\"@keep-network/keep-core/contracts/TokenGrantStake.sol\":{\"keccak256\":\"0x014bbb7f336388024480415391cad745ec52cd255cd2740c890948246ab4d524\",\"urls\":[\"bzz-raw://745d488e7271fe9c71879c09fd09eb96b2193346adfddbb59638b80610707be3\",\"dweb:/ipfs/QmR3DyUzhTjE971QovXxMchRkUD3eHUj5S73Eahrf2Wyw8\"]},\"@keep-network/keep-core/contracts/TokenSender.sol\":{\"keccak256\":\"0xe50a3a7d2f30e8801d8b608c462f65c868e17ff8b2f0db3448876adf0f288117\",\"urls\":[\"bzz-raw://f040546b183d26a9e26adfc01a6425eb6bce1cec1ab5b142aa360c8096ede385\",\"dweb:/ipfs/QmdRa8huRUmsTTvwnWPBF7V2gTQAGsGn3VFUeBfbisBszw\"]},\"@keep-network/keep-core/contracts/TokenStaking.sol\":{\"keccak256\":\"0x957a8b500117fd8c74466e9c2cfd13e295e5cd66107bda1e5fdea1871248d0e8\",\"urls\":[\"bzz-raw://c6cca24bbf724e77009cb683d1715b8ffb1faa7ad2089156d6fc8d600a397fd4\",\"dweb:/ipfs/QmeVnKTgFhfVSfEgCcoFD86MfGUB9FTD8cbi5SxX2Vmy67\"]},\"@keep-network/keep-core/contracts/TokenStakingEscrow.sol\":{\"keccak256\":\"0x152a565d564bee09ea3f0f363c912fe3361966bf8d60f14ebcb8bf593d3b140e\",\"urls\":[\"bzz-raw://78ffe4daadcfeacc49c45c4e9879f62c2df3bdd00587b033492ee901537976f1\",\"dweb:/ipfs/QmPwmSu4XF7KpHnC6bqBTkrkjA6CUnC8h5PML9DqkAzLW8\"]},\"@keep-network/keep-core/contracts/libraries/RolesLookup.sol\":{\"keccak256\":\"0x4622ccfb359f6478d3e87fb99f755dcebde1b5040662f3572ab8c8d50d2f8bc0\",\"urls\":[\"bzz-raw://cee3570c755b0a30412af08ce4663f85078b10a0eccf6808bec125897c7ead8e\",\"dweb:/ipfs/Qmc9EAjLfBYXfhtd24uNFzu1XKrPaqS5ismF4ZGsPyiBuU\"]},\"@keep-network/keep-core/contracts/libraries/grant/UnlockingSchedule.sol\":{\"keccak256\":\"0x26f8fe158e3f661bc54fc42a50a1686ef92dd18316a03592bafa2db6a2af9c3f\",\"urls\":[\"bzz-raw://718b4a48d7a50c151328cd15e91e9b9b4cba0db7f7b6b06533709614f9811a55\",\"dweb:/ipfs/QmYyTN6cLZiWumwE6jt2yDHNtc6DMCXaEntgKAN3zqp8yX\"]},\"@keep-network/keep-core/contracts/libraries/staking/GrantStaking.sol\":{\"keccak256\":\"0x96253ba2eb78b83a04dd48f0a7ff6083ca72d6e4a27dec0888959c1b3b0be9aa\",\"urls\":[\"bzz-raw://a2ad3ddeba9de2f24b1c1c0339baf52a0b0446248ddfc0554d8fb71ce2057c0f\",\"dweb:/ipfs/QmdYxpcxm8TG7i3qYswudhxvff8hnARSR1GsVcY2fjUpzh\"]},\"@keep-network/keep-core/contracts/libraries/staking/LockUtils.sol\":{\"keccak256\":\"0x0fbd9a4d82cf8803f00cb59cca9580d379c8d98a759b8a6d74f75f01c19fc635\",\"urls\":[\"bzz-raw://f2df931f0a11d4f63aa1f6193419606711a24ce7381dd15db52419c783dc7952\",\"dweb:/ipfs/QmRMGWSbfYPaxppBb7w2cQHpAwDc4T9MBmpZqU396i8hKK\"]},\"@keep-network/keep-core/contracts/libraries/staking/Locks.sol\":{\"keccak256\":\"0xf45306074f9e893646c21e53954891e29c8011887545d8bbbcab7ef74558b18a\",\"urls\":[\"bzz-raw://971d3c54afde9050e455e79ec42b28d86a101bec8afab30e22b1fa4bfc110cc4\",\"dweb:/ipfs/QmfGTvrbc8dJXaxsxAmZM6oU8AvP5V6C2PQ5JF3gCJC81m\"]},\"@keep-network/keep-core/contracts/libraries/staking/MinimumStakeSchedule.sol\":{\"keccak256\":\"0x31a399a918eba21f0002019a70b1b68c9610a5a4977fcd874b86d4965eb974c3\",\"urls\":[\"bzz-raw://acbe55a89d5e6f7b6d4add0764e7b47acbdc31afc0d5b1f211b45546d3a5cd6c\",\"dweb:/ipfs/QmcXSUaLV7d117ZvyMnRB3MVXVEGy62ccB5u6d8h1Sm792\"]},\"@keep-network/keep-core/contracts/libraries/staking/TopUps.sol\":{\"keccak256\":\"0xe3a3c8d5e542f4f8ac8fdab92de57081257e1c07288e0e592cfc27551085e07f\",\"urls\":[\"bzz-raw://4cffa006da7f76868bcca1d107be436f3cd83339ff76df79c3e92a029e7ad66a\",\"dweb:/ipfs/QmZ5AArQ3gKBeXqGwGnSH45BQZQpGvjuQ4LnNaarrLrdy5\"]},\"@keep-network/keep-core/contracts/utils/AddressArrayUtils.sol\":{\"keccak256\":\"0xfb546b43ffd00d565d8440b6d221f5f046222e95469e33044665a56e79fcde48\",\"urls\":[\"bzz-raw://1f947ef8956e26d564cffd73a4f0dcdb02db1d7a46774d4e8876328116f6b663\",\"dweb:/ipfs/QmYUpg3JhhkogsY5nnjyMg6TEwoqRzTkJAWdhQGSbYqMH3\"]},\"@keep-network/keep-core/contracts/utils/BytesLib.sol\":{\"keccak256\":\"0xf5c726e1c77dea37b9ea1edd9bc7b4eebfafe33ce766a2607eb37d7144e4d68c\",\"urls\":[\"bzz-raw://32f61bad1923d749aff36ad9f62929e603ed27832348ba58d44d01561339d761\",\"dweb:/ipfs/QmWvfwapwUr9SnnEWXdmpo4r2TtVPFJFSUBXKJQpLZkYp1\"]},\"@keep-network/keep-core/contracts/utils/OperatorParams.sol\":{\"keccak256\":\"0xc13cbf7a6ad4740a8ad6373229b20b66eb4cc3d7aa9870161765ab8197513ab7\",\"urls\":[\"bzz-raw://e8343bc058fcee610863777792a25608549d80e126a05d076481dedb48587565\",\"dweb:/ipfs/QmR8ztc4StcK4yw7QmXj2b9TtS3Qs1BERrqDLtPZmUiffS\"]},\"@keep-network/keep-core/contracts/utils/PercentUtils.sol\":{\"keccak256\":\"0x696b15997a739e6c47c5bc29e1f9023998bb188405221a6b337377bca4ab3f68\",\"urls\":[\"bzz-raw://e93e2287fe6b6e1c5cc45ebc92b9d682e19a5b1302e00cb037391da753282bbf\",\"dweb:/ipfs/QmRXmEopRWNaL7mvY5nTyNNob3EPHF67R6Nxhm3F4VsDoo\"]},\"@keep-network/sortition-pools/contracts/AbstractSortitionPool.sol\":{\"keccak256\":\"0xe4b8c582f8ab1384e6ebd7acd2865bb95cc920bd945bb79f1ffa4ab5faf68a43\",\"urls\":[\"bzz-raw://6db8b7341834487a51359e8905e217a6c5a2a4b57af256c8432bc4df88c68798\",\"dweb:/ipfs/Qmf8JFkxJUiMxSkFfSr8KuFce6rLcQhggLrXQAgdn8Wrfj\"]},\"@keep-network/sortition-pools/contracts/BondedSortitionPool.sol\":{\"keccak256\":\"0xbae24009aa6ca4eae00c43632fe039b6349698949e6833b03b78e15c518d3609\",\"urls\":[\"bzz-raw://aa9b88974dd10438b46dede91e167bb74a63338733bd7a745988e892aa459046\",\"dweb:/ipfs/QmYwoXXLW3NmsBha2FhBLrqCmMGZXpUvepZaJ3xRcTNJW2\"]},\"@keep-network/sortition-pools/contracts/BondedSortitionPoolFactory.sol\":{\"keccak256\":\"0x975fc72c7a883b2619cd60cdb295fdb694475fb14ab28e815808d26f69073417\",\"urls\":[\"bzz-raw://6493092041775c8dba5c944bf22c8e2349a9a7e7aa700c77dbe7ca7449f18d9a\",\"dweb:/ipfs/QmbNKytR1wts8ZPcbD9sd399kcqbxLtdR39Xn3cKWhRPNp\"]},\"@keep-network/sortition-pools/contracts/Branch.sol\":{\"keccak256\":\"0x5a25a20ada831bae7d18c81b5c5064237d62b6c85dc5058f2026b4e7f54b764b\",\"urls\":[\"bzz-raw://59a54e0720c7ad0f901d9ca1c8109557b73a53102078622cbe18bdeee0bb0130\",\"dweb:/ipfs/QmZsbANSbvEAz52Je5Nj9zg6v8eqUKxfhPM2RbbpfWrjcd\"]},\"@keep-network/sortition-pools/contracts/DynamicArray.sol\":{\"keccak256\":\"0x066ce3500e921ac158f43fa03fcf4db7972d2e822fb0a4837047a46cea955838\",\"urls\":[\"bzz-raw://01dbda706114d3fc665c8f0e66b55ffb7d7e5ac07b080941c3aa269fe77950a5\",\"dweb:/ipfs/QmZYJggQVRX9JGrjrrEwGfagXYa36GkGxqTYcFGts7XBpe\"]},\"@keep-network/sortition-pools/contracts/GasStation.sol\":{\"keccak256\":\"0x7d308db5dc6172a6921b9a85876f8d1bcff7bab312c48c7622c40ce125cbbde5\",\"urls\":[\"bzz-raw://603855f1e71fb4a494ecb752d7c5056be58b541eae45f77ff823c96624b2191b\",\"dweb:/ipfs/QmXYdmDBdsfWAxQEjeZN3sJ6HfaeBH5BJ4YZvhVz8Nns3b\"]},\"@keep-network/sortition-pools/contracts/Interval.sol\":{\"keccak256\":\"0x2f6427bc88a1394183267371d010902cbc4881f446e8331362800d6858167138\",\"urls\":[\"bzz-raw://da900040f884c3fcdf45bb5176a6717428c69572feb3a58e512a870a0b9f3abf\",\"dweb:/ipfs/QmaJetk4AUDAfPaocX5nxAfgpnAccRFaYUEHXBXKPjkHZR\"]},\"@keep-network/sortition-pools/contracts/Leaf.sol\":{\"keccak256\":\"0xed4661ae7b2946d79e102ae0465905ac73818387647ea7c531d99c5848208af2\",\"urls\":[\"bzz-raw://699f16bffd042beaf313a99d50fe2e2271303798fb23c8d91555c86f97df39ab\",\"dweb:/ipfs/QmYhxivxadGS2TCFXSq3XDZkHmbLagbwi66mKup3KBSWbg\"]},\"@keep-network/sortition-pools/contracts/Position.sol\":{\"keccak256\":\"0x0240fd41cc284d8ebfada3433920dea826dac5d9e3b2d31d43c808bc24b0611b\",\"urls\":[\"bzz-raw://2901fcbfa2f21a1a81c78f40c2172ac15676303ab1357396a04d965224ca67e9\",\"dweb:/ipfs/QmcDa2o51QWZWZCvxTLNMV1mfe3iuANDwmzaZrDpV8Ke8V\"]},\"@keep-network/sortition-pools/contracts/RNG.sol\":{\"keccak256\":\"0x5bf17e705f2e5c082567bdc5d1b352e3fafc0a170f19f0d0f53e0c4655b1980a\",\"urls\":[\"bzz-raw://3db885c8c7856ac8d122c208912ba045abb380574678df6584f4f63329f3ea53\",\"dweb:/ipfs/QmXKWpJkhaeW6RNDY3ABAVvRR7eUTvhJxytufSkTkWLgHx\"]},\"@keep-network/sortition-pools/contracts/SortitionTree.sol\":{\"keccak256\":\"0x03a7f50efc5148f155b935106c869c0f1ebacc9e0ab09a2461a404e2b12b8053\",\"urls\":[\"bzz-raw://2b4a02be0ad34b14125c208e6ce4d7971490af24d156ca7e663bf2f1505eacc9\",\"dweb:/ipfs/QmXiZjTqzKTPkMPqFNoPYeRo5p1rUyB6kCRiFBt89xAsHw\"]},\"@keep-network/sortition-pools/contracts/StackLib.sol\":{\"keccak256\":\"0xff1cb7ce8eee34d1bcd841136088c955d61bb90d465407d5801e1ffd2f4f2c78\",\"urls\":[\"bzz-raw://f7e5586e5027b7948960ac2baca141794e2e8ca7644fc7033032adc4aee96e38\",\"dweb:/ipfs/QmXqfRHKEXH2tUy8QqAzrwtesrnR5nmi7acv4NLsng2ujL\"]},\"@keep-network/sortition-pools/contracts/api/IBonding.sol\":{\"keccak256\":\"0xe62ea5302af749042e419ad1643f0e9788bbbefe82a5c5d0b3e77a4a5a4b241e\",\"urls\":[\"bzz-raw://3ac748582f07716200c2f500aee47a8c2a79c1144fe3454e112290906cb3dfbf\",\"dweb:/ipfs/QmdNqK1V25QB1asWyWJfsSAVxorTjBp8DXG5eXw71e31rM\"]},\"@keep-network/sortition-pools/contracts/api/IStaking.sol\":{\"keccak256\":\"0xf7cc15fb64346774c97f93b7f626d7adcf5a288377f44048906d93511c5ca3cd\",\"urls\":[\"bzz-raw://f9a04f30cad1f821488043c255ee5516c0d84645596f0a9b90fc4a90a03943ce\",\"dweb:/ipfs/QmPaoiRZfA1NpzHVT69sV79ygeXGEx1ZZ3rGdmV2Gvymv3\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x4ccf2d7b51873db1ccfd54ca2adae5eac3b184f9699911ed4490438419f1c690\",\"urls\":[\"bzz-raw://d62d769b2219d5de39013093412623e624fa887f871826ea3bae6052ee893610\",\"dweb:/ipfs/QmV3yVktya1s617QmuzQR2CfuJgUi3dR2xEZY9ecmqZ2G1\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xf79fb10e8235770eb4aea7249034076a3cc9f9119ad944fc48705bae9c9d20dc\",\"urls\":[\"bzz-raw://cd3429aa9a4878dcf6c73faa32c3722f4013d4be012ece543b246faa6b50f55c\",\"dweb:/ipfs/QmS55hgTvNEAKinus19m65CB4wcymN8EiUPFpRx5tYJ1i2\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x852793a3c2f86d336a683b30d688ec3dcfc57451af5a2bf5975cda3b7191a901\",\"urls\":[\"bzz-raw://4f5b57664069671648fb81f55b0082faecdf1b2f159eec6b1fa6cef9b7d73bc5\",\"dweb:/ipfs/QmcyytaLs7zFdb4Uu7C5PmQRhQdB3wA3fUdkV6mkYfdDFH\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20Burnable.sol\":{\"keccak256\":\"0xa5ebf3344a36eb60e723e0764d85251c496e15e4b2d737b56415502b559a1765\",\"urls\":[\"bzz-raw://c543fd1fc299b7d32c658c86118ff2d0e7897a7c8b9d5f576fe6c0271c28961b\",\"dweb:/ipfs/QmNMrjLnsC4JP54aXLHhpra5NPTAs8rrd2bgXfYYYdJMhS\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol\":{\"keccak256\":\"0xc61b3603089b09a730d8ca72e9133a496cc4405da40e9b87c12f073245d774bf\",\"urls\":[\"bzz-raw://de8bb0003d53de236913f0e0102e7a9d015e02098f2495edd000f207fe2be2f4\",\"dweb:/ipfs/QmbtwNwAJEehWWL7yGGyyMoenQvcqtz91pqLgQPpLRoLYC\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x90e8c2521653bbb1768b05889c5760031e688d9cd361f167489b89215e201b95\",\"urls\":[\"bzz-raw://d0abb99bb8bfc2bc0a89902b8ed1dc0442ad08cc78cee64c291b3df6a27bcccc\",\"dweb:/ipfs/QmP5NaEwZthQeM2ESz4WTT3osrP7jhbvu7ocbttBi2JAw6\"]},\"openzeppelin-solidity/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xf6f89424e17870561dc23c5933c55c5726b66a68d51ad2a2c00c569a5f02f507\",\"urls\":[\"bzz-raw://005657a7ffbf6d12726ac0167b55be965dc473d43f061b605f883a54cc00ab4f\",\"dweb:/ipfs/QmaBzyvDQyNnn6DXQYewEtN9Go85orikSnW9PwNWqUGPEX\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0xf3358e5819ca73357abd6c90bdfffd0474af54364897f6b3e3234c4b71fbe9a1\",\"urls\":[\"bzz-raw://75ae8d04454d1511a2ed986cc8585736f05c5c25280683b3d24712a9f414a4bf\",\"dweb:/ipfs/Qmb3kNCoBUZdah1AgBBD4zMk898j5Qw8ahT1w5cCMYp5Y3\"]},\"openzeppelin-solidity/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x0441ff2b36d503f3a29d28d3754291f119064f4973d5c780698143d919037a78\",\"urls\":[\"bzz-raw://af27dd68d2371e68c8ed8cf297ec6d832bf906742d53367b70399ba918060cb7\",\"dweb:/ipfs/QmcMMjZceFepXgRrzSx577oWwt7SCSFzoqZiTF7tTxquF7\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516137fd3803806137fd833981810160405260c081101561003357600080fd5b810190808051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291905050508585858585858186806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050600160038190555080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f4574c8c75d6e88acd28f7e467dac97b5c60c3838d9dad993900bdf402152228e6006819055505084600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050505050505050506135ae8061024f6000396000f3fe6080604052600436106101e35760003560e01c806392ae584a11610102578063b7a6f48311610095578063d14fede111610064578063d14fede114610b9a578063d870c03414610bff578063ebcbb39f14610c68578063eca4a80d14610ccd576101e3565b8063b7a6f483146109eb578063b8ee915614610a74578063bc2c289f14610ac3578063ca050cfd14610aee576101e3565b8063a5a53fb5116100d1578063a5a53fb51461093f578063a5b310551461096a578063aa7517e114610995578063b2dc7593146109c0576101e3565b806392ae584a146107a9578063a10132ad146107fa578063a23af33014610825578063a3c28a13146108ae576101e3565b8063514899851161017a57806367450a911161014957806367450a91146105fc57806370a082311461069e57806379a382e9146107035780638701af421461072e576101e3565b806351489985146104885780635b0d5b8e146104b35780635c1c07101461053c5780635cef8417146105a5576101e3565b8063356e0728116101b6578063356e07281461036257806336c2a0001461039d578063384004001461040657806347b6930514610431576101e3565b806309211ceb146101f55780631133fd2c14610286578063202bb9f0146102dd57806321f74e5614610358575b34600560008282540192505081905550005b34801561020157600080fd5b506102446004803603602081101561021857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d3e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561029257600080fd5b5061029b610e8b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102e957600080fd5b506103166004803603602081101561030057600080fd5b8101908080359060200190929190505050610eb1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610360610f6c565b005b34801561036e57600080fd5b5061039b6004803603602081101561038557600080fd5b81019080803590602001909291905050506111fe565b005b3480156103a957600080fd5b506103ec600480360360208110156103c057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506112cb565b604051808215151515815260200191505060405180910390f35b34801561041257600080fd5b5061041b6113e2565b6040518082815260200191505060405180910390f35b34801561043d57600080fd5b506104466114c4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561049457600080fd5b5061049d6114f5565b6040518082815260200191505060405180910390f35b3480156104bf57600080fd5b50610522600480360360408110156104d657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506115ac565b604051808215151515815260200191505060405180910390f35b34801561054857600080fd5b5061058b6004803603602081101561055f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611770565b604051808215151515815260200191505060405180910390f35b3480156105b157600080fd5b506105ba611887565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61065c6004803603608081101561061257600080fd5b810190808035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506118ac565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156106aa57600080fd5b506106ed600480360360208110156106c157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506118c0565b6040518082815260200191505060405180910390f35b34801561070f57600080fd5b506107186119a3565b6040518082815260200191505060405180910390f35b34801561073a57600080fd5b506107676004803603602081101561075157600080fd5b81019080803590602001909291905050506119a9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156107b557600080fd5b506107f8600480360360208110156107cc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506119e5565b005b34801561080657600080fd5b5061080f611b50565b6040518082815260200191505060405180910390f35b34801561083157600080fd5b506108946004803603604081101561084857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b56565b604051808215151515815260200191505060405180910390f35b3480156108ba57600080fd5b506108fd600480360360208110156108d157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611c21565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561094b57600080fd5b50610954611e90565b6040518082815260200191505060405180910390f35b34801561097657600080fd5b5061097f611e9c565b6040518082815260200191505060405180910390f35b3480156109a157600080fd5b506109aa611ea2565b6040518082815260200191505060405180910390f35b3480156109cc57600080fd5b506109d5611eaf565b6040518082815260200191505060405180910390f35b3480156109f757600080fd5b50610a5a60048036036040811015610a0e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611ebc565b604051808215151515815260200191505060405180910390f35b348015610a8057600080fd5b50610ac160048036036060811015610a9757600080fd5b81019080803590602001909291908035906020019092919080359060200190929190505050612080565b005b348015610acf57600080fd5b50610ad8612107565b6040518082815260200191505060405180910390f35b610b58600480360360a0811015610b0457600080fd5b810190808035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190505050612116565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610ba657600080fd5b50610be960048036036020811015610bbd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612a43565b6040518082815260200191505060405180910390f35b348015610c0b57600080fd5b50610c4e60048036036020811015610c2257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612a8c565b604051808215151515815260200191505060405180910390f35b348015610c7457600080fd5b50610cb760048036036020811015610c8b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612ad7565b6040518082815260200191505060405180910390f35b348015610cd957600080fd5b50610d3c60048036036040811015610cf057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612b69565b005b60008073ffffffffffffffffffffffffffffffffffffffff16600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610e24576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061350c6021913960400191505060405180910390fd5b600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006001805490508210610f2d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f4f7574206f6620626f756e64732e00000000000000000000000000000000000081525060200191505060405180910390fd5b60018281548110610f3a57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600160036000828254019250508190555060006003549050610f9934600554612c0d90919063ffffffff16565b6005819055506000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d13f13916175306040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561101657600080fd5b505afa15801561102a573d6000803e3d6000fd5b505050506040513d602081101561104057600080fd5b810190808051906020019092919050505090508060055410156110ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806135586022913960400191505060405180910390fd5b6110c381600554612c9590919063ffffffff16565b600581905550600060606110d683612d1e565b915091508161118157806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561114657808201518184015260208101905061112b565b50505050905090810190601f1680156111735780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50505060035481146111fb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081525060200191505060405180910390fd5b50565b3373ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146112c1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f43616c6c6572206973206e6f74207468652072616e646f6d20626561636f6e0081525060200191505060405180910390fd5b8060068190555050565b6000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ef1f966183306040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b1580156113a057600080fd5b505afa1580156113b4573d6000803e3d6000fd5b505050506040513d60208110156113ca57600080fd5b81019080805190602001909291905050509050919050565b600080600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d13f13916175306040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561145a57600080fd5b505afa15801561146e573d6000803e3d6000fd5b505050506040513d602081101561148457600080fd5b810190808051906020019092919050505090506005548111156114bb576114b660055482612c9590919063ffffffff16565b6114be565b60005b91505090565b6000803073ffffffffffffffffffffffffffffffffffffffff16905064e8d4a5100081816114ee57fe5b0691505090565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d13f13916175306040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561156c57600080fd5b505afa158015611580573d6000803e3d6000fd5b505050506040513d602081101561159657600080fd5b8101908080519060200190929190505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff16600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561164a576000905061176a565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663b4766856856040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561172b57600080fd5b505afa15801561173f573d6000803e3d6000fd5b505050506040513d602081101561175557600080fd5b81019080805190602001909291905050509150505b92915050565b6000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166310a63ec083306040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b15801561184557600080fd5b505afa158015611859573d6000803e3d6000fd5b505050506040513d602081101561186f57600080fd5b81019080805190602001909291905050509050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006118b66114c4565b9050949350505050565b6000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561196157600080fd5b505afa158015611975573d6000803e3d6000fd5b505050506040513d602081101561198b57600080fd5b81019080805190602001909291905050509050919050565b60065481565b600181815481106119b657fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006119f082610d3e565b905060003390508173ffffffffffffffffffffffffffffffffffffffff1663f7186ce0826040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015611a7457600080fd5b505afa158015611a88573d6000803e3d6000fd5b505050506040513d6020811015611a9e57600080fd5b8101908080519060200190929190505050611b4b578173ffffffffffffffffffffffffffffffffffffffff16631ae0e73d826040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b158015611b3257600080fd5b505af1158015611b46573d6000803e3d6000fd5b505050505b505050565b61753081565b6000611b628383612ec4565b73ffffffffffffffffffffffffffffffffffffffff1663e686440f846040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015611bde57600080fd5b505afa158015611bf2573d6000803e3d6000fd5b505050506040513d6020811015611c0857600080fd5b8101908080519060200190929190505050905092915050565b60008073ffffffffffffffffffffffffffffffffffffffff16600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611d23576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f536f72746974696f6e20706f6f6c20616c72656164792065786973747300000081525060200191505060405180910390fd5b6000611d2e83612f8d565b905080600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff167f693c68cd964926544cbaee02b00d9352aa98c6de2484515e8bd74130c005e6af82604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a2600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b670de0b6b3a764000081565b60055481565b6801158e460913d0000081565b6000600180549050905090565b60008073ffffffffffffffffffffffffffffffffffffffff16600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611f5a576000905061207a565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff16636b1906f8856040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561203b57600080fd5b505afa15801561204f573d6000803e3d6000fd5b505050506040513d602081101561206557600080fd5b81019080805190602001909291905050509150505b92915050565b600061208c84846131b5565b905061209733610d3e565b73ffffffffffffffffffffffffffffffffffffffff166334ce30f0826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b1580156120e957600080fd5b505af11580156120fd573d6000803e3d6000fd5b5050505050505050565b60006121116114f5565b905090565b6000600160036000828254019250508190555060006003549050600087116121a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f4d696e696d756d207369676e696e672067726f75702073697a6520697320310081525060200191505060405180910390fd5b601087111561221d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4d6178696d756d207369676e696e672067726f75702073697a6520697320313681525060200191505060405180910390fd5b60008611612276576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001806134e56027913960400191505060405180910390fd5b868611156122cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260358152602001806134876035913960400191505060405180910390fd5b600033905060006122df82610d3e565b905060006122ed878b6131b5565b905060008111612348576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806134bc6029913960400191505060405180910390fd5b612350612107565b3410156123a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b81526020018061345c602b913960400191505060405180910390fd5b6000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ec5ffac26040518163ffffffff1660e01b815260040160206040518083038186803b15801561241257600080fd5b505afa158015612426573d6000803e3d6000fd5b505050506040513d602081101561243c57600080fd5b8101908080519060200190929190505050905060608373ffffffffffffffffffffffffffffffffffffffff1663a2cca6a28d60065460001b85876040518563ffffffff1660e01b815260040180858152602001848152602001838152602001828152602001945050505050600060405180830381600087803b1580156124c157600080fd5b505af11580156124d5573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060208110156124ff57600080fd5b810190808051604051939291908464010000000082111561251f57600080fd5b8382019150602082018581111561253557600080fd5b825186602082028301116401000000008211171561255257600080fd5b8083526020830192505050908051906020019060200280838360005b8381101561258957808201518184015260208101905061256e565b5050505090500160405250505090506125a06131f7565b6125a8613287565b96508673ffffffffffffffffffffffffffffffffffffffff166379a804918b838e868d600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16306040518963ffffffff1660e01b8152600401808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018881526020018781526020018681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825289818151815260200191508051906020019060200280838360005b8381101561273e578082015181840152602081019050612723565b505050509050019950505050505050505050600060405180830381600087803b15801561276a57600080fd5b505af115801561277e573d6000803e3d6000fd5b5050505060008090505b8c8110156128f757600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d20a62fc8383815181106127da57fe5b60200260200101518a8b73ffffffffffffffffffffffffffffffffffffffff16888a6040518663ffffffff1660e01b8152600401808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200195505050505050600060405180830381600087803b1580156128d257600080fd5b505af11580156128e6573d6000803e3d6000fd5b505050508080600101915050612788565b508473ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff167f7c030f3f8c902fa5a59193f1e3c08ae7245fc0e3b7ab290b6a9548a57a46ac60848f6040518080602001838152602001828103825284818151815260200191508051906020019060200280838360005b838110156129a957808201518184015260208101905061298e565b50505050905001935050505060405180910390a450505050506003548114612a39576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081525060200191505060405180910390fd5b5095945050505050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600080600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054119050919050565b6000612ae282610d3e565b73ffffffffffffffffffffffffffffffffffffffff166396c82e576040518163ffffffff1660e01b815260040160206040518083038186803b158015612b2757600080fd5b505afa158015612b3b573d6000803e3d6000fd5b505050506040513d6020811015612b5157600080fd5b81019080805190602001909291905050509050919050565b612b738282612ec4565b73ffffffffffffffffffffffffffffffffffffffff16631c5b0762836040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b158015612bf157600080fd5b505af1158015612c05573d6000803e3d6000fd5b505050505050565b600080828401905083811015612c8b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600082821115612d0d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b60006060600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168330617530604051602401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001925050506040516020818303038152906040527fe1f95890000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b60208310612e535780518252602082019150602081019050602083039250612e30565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114612eb5576040519150601f19603f3d011682016040523d82523d6000602084013e612eba565b606091505b5091509150915091565b6000612ed08383611ebc565b612f25576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b81526020018061352d602b913960400191505060405180910390fd5b600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905092915050565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166356385578600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ec5ffac26040518163ffffffff1660e01b815260040160206040518083038186803b15801561307b57600080fd5b505afa15801561308f573d6000803e3d6000fd5b505050506040513d60208110156130a557600080fd5b81019080805190602001909291905050506801158e460913d00000670de0b6b3a76400006040518663ffffffff1660e01b8152600401808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200182815260200195505050505050602060405180830381600087803b15801561317357600080fd5b505af1158015613187573d6000803e3d6000fd5b505050506040513d602081101561319d57600080fd5b81019080805190602001909291905050509050919050565b60006131ef826131e160016131d38688612c0d90919063ffffffff16565b612c9590919063ffffffff16565b61336290919063ffffffff16565b905092915050565b60065430604051602001808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b8152601401925050506040516020818303038152906040528051906020012060001c600681905550600061326b34612d1e565b5090508061328457346005600082825401925050819055505b50565b60006132b36000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff166133f1565b905060018190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505042600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555090565b60008082116133d9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525060200191505060405180910390fd5b60008284816133e457fe5b0490508091505092915050565b6000808260601b90506040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528160148201527f5af43d82803e903d91602b57fd5bf3000000000000000000000000000000000060288201526037816000f09250505091905056fe496e73756666696369656e74207061796d656e7420666f72206f70656e696e672061206e6577206b656570486f6e657374207468726573686f6c64206d757374206265206c657373206f7220657175616c207468652067726f75702073697a65426f6e6420706572206d656d626572206d7573742062652067726561746572207468616e207a65726f486f6e657374207468726573686f6c64206d7573742062652067726561746572207468616e20304e6f20706f6f6c20666f756e6420666f7220746865206170706c69636174696f6e4f70657261746f72206e6f74207265676973746572656420666f7220746865206170706c69636174696f6e4e6f7420656e6f7567682066756e647320746f207472696767657220726573656564a265627a7a7231582061634b1c1a84392d73901e04f29b5b7c9318d8735d128b186efeaad13d987aee64736f6c63430005110032",
  "deployedBytecode": "0x6080604052600436106101e35760003560e01c806392ae584a11610102578063b7a6f48311610095578063d14fede111610064578063d14fede114610b9a578063d870c03414610bff578063ebcbb39f14610c68578063eca4a80d14610ccd576101e3565b8063b7a6f483146109eb578063b8ee915614610a74578063bc2c289f14610ac3578063ca050cfd14610aee576101e3565b8063a5a53fb5116100d1578063a5a53fb51461093f578063a5b310551461096a578063aa7517e114610995578063b2dc7593146109c0576101e3565b806392ae584a146107a9578063a10132ad146107fa578063a23af33014610825578063a3c28a13146108ae576101e3565b8063514899851161017a57806367450a911161014957806367450a91146105fc57806370a082311461069e57806379a382e9146107035780638701af421461072e576101e3565b806351489985146104885780635b0d5b8e146104b35780635c1c07101461053c5780635cef8417146105a5576101e3565b8063356e0728116101b6578063356e07281461036257806336c2a0001461039d578063384004001461040657806347b6930514610431576101e3565b806309211ceb146101f55780631133fd2c14610286578063202bb9f0146102dd57806321f74e5614610358575b34600560008282540192505081905550005b34801561020157600080fd5b506102446004803603602081101561021857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d3e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561029257600080fd5b5061029b610e8b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102e957600080fd5b506103166004803603602081101561030057600080fd5b8101908080359060200190929190505050610eb1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610360610f6c565b005b34801561036e57600080fd5b5061039b6004803603602081101561038557600080fd5b81019080803590602001909291905050506111fe565b005b3480156103a957600080fd5b506103ec600480360360208110156103c057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506112cb565b604051808215151515815260200191505060405180910390f35b34801561041257600080fd5b5061041b6113e2565b6040518082815260200191505060405180910390f35b34801561043d57600080fd5b506104466114c4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561049457600080fd5b5061049d6114f5565b6040518082815260200191505060405180910390f35b3480156104bf57600080fd5b50610522600480360360408110156104d657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506115ac565b604051808215151515815260200191505060405180910390f35b34801561054857600080fd5b5061058b6004803603602081101561055f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611770565b604051808215151515815260200191505060405180910390f35b3480156105b157600080fd5b506105ba611887565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61065c6004803603608081101561061257600080fd5b810190808035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506118ac565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156106aa57600080fd5b506106ed600480360360208110156106c157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506118c0565b6040518082815260200191505060405180910390f35b34801561070f57600080fd5b506107186119a3565b6040518082815260200191505060405180910390f35b34801561073a57600080fd5b506107676004803603602081101561075157600080fd5b81019080803590602001909291905050506119a9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156107b557600080fd5b506107f8600480360360208110156107cc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506119e5565b005b34801561080657600080fd5b5061080f611b50565b6040518082815260200191505060405180910390f35b34801561083157600080fd5b506108946004803603604081101561084857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b56565b604051808215151515815260200191505060405180910390f35b3480156108ba57600080fd5b506108fd600480360360208110156108d157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611c21565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561094b57600080fd5b50610954611e90565b6040518082815260200191505060405180910390f35b34801561097657600080fd5b5061097f611e9c565b6040518082815260200191505060405180910390f35b3480156109a157600080fd5b506109aa611ea2565b6040518082815260200191505060405180910390f35b3480156109cc57600080fd5b506109d5611eaf565b6040518082815260200191505060405180910390f35b3480156109f757600080fd5b50610a5a60048036036040811015610a0e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611ebc565b604051808215151515815260200191505060405180910390f35b348015610a8057600080fd5b50610ac160048036036060811015610a9757600080fd5b81019080803590602001909291908035906020019092919080359060200190929190505050612080565b005b348015610acf57600080fd5b50610ad8612107565b6040518082815260200191505060405180910390f35b610b58600480360360a0811015610b0457600080fd5b810190808035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190505050612116565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610ba657600080fd5b50610be960048036036020811015610bbd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612a43565b6040518082815260200191505060405180910390f35b348015610c0b57600080fd5b50610c4e60048036036020811015610c2257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612a8c565b604051808215151515815260200191505060405180910390f35b348015610c7457600080fd5b50610cb760048036036020811015610c8b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612ad7565b6040518082815260200191505060405180910390f35b348015610cd957600080fd5b50610d3c60048036036040811015610cf057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612b69565b005b60008073ffffffffffffffffffffffffffffffffffffffff16600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610e24576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061350c6021913960400191505060405180910390fd5b600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006001805490508210610f2d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f4f7574206f6620626f756e64732e00000000000000000000000000000000000081525060200191505060405180910390fd5b60018281548110610f3a57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600160036000828254019250508190555060006003549050610f9934600554612c0d90919063ffffffff16565b6005819055506000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d13f13916175306040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561101657600080fd5b505afa15801561102a573d6000803e3d6000fd5b505050506040513d602081101561104057600080fd5b810190808051906020019092919050505090508060055410156110ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806135586022913960400191505060405180910390fd5b6110c381600554612c9590919063ffffffff16565b600581905550600060606110d683612d1e565b915091508161118157806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561114657808201518184015260208101905061112b565b50505050905090810190601f1680156111735780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50505060035481146111fb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081525060200191505060405180910390fd5b50565b3373ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146112c1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f43616c6c6572206973206e6f74207468652072616e646f6d20626561636f6e0081525060200191505060405180910390fd5b8060068190555050565b6000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ef1f966183306040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b1580156113a057600080fd5b505afa1580156113b4573d6000803e3d6000fd5b505050506040513d60208110156113ca57600080fd5b81019080805190602001909291905050509050919050565b600080600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d13f13916175306040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561145a57600080fd5b505afa15801561146e573d6000803e3d6000fd5b505050506040513d602081101561148457600080fd5b810190808051906020019092919050505090506005548111156114bb576114b660055482612c9590919063ffffffff16565b6114be565b60005b91505090565b6000803073ffffffffffffffffffffffffffffffffffffffff16905064e8d4a5100081816114ee57fe5b0691505090565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d13f13916175306040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561156c57600080fd5b505afa158015611580573d6000803e3d6000fd5b505050506040513d602081101561159657600080fd5b8101908080519060200190929190505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff16600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561164a576000905061176a565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663b4766856856040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561172b57600080fd5b505afa15801561173f573d6000803e3d6000fd5b505050506040513d602081101561175557600080fd5b81019080805190602001909291905050509150505b92915050565b6000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166310a63ec083306040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b15801561184557600080fd5b505afa158015611859573d6000803e3d6000fd5b505050506040513d602081101561186f57600080fd5b81019080805190602001909291905050509050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006118b66114c4565b9050949350505050565b6000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561196157600080fd5b505afa158015611975573d6000803e3d6000fd5b505050506040513d602081101561198b57600080fd5b81019080805190602001909291905050509050919050565b60065481565b600181815481106119b657fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006119f082610d3e565b905060003390508173ffffffffffffffffffffffffffffffffffffffff1663f7186ce0826040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015611a7457600080fd5b505afa158015611a88573d6000803e3d6000fd5b505050506040513d6020811015611a9e57600080fd5b8101908080519060200190929190505050611b4b578173ffffffffffffffffffffffffffffffffffffffff16631ae0e73d826040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b158015611b3257600080fd5b505af1158015611b46573d6000803e3d6000fd5b505050505b505050565b61753081565b6000611b628383612ec4565b73ffffffffffffffffffffffffffffffffffffffff1663e686440f846040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015611bde57600080fd5b505afa158015611bf2573d6000803e3d6000fd5b505050506040513d6020811015611c0857600080fd5b8101908080519060200190929190505050905092915050565b60008073ffffffffffffffffffffffffffffffffffffffff16600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611d23576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f536f72746974696f6e20706f6f6c20616c72656164792065786973747300000081525060200191505060405180910390fd5b6000611d2e83612f8d565b905080600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff167f693c68cd964926544cbaee02b00d9352aa98c6de2484515e8bd74130c005e6af82604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a2600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b670de0b6b3a764000081565b60055481565b6801158e460913d0000081565b6000600180549050905090565b60008073ffffffffffffffffffffffffffffffffffffffff16600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611f5a576000905061207a565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff16636b1906f8856040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561203b57600080fd5b505afa15801561204f573d6000803e3d6000fd5b505050506040513d602081101561206557600080fd5b81019080805190602001909291905050509150505b92915050565b600061208c84846131b5565b905061209733610d3e565b73ffffffffffffffffffffffffffffffffffffffff166334ce30f0826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b1580156120e957600080fd5b505af11580156120fd573d6000803e3d6000fd5b5050505050505050565b60006121116114f5565b905090565b6000600160036000828254019250508190555060006003549050600087116121a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f4d696e696d756d207369676e696e672067726f75702073697a6520697320310081525060200191505060405180910390fd5b601087111561221d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4d6178696d756d207369676e696e672067726f75702073697a6520697320313681525060200191505060405180910390fd5b60008611612276576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001806134e56027913960400191505060405180910390fd5b868611156122cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260358152602001806134876035913960400191505060405180910390fd5b600033905060006122df82610d3e565b905060006122ed878b6131b5565b905060008111612348576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806134bc6029913960400191505060405180910390fd5b612350612107565b3410156123a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b81526020018061345c602b913960400191505060405180910390fd5b6000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ec5ffac26040518163ffffffff1660e01b815260040160206040518083038186803b15801561241257600080fd5b505afa158015612426573d6000803e3d6000fd5b505050506040513d602081101561243c57600080fd5b8101908080519060200190929190505050905060608373ffffffffffffffffffffffffffffffffffffffff1663a2cca6a28d60065460001b85876040518563ffffffff1660e01b815260040180858152602001848152602001838152602001828152602001945050505050600060405180830381600087803b1580156124c157600080fd5b505af11580156124d5573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060208110156124ff57600080fd5b810190808051604051939291908464010000000082111561251f57600080fd5b8382019150602082018581111561253557600080fd5b825186602082028301116401000000008211171561255257600080fd5b8083526020830192505050908051906020019060200280838360005b8381101561258957808201518184015260208101905061256e565b5050505090500160405250505090506125a06131f7565b6125a8613287565b96508673ffffffffffffffffffffffffffffffffffffffff166379a804918b838e868d600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16306040518963ffffffff1660e01b8152600401808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018881526020018781526020018681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825289818151815260200191508051906020019060200280838360005b8381101561273e578082015181840152602081019050612723565b505050509050019950505050505050505050600060405180830381600087803b15801561276a57600080fd5b505af115801561277e573d6000803e3d6000fd5b5050505060008090505b8c8110156128f757600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d20a62fc8383815181106127da57fe5b60200260200101518a8b73ffffffffffffffffffffffffffffffffffffffff16888a6040518663ffffffff1660e01b8152600401808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200195505050505050600060405180830381600087803b1580156128d257600080fd5b505af11580156128e6573d6000803e3d6000fd5b505050508080600101915050612788565b508473ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff167f7c030f3f8c902fa5a59193f1e3c08ae7245fc0e3b7ab290b6a9548a57a46ac60848f6040518080602001838152602001828103825284818151815260200191508051906020019060200280838360005b838110156129a957808201518184015260208101905061298e565b50505050905001935050505060405180910390a450505050506003548114612a39576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081525060200191505060405180910390fd5b5095945050505050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600080600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054119050919050565b6000612ae282610d3e565b73ffffffffffffffffffffffffffffffffffffffff166396c82e576040518163ffffffff1660e01b815260040160206040518083038186803b158015612b2757600080fd5b505afa158015612b3b573d6000803e3d6000fd5b505050506040513d6020811015612b5157600080fd5b81019080805190602001909291905050509050919050565b612b738282612ec4565b73ffffffffffffffffffffffffffffffffffffffff16631c5b0762836040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b158015612bf157600080fd5b505af1158015612c05573d6000803e3d6000fd5b505050505050565b600080828401905083811015612c8b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600082821115612d0d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b60006060600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168330617530604051602401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001925050506040516020818303038152906040527fe1f95890000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b60208310612e535780518252602082019150602081019050602083039250612e30565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114612eb5576040519150601f19603f3d011682016040523d82523d6000602084013e612eba565b606091505b5091509150915091565b6000612ed08383611ebc565b612f25576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b81526020018061352d602b913960400191505060405180910390fd5b600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905092915050565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166356385578600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ec5ffac26040518163ffffffff1660e01b815260040160206040518083038186803b15801561307b57600080fd5b505afa15801561308f573d6000803e3d6000fd5b505050506040513d60208110156130a557600080fd5b81019080805190602001909291905050506801158e460913d00000670de0b6b3a76400006040518663ffffffff1660e01b8152600401808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200182815260200195505050505050602060405180830381600087803b15801561317357600080fd5b505af1158015613187573d6000803e3d6000fd5b505050506040513d602081101561319d57600080fd5b81019080805190602001909291905050509050919050565b60006131ef826131e160016131d38688612c0d90919063ffffffff16565b612c9590919063ffffffff16565b61336290919063ffffffff16565b905092915050565b60065430604051602001808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b8152601401925050506040516020818303038152906040528051906020012060001c600681905550600061326b34612d1e565b5090508061328457346005600082825401925050819055505b50565b60006132b36000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff166133f1565b905060018190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505042600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555090565b60008082116133d9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525060200191505060405180910390fd5b60008284816133e457fe5b0490508091505092915050565b6000808260601b90506040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528160148201527f5af43d82803e903d91602b57fd5bf3000000000000000000000000000000000060288201526037816000f09250505091905056fe496e73756666696369656e74207061796d656e7420666f72206f70656e696e672061206e6577206b656570486f6e657374207468726573686f6c64206d757374206265206c657373206f7220657175616c207468652067726f75702073697a65426f6e6420706572206d656d626572206d7573742062652067726561746572207468616e207a65726f486f6e657374207468726573686f6c64206d7573742062652067726561746572207468616e20304e6f20706f6f6c20666f756e6420666f7220746865206170706c69636174696f6e4f70657261746f72206e6f74207265676973746572656420666f7220746865206170706c69636174696f6e4e6f7420656e6f7567682066756e647320746f207472696767657220726573656564a265627a7a7231582061634b1c1a84392d73901e04f29b5b7c9318d8735d128b186efeaad13d987aee64736f6c63430005110032",
  "sourceMap": "193:1243:28:-;;;267:472;8:9:-1;5:2;;;30:1;27;20:12;5:2;267:472:28;;;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;267:472:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;552:28;594:20;628:12;654:11;679:12;705:17;4776:13:3;4718:29;2332:18:15;2312:17;;:38;;;;;;;;;;;;;;;;;;2255:102;884:1:103;868:13;:17;;;;3102:13:13;3073:12;;:43;;;;;;;;;;;;;;;;;;3281:77;3260:18;:98;;;;3021:344;4868:21:3;4805:20;;:94;;;;;;;;;;;;;;;;;;4928:17;4909:16;;:36;;;;;;;;;;;;;;;;;;4983:13;4955:12;;:42;;;;;;;;;;;;;;;;;;5033:12;5007:11;;:39;;;;;;;;;;;;;;;;;;4452:601;;;;;;267:472:28;;;;;;193:1243;;;;;;",
  "deployedSourceMap": "193:1243:28:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3483:9:13;3469:10;;:23;;;;;;;;;;;193:1243:28;3107:293:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3107:293:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3107:293:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4414:31:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4414:31:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2758:164:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2758:164:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2758:164:15;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4850:479:13;;;:::i;:::-;;3697:122;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3697:122:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3697:122:13;;;;;;;;;;;;;;;;;:::i;:::-;;10769:190:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10769:190:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10769:190:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4286:217:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4286:217:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1246:188:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1246:188:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3919:127:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3919:127:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4326:412:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4326:412:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4326:412:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;10285:149:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10285:149:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10285:149:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2040:32:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2040:32:15;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;790:290:28;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;790:290:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;11176:125:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11176:125:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11176:125:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2981:33:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2981:33:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2117:22:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2117:22:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2117:22:15;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1462:350:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1462:350:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1462:350:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;2457:43:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2457:43:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2151:261:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2151:261:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2151:261:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;711:488;;8:9:-1;5:2;;;30:1;27;20:12;5:2;711:488:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;711:488:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4355:53:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4355:53:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2949:25:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2949:25:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4018:43:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4018:43:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2537:92:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2537:92:15;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3721:416:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3721:416:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3721:416:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5635:343:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5635:343:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5635:343:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;9613:106;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9613:106:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6587:2366;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;6587:2366:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3103:157:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3103:157:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3103:157:15;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;9330:183:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9330:183:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9330:183:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5122:215:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5122:215:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5122:215:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2638:206;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2638:206:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2638:206:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3107:293;3200:7;3285:1;3244:43;;:15;:29;3260:12;3244:29;;;;;;;;;;;;;;;;;;;;;;;;;:43;;;;3223:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3364:15;:29;3380:12;3364:29;;;;;;;;;;;;;;;;;;;;;;;;;3357:36;;3107:293;;;:::o;4414:31:3:-;;;;;;;;;;;;;:::o;2758:164:15:-;2820:7;2855:5;:12;;;;2847:5;:20;2839:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2903:5;2909;2903:12;;;;;;;;;;;;;;;;;;;;;;;;;2896:19;;2758:164;;;:::o;4850:479:13:-;1318:1:103;1301:13;;:18;;;;;;;;;;;1329:20;1352:13;;1329:36;;4941:25:13;4956:9;4941:10;;:14;;:25;;;;:::i;:::-;4928:10;:38;;;;4977:17;4997:12;;;;;;;;;;;:29;;;2495:5;4997:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4997:42:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4997:42:13;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4997:42:13;;;;;;;;;;;;;;;;4977:62;;5071:9;5057:10;;:23;;5049:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5142:25;5157:9;5142:10;;:14;;:25;;;;:::i;:::-;5129:10;:38;;;;5179:12;5193:23;5220:28;5238:9;5220:17;:28::i;:::-;5178:70;;;;5263:7;5258:65;;5300:10;5286:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5286:26:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5258:65;1375:1:103;;;1410:13;;1394:12;:29;1386:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4850:479:13;:::o;3697:122::-;7204:10;7179:35;;7187:12;;;;;;;;;;;7179:35;;;7158:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3801:11;3780:18;:32;;;;3697:122;:::o;10769:190:3:-;10863:4;10890:12;;;;;;;;;;;:36;;;10927:9;10946:4;10890:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10890:62:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10890:62:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10890:62:3;;;;;;;;;;;;;;;;10883:69;;10769:190;;;:::o;4286:217:13:-;4343:7;4362:17;4382:12;;;;;;;;;;;:29;;;2495:5;4382:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4382:42:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4382:42:13;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4382:42:13;;;;;;;;;;;;;;;;4362:62;;4454:10;;4441:9;:23;;:55;;4471:25;4485:10;;4471:9;:13;;:25;;;;:::i;:::-;4441:55;;;4467:1;4441:55;4434:62;;;4286:217;:::o;1246:188:28:-;1299:7;1318:25;1362:4;1346:22;;1318:50;;1413:13;1393:17;:33;;;;;;1378:49;;;1246:188;:::o;3919:127:13:-;3971:7;3997:12;;;;;;;;;;;:29;;;2495:5;3997:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3997:42:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3997:42:13;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3997:42:13;;;;;;;;;;;;;;;;3990:49;;3919:127;:::o;4326:412:6:-;4440:4;4505:1;4464:43;;:15;:29;4480:12;4464:29;;;;;;;;;;;;;;;;;;;;;;;;;:43;;;4460:86;;;4530:5;4523:12;;;;4460:86;4556:36;4630:15;:29;4646:12;4630:29;;;;;;;;;;;;;;;;;;;;;;;;;4556:113;;4687:14;:33;;;4721:9;4687:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4687:44:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4687:44:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4687:44:6;;;;;;;;;;;;;;;;4680:51;;;4326:412;;;;;:::o;10285:149:3:-;10350:4;10373:12;;;;;;;;;;;:28;;;10402:9;10421:4;10373:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10373:54:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10373:54:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10373:54:3;;;;;;;;;;;;;;;;10366:61;;10285:149;;;:::o;2040:32:15:-;;;;;;;;;;;;;:::o;790:290:28:-;947:7;1051:22;:20;:22::i;:::-;1044:29;;790:290;;;;;;:::o;11176:125:3:-;11235:7;11261:12;;;;;;;;;;;:22;;;11284:9;11261:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11261:33:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11261:33:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11261:33:3;;;;;;;;;;;;;;;;11254:40;;11176:125;;;:::o;2981:33:13:-;;;;:::o;2117:22:15:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1462:350:6:-;1536:36;1610:30;1627:12;1610:16;:30::i;:::-;1536:114;;1661:16;1680:10;1661:29;;1705:14;:31;;;1737:8;1705:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1705:41:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1705:41:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1705:41:6;;;;;;;;;;;;;;;;1700:106;;1762:14;:23;;;1786:8;1762:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1762:33:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1762:33:6;;;;1700:106;1462:350;;;:::o;2457:43:13:-;2495:5;2457:43;:::o;2151:261:6:-;2267:4;2306:52;2334:9;2345:12;2306:27;:52::i;:::-;:88;;;2395:9;2306:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2306:99:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2306:99:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2306:99:6;;;;;;;;;;;;;;;;2287:118;;2151:261;;;;:::o;711:488::-;796:7;881:1;840:43;;:15;:29;856:12;840:29;;;;;;;;;;;;;;;;;;;;;;;;;:43;;;819:119;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;949:28;980:30;997:12;980:16;:30::i;:::-;949:61;;1053:20;1021:15;:29;1037:12;1021:29;;;;;;;;;;;;;;;;:52;;;;;;;;;;;;;;;;;;1110:12;1089:56;;;1124:20;1089:56;;;;;;;;;;;;;;;;;;;;;;1163:15;:29;1179:12;1163:29;;;;;;;;;;;;;;;;;;;;;;;;;1156:36;;;711:488;;;:::o;4355:53:3:-;4404:4;4355:53;:::o;2949:25:13:-;;;;:::o;4018:43:3:-;4056:5;4018:43;:::o;2537:92:15:-;2584:7;2610:5;:12;;;;2603:19;;2537:92;:::o;3721:416:6:-;3837:4;3902:1;3861:43;;:15;:29;3877:12;3861:29;;;;;;;;;;;;;;;;;;;;;;;;;:43;;;3857:86;;;3927:5;3920:12;;;;3857:86;3953:36;4027:15;:29;4043:12;4027:29;;;;;;;;;;;;;;;;;;;;;;;;;3953:113;;4084:14;:35;;;4120:9;4084:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4084:46:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4084:46:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4084:46:6;;;;;;;;;;;;;;;;4077:53;;;3721:416;;;;;:::o;5635:343:3:-;5794:18;5815:48;5829:21;5852:10;5815:13;:48::i;:::-;5794:69;;5893:28;5910:10;5893:16;:28::i;:::-;5873:86;;;5960:10;5873:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5873:98:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5873:98:3;;;;5635:343;;;;:::o;9613:106::-;9665:7;9691:21;:19;:21::i;:::-;9684:28;;9613:106;:::o;6587:2366::-;6795:19;1318:1:103;1301:13;;:18;;;;;;;;;;;1329:20;1352:13;;1329:36;;6847:1:3;6834:10;:14;6826:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6916:2;6902:10;:16;;6894:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7005:1;6986:16;:20;6965:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7122:10;7102:16;:30;;7081:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7222:19;7244:10;7222:32;;7264:12;7279:29;7296:11;7279:16;:29::i;:::-;7264:44;;7319:18;7340:32;7354:5;7361:10;7340:13;:32::i;:::-;7319:53;;7403:1;7390:10;:14;7382:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7495:21;:19;:21::i;:::-;7482:9;:34;;7461:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7596:20;7619:12;;;;;;;;;;;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7619:27:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7619:27:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7619:27:3;;;;;;;;;;;;;;;;7596:50;;7657:24;7716:4;7696:40;;;7754:10;7790:18;;7782:27;;7827:12;7857:10;7696:185;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7696:185:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7696:185:3;;;;;;39:16:-1;36:1;17:17;2:54;7696:185:3;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:2;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7696:185:3;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;385:12;380:3;373:25;421:4;416:3;412:14;405:21;;0:433;;7696:185:3;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;7696:185:3;;;;;;;;;;;7657:224;;7892:23;:21;:23::i;:::-;8223:12;:10;:12::i;:::-;8209:26;;8262:11;8246:39;;;8299:6;8319:7;8340:16;8370:12;8396:18;8436:12;;;;;;;;;;;8471:11;;;;;;;;;;;8505:4;8246:274;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;8246:274:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8246:274:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8246:274:3;;;;8536:9;8548:1;8536:13;;8531:247;8555:10;8551:1;:14;8531:247;;;8586:11;;;;;;;;;;;:22;;;8626:7;8634:1;8626:10;;;;;;;;;;;;;;8654:11;8691;8683:20;;8721:10;8749:4;8586:181;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8586:181:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8586:181:3;;;;8567:3;;;;;;;8531:247;;;;8895:11;8793:153;;8875:6;8793:153;;8829:11;8793:153;;;8854:7;8920:16;8793:153;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;8793:153:3;;;;;;;;;;;;;;;;;;1375:1:103;;;;;1410:13;;1394:12;:29;1386:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6587:2366:3;;;;;;;;:::o;3103:157:15:-;3197:7;3227:19;:26;3247:5;3227:26;;;;;;;;;;;;;;;;3220:33;;3103:157;;;:::o;9330:183:3:-;9426:4;9505:1;9453:19;:49;9473:28;9453:49;;;;;;;;;;;;;;;;:53;9446:60;;9330:183;;;:::o;5122:215:6:-;5221:7;5285:30;5302:12;5285:16;:30::i;:::-;5263:65;;;:67;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5263:67:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5263:67:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5263:67:6;;;;;;;;;;;;;;;;5244:86;;5122:215;;;:::o;2638:206::-;2740:52;2768:9;2779:12;2740:27;:52::i;:::-;:86;;;2827:9;2740:97;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2740:97:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2740:97:6;;;;2638:206;;:::o;834:176:94:-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;1274:179::-;1332:7;1364:1;1359;:6;;1351:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1410:9;1426:1;1422;:5;1410:17;;1445:1;1438:8;;;1274:179;;;;:::o;6593:378:13:-;6671:4;6677:12;6732;;;;;;;;;;;6724:26;;6757:7;6894:4;2495:5;6783:167;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;6783:167:13;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;6783:167:13;6724:240;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;6724:240:13;;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;6705:259:13;;;;6593:378;;;:::o;6019:368:6:-;6142:21;6196:45;6217:9;6228:12;6196:20;:45::i;:::-;6175:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6350:15;:29;6366:12;6350:29;;;;;;;;;;;;;;;;;;;;;;;;;6321:59;;6019:368;;;;:::o;11307:376:3:-;11373:7;11411:20;;;;;;;;;;;:40;;;11486:12;;;;;;;;;;;11535:11;;;;;;;;;;;11566:12;;;;;;;;;;;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11566:27:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11566:27:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11566:27:3;;;;;;;;;;;;;;;;4056:5;4404:4;11411:265;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11411:265:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11411:265:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11411:265:3;;;;;;;;;;;;;;;;11392:284;;11307:376;;;:::o;11959:535::-;12068:7;12437:50;12476:10;12438:32;12468:1;12438:25;12452:10;12438:9;:13;;:25;;;;:::i;:::-;:29;;:32;;;;:::i;:::-;12437:38;;:50;;;;:::i;:::-;12430:57;;11959:535;;;;:::o;5851:633:13:-;6231:18;;6259:4;6214:51;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;6214:51:13;;;6204:62;;;;;;6183:93;;6162:18;:114;;;;6360:12;6378:28;6396:9;6378:17;:28::i;:::-;6359:47;;;6421:7;6416:62;;6458:9;6444:10;;:23;;;;;;;;;;;6416:62;5851:633;:::o;3418:280:15:-;3458:19;3503:30;3515:17;;;;;;;;;;;3503:11;:30::i;:::-;3489:44;;3543:5;3554:11;3543:23;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;3543:23:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3676:15;3641:19;:32;3661:11;3641:32;;;;;;;;;;;;;;;:50;;;;3418:280;:::o;2606:326:94:-;2664:7;2761:1;2757;:5;2749:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2803:9;2819:1;2815;:5;;;;;;2803:17;;2924:1;2917:8;;;2606:326;;;;:::o;1608:577:7:-;1663:14;1689:19;1719:6;1711:15;;1689:37;;1778:4;1772:11;1843:66;1820:5;1796:127;1961:11;1954:4;1947:5;1943:16;1936:37;2044:66;2021:4;2014:5;2010:16;1986:138;2164:4;2157:5;2154:1;2147:22;2137:32;;1745:434;;;;;:::o",
  "source": "pragma solidity 0.5.17;\n\nimport \"../../contracts/BondedECDSAKeepFactory.sol\";\n\n/// @title Bonded ECDSA Keep Factory Stub for vendor testing\n/// @dev This contract is for testing purposes only.\ncontract BondedECDSAKeepFactoryVendorStub is BondedECDSAKeepFactory {\n    constructor(\n        address masterBondedECDSAKeepAddress,\n        address sortitionPoolFactory,\n        address tokenStaking,\n        address keepBonding,\n        address randomBeacon,\n        address _bondTokenAddress\n    )\n        public\n        BondedECDSAKeepFactory(\n            masterBondedECDSAKeepAddress,\n            sortitionPoolFactory,\n            tokenStaking,\n            keepBonding,\n            randomBeacon,\n            _bondTokenAddress\n        )\n    {}\n\n    // @dev Returns calculated keep address.\n    function openKeep(\n        uint256 _groupSize,\n        uint256 _honestThreshold,\n        address _owner,\n        uint256 _bond\n    ) public payable returns (address) {\n        _groupSize;\n        _honestThreshold;\n        _owner;\n        _bond;\n\n        return calculateKeepAddress();\n    }\n\n    /// @dev Calculates an address for a keep based on the address of the factory.\n    /// We need it to have predictable addresses for factories verification.\n    function calculateKeepAddress() public view returns (address) {\n        uint256 factoryAddressInt = uint256(address(this));\n        return address(factoryAddressInt % 1000000000000);\n    }\n}\n",
  "sourcePath": "/home/kowal/Projects/sovryn/keep-ecdsa/solidity/contracts/test/BondedECDSAKeepFactoryVendorStub.sol",
  "ast": {
    "absolutePath": "/home/kowal/Projects/sovryn/keep-ecdsa/solidity/contracts/test/BondedECDSAKeepFactoryVendorStub.sol",
    "exportedSymbols": {
      "BondedECDSAKeepFactoryVendorStub": [
        7098
      ]
    },
    "id": 7099,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7025,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:28"
      },
      {
        "absolutePath": "/home/kowal/Projects/sovryn/keep-ecdsa/solidity/contracts/BondedECDSAKeepFactory.sol",
        "file": "../../contracts/BondedECDSAKeepFactory.sol",
        "id": 7026,
        "nodeType": "ImportDirective",
        "scope": 7099,
        "sourceUnit": 2472,
        "src": "25:52:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7027,
              "name": "BondedECDSAKeepFactory",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2471,
              "src": "238:22:28",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BondedECDSAKeepFactory_$2471",
                "typeString": "contract BondedECDSAKeepFactory"
              }
            },
            "id": 7028,
            "nodeType": "InheritanceSpecifier",
            "src": "238:22:28"
          }
        ],
        "contractDependencies": [
          2471,
          3405,
          3440,
          4787,
          5024,
          5749,
          8039,
          8373,
          22433
        ],
        "contractKind": "contract",
        "documentation": "@title Bonded ECDSA Keep Factory Stub for vendor testing\n @dev This contract is for testing purposes only.",
        "fullyImplemented": true,
        "id": 7098,
        "linearizedBaseContracts": [
          7098,
          2471,
          3405,
          4787,
          22433,
          8373,
          8039,
          5024,
          3440,
          5749
        ],
        "name": "BondedECDSAKeepFactoryVendorStub",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 7051,
              "nodeType": "Block",
              "src": "737:2:28",
              "statements": []
            },
            "documentation": null,
            "id": 7052,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 7043,
                    "name": "masterBondedECDSAKeepAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7030,
                    "src": "552:28:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 7044,
                    "name": "sortitionPoolFactory",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7032,
                    "src": "594:20:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 7045,
                    "name": "tokenStaking",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7034,
                    "src": "628:12:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 7046,
                    "name": "keepBonding",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7036,
                    "src": "654:11:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 7047,
                    "name": "randomBeacon",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7038,
                    "src": "679:12:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 7048,
                    "name": "_bondTokenAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7040,
                    "src": "705:17:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 7049,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7042,
                  "name": "BondedECDSAKeepFactory",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2471,
                  "src": "516:22:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_BondedECDSAKeepFactory_$2471_$",
                    "typeString": "type(contract BondedECDSAKeepFactory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "516:216:28"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7041,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7030,
                  "name": "masterBondedECDSAKeepAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 7052,
                  "src": "288:36:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7029,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "288:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7032,
                  "name": "sortitionPoolFactory",
                  "nodeType": "VariableDeclaration",
                  "scope": 7052,
                  "src": "334:28:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7031,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "334:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7034,
                  "name": "tokenStaking",
                  "nodeType": "VariableDeclaration",
                  "scope": 7052,
                  "src": "372:20:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7033,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "372:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7036,
                  "name": "keepBonding",
                  "nodeType": "VariableDeclaration",
                  "scope": 7052,
                  "src": "402:19:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7035,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "402:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7038,
                  "name": "randomBeacon",
                  "nodeType": "VariableDeclaration",
                  "scope": 7052,
                  "src": "431:20:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7037,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "431:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7040,
                  "name": "_bondTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 7052,
                  "src": "461:25:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7039,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "461:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "278:214:28"
            },
            "returnParameters": {
              "id": 7050,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "737:0:28"
            },
            "scope": 7098,
            "src": "267:472:28",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7076,
              "nodeType": "Block",
              "src": "956:124:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7065,
                    "name": "_groupSize",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7054,
                    "src": "966:10:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7066,
                  "nodeType": "ExpressionStatement",
                  "src": "966:10:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7067,
                    "name": "_honestThreshold",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7056,
                    "src": "986:16:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7068,
                  "nodeType": "ExpressionStatement",
                  "src": "986:16:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7069,
                    "name": "_owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7058,
                    "src": "1012:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7070,
                  "nodeType": "ExpressionStatement",
                  "src": "1012:6:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7071,
                    "name": "_bond",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7060,
                    "src": "1028:5:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7072,
                  "nodeType": "ExpressionStatement",
                  "src": "1028:5:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7073,
                      "name": "calculateKeepAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7097,
                      "src": "1051:20:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 7074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1051:22:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 7064,
                  "id": 7075,
                  "nodeType": "Return",
                  "src": "1044:29:28"
                }
              ]
            },
            "documentation": null,
            "id": 7077,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "openKeep",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7061,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7054,
                  "name": "_groupSize",
                  "nodeType": "VariableDeclaration",
                  "scope": 7077,
                  "src": "817:18:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7053,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "817:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7056,
                  "name": "_honestThreshold",
                  "nodeType": "VariableDeclaration",
                  "scope": 7077,
                  "src": "845:24:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7055,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "845:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7058,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 7077,
                  "src": "879:14:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7057,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "879:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7060,
                  "name": "_bond",
                  "nodeType": "VariableDeclaration",
                  "scope": 7077,
                  "src": "903:13:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7059,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "903:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "807:115:28"
            },
            "returnParameters": {
              "id": 7064,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7063,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7077,
                  "src": "947:7:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7062,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "947:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "946:9:28"
            },
            "scope": 7098,
            "src": "790:290:28",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7096,
              "nodeType": "Block",
              "src": "1308:126:28",
              "statements": [
                {
                  "assignments": [
                    7083
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7083,
                      "name": "factoryAddressInt",
                      "nodeType": "VariableDeclaration",
                      "scope": 7096,
                      "src": "1318:25:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7082,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1318:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7089,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7086,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22616,
                            "src": "1362:4:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondedECDSAKeepFactoryVendorStub_$7098",
                              "typeString": "contract BondedECDSAKeepFactoryVendorStub"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondedECDSAKeepFactoryVendorStub_$7098",
                              "typeString": "contract BondedECDSAKeepFactoryVendorStub"
                            }
                          ],
                          "id": 7085,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1354:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 7087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1354:13:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 7084,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1346:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": "uint256"
                    },
                    "id": 7088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1346:22:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1318:50:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 7091,
                          "name": "factoryAddressInt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7083,
                          "src": "1393:17:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "%",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31303030303030303030303030",
                          "id": 7092,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1413:13:28",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000_by_1",
                            "typeString": "int_const 1000000000000"
                          },
                          "value": "1000000000000"
                        },
                        "src": "1393:33:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7090,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1385:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": "address"
                    },
                    "id": 7094,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1385:42:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "functionReturnParameters": 7081,
                  "id": 7095,
                  "nodeType": "Return",
                  "src": "1378:49:28"
                }
              ]
            },
            "documentation": "@dev Calculates an address for a keep based on the address of the factory.\n We need it to have predictable addresses for factories verification.",
            "id": 7097,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateKeepAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7078,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1275:2:28"
            },
            "returnParameters": {
              "id": 7081,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7080,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7097,
                  "src": "1299:7:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7079,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1299:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1298:9:28"
            },
            "scope": 7098,
            "src": "1246:188:28",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 7099,
        "src": "193:1243:28"
      }
    ],
    "src": "0:1437:28"
  },
  "legacyAST": {
    "absolutePath": "/home/kowal/Projects/sovryn/keep-ecdsa/solidity/contracts/test/BondedECDSAKeepFactoryVendorStub.sol",
    "exportedSymbols": {
      "BondedECDSAKeepFactoryVendorStub": [
        7098
      ]
    },
    "id": 7099,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7025,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:28"
      },
      {
        "absolutePath": "/home/kowal/Projects/sovryn/keep-ecdsa/solidity/contracts/BondedECDSAKeepFactory.sol",
        "file": "../../contracts/BondedECDSAKeepFactory.sol",
        "id": 7026,
        "nodeType": "ImportDirective",
        "scope": 7099,
        "sourceUnit": 2472,
        "src": "25:52:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7027,
              "name": "BondedECDSAKeepFactory",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2471,
              "src": "238:22:28",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BondedECDSAKeepFactory_$2471",
                "typeString": "contract BondedECDSAKeepFactory"
              }
            },
            "id": 7028,
            "nodeType": "InheritanceSpecifier",
            "src": "238:22:28"
          }
        ],
        "contractDependencies": [
          2471,
          3405,
          3440,
          4787,
          5024,
          5749,
          8039,
          8373,
          22433
        ],
        "contractKind": "contract",
        "documentation": "@title Bonded ECDSA Keep Factory Stub for vendor testing\n @dev This contract is for testing purposes only.",
        "fullyImplemented": true,
        "id": 7098,
        "linearizedBaseContracts": [
          7098,
          2471,
          3405,
          4787,
          22433,
          8373,
          8039,
          5024,
          3440,
          5749
        ],
        "name": "BondedECDSAKeepFactoryVendorStub",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 7051,
              "nodeType": "Block",
              "src": "737:2:28",
              "statements": []
            },
            "documentation": null,
            "id": 7052,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 7043,
                    "name": "masterBondedECDSAKeepAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7030,
                    "src": "552:28:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 7044,
                    "name": "sortitionPoolFactory",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7032,
                    "src": "594:20:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 7045,
                    "name": "tokenStaking",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7034,
                    "src": "628:12:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 7046,
                    "name": "keepBonding",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7036,
                    "src": "654:11:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 7047,
                    "name": "randomBeacon",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7038,
                    "src": "679:12:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 7048,
                    "name": "_bondTokenAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7040,
                    "src": "705:17:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 7049,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7042,
                  "name": "BondedECDSAKeepFactory",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2471,
                  "src": "516:22:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_BondedECDSAKeepFactory_$2471_$",
                    "typeString": "type(contract BondedECDSAKeepFactory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "516:216:28"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7041,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7030,
                  "name": "masterBondedECDSAKeepAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 7052,
                  "src": "288:36:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7029,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "288:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7032,
                  "name": "sortitionPoolFactory",
                  "nodeType": "VariableDeclaration",
                  "scope": 7052,
                  "src": "334:28:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7031,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "334:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7034,
                  "name": "tokenStaking",
                  "nodeType": "VariableDeclaration",
                  "scope": 7052,
                  "src": "372:20:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7033,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "372:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7036,
                  "name": "keepBonding",
                  "nodeType": "VariableDeclaration",
                  "scope": 7052,
                  "src": "402:19:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7035,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "402:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7038,
                  "name": "randomBeacon",
                  "nodeType": "VariableDeclaration",
                  "scope": 7052,
                  "src": "431:20:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7037,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "431:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7040,
                  "name": "_bondTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 7052,
                  "src": "461:25:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7039,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "461:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "278:214:28"
            },
            "returnParameters": {
              "id": 7050,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "737:0:28"
            },
            "scope": 7098,
            "src": "267:472:28",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7076,
              "nodeType": "Block",
              "src": "956:124:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7065,
                    "name": "_groupSize",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7054,
                    "src": "966:10:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7066,
                  "nodeType": "ExpressionStatement",
                  "src": "966:10:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7067,
                    "name": "_honestThreshold",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7056,
                    "src": "986:16:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7068,
                  "nodeType": "ExpressionStatement",
                  "src": "986:16:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7069,
                    "name": "_owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7058,
                    "src": "1012:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7070,
                  "nodeType": "ExpressionStatement",
                  "src": "1012:6:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7071,
                    "name": "_bond",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7060,
                    "src": "1028:5:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7072,
                  "nodeType": "ExpressionStatement",
                  "src": "1028:5:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7073,
                      "name": "calculateKeepAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7097,
                      "src": "1051:20:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 7074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1051:22:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 7064,
                  "id": 7075,
                  "nodeType": "Return",
                  "src": "1044:29:28"
                }
              ]
            },
            "documentation": null,
            "id": 7077,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "openKeep",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7061,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7054,
                  "name": "_groupSize",
                  "nodeType": "VariableDeclaration",
                  "scope": 7077,
                  "src": "817:18:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7053,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "817:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7056,
                  "name": "_honestThreshold",
                  "nodeType": "VariableDeclaration",
                  "scope": 7077,
                  "src": "845:24:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7055,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "845:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7058,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 7077,
                  "src": "879:14:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7057,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "879:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7060,
                  "name": "_bond",
                  "nodeType": "VariableDeclaration",
                  "scope": 7077,
                  "src": "903:13:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7059,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "903:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "807:115:28"
            },
            "returnParameters": {
              "id": 7064,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7063,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7077,
                  "src": "947:7:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7062,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "947:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "946:9:28"
            },
            "scope": 7098,
            "src": "790:290:28",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7096,
              "nodeType": "Block",
              "src": "1308:126:28",
              "statements": [
                {
                  "assignments": [
                    7083
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7083,
                      "name": "factoryAddressInt",
                      "nodeType": "VariableDeclaration",
                      "scope": 7096,
                      "src": "1318:25:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7082,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1318:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7089,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7086,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22616,
                            "src": "1362:4:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondedECDSAKeepFactoryVendorStub_$7098",
                              "typeString": "contract BondedECDSAKeepFactoryVendorStub"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondedECDSAKeepFactoryVendorStub_$7098",
                              "typeString": "contract BondedECDSAKeepFactoryVendorStub"
                            }
                          ],
                          "id": 7085,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1354:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 7087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1354:13:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 7084,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1346:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": "uint256"
                    },
                    "id": 7088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1346:22:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1318:50:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 7091,
                          "name": "factoryAddressInt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7083,
                          "src": "1393:17:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "%",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31303030303030303030303030",
                          "id": 7092,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1413:13:28",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000_by_1",
                            "typeString": "int_const 1000000000000"
                          },
                          "value": "1000000000000"
                        },
                        "src": "1393:33:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7090,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1385:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": "address"
                    },
                    "id": 7094,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1385:42:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "functionReturnParameters": 7081,
                  "id": 7095,
                  "nodeType": "Return",
                  "src": "1378:49:28"
                }
              ]
            },
            "documentation": "@dev Calculates an address for a keep based on the address of the factory.\n We need it to have predictable addresses for factories verification.",
            "id": 7097,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateKeepAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7078,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1275:2:28"
            },
            "returnParameters": {
              "id": 7081,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7080,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7097,
                  "src": "1299:7:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7079,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1299:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1298:9:28"
            },
            "scope": 7098,
            "src": "1246:188:28",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 7099,
        "src": "193:1243:28"
      }
    ],
    "src": "0:1437:28"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.22",
  "updatedAt": "2021-01-29T17:36:47.964Z",
  "devdoc": {
    "details": "This contract is for testing purposes only.",
    "methods": {
      "__beaconCallback(uint256)": {
        "details": "The function is expected to be called in a callback by the random beacon.",
        "params": {
          "_relayEntry": "Beacon output."
        }
      },
      "__isRecognized(address)": {
        "params": {
          "_delegatedAuthorityRecipient": "Address of the delegated authority recipient."
        },
        "return": "True if provided address is recognized delegated token staking authority for this factory contract."
      },
      "balanceOf(address)": {
        "params": {
          "_operator": "The operator to query the balance of."
        },
        "return": "An uint256 representing the amount staked by the passed operator."
      },
      "calculateKeepAddress()": {
        "details": "Calculates an address for a keep based on the address of the factory. We need it to have predictable addresses for factories verification."
      },
      "createSortitionPool(address)": {
        "details": "Emits an event after sortition pool creation.",
        "params": {
          "_application": "Address of the application."
        },
        "return": "Address of the created sortition pool contract."
      },
      "getKeepAtIndex(uint256)": {
        "return": "The address of the keep at the given index."
      },
      "getKeepCount()": {
        "details": "Checks the size of the keeps array.",
        "return": "The number of keeps opened so far."
      },
      "getKeepOpenedTimestamp(address)": {
        "return": "Timestamp the given keep was opened at or 0 if this keep was not created by this factory."
      },
      "getSortitionPool(address)": {
        "details": "Reverts if sortition does not exist for the application.",
        "params": {
          "_application": "Address of the application."
        },
        "return": "Address of the sortition pool contract."
      },
      "getSortitionPoolWeight(address)": {
        "details": "Reverts if sortition does not exits for the application.",
        "params": {
          "_application": "Address of the application."
        },
        "return": "The sum of all registered operators' weights in the pool. Reverts if sortition pool for the application does not exist."
      },
      "hasMinimumStake(address)": {
        "params": {
          "_operator": "operator's address"
        },
        "return": "True if has enough active stake to participate in the network, false otherwise."
      },
      "isOperatorAuthorized(address)": {
        "params": {
          "_operator": "operator's address"
        },
        "return": "True if the factory has access to the staked token balance of the provided operator and can slash that stake. False otherwise."
      },
      "isOperatorEligible(address,address)": {
        "params": {
          "_application": "Customer application address.",
          "_operator": "Operator's address."
        }
      },
      "isOperatorRegistered(address,address)": {
        "params": {
          "_application": "Customer application address.",
          "_operator": "Operator's address."
        },
        "return": "True if operator is already registered in the candidates pool, false otherwise."
      },
      "isOperatorUpToDate(address,address)": {
        "params": {
          "_application": "Customer application address.",
          "_operator": "Operator's address."
        }
      },
      "newEntryFeeEstimate()": {
        "return": "Uint256 estimate."
      },
      "openKeep(uint256,uint256,address,uint256,uint256)": {
        "details": "Selects a list of signers for the keep based on provided parameters. A caller of this function is expected to be an application for which member candidates were registered in a pool.",
        "params": {
          "_bond": "Value of ETH bond required from the keep in wei.",
          "_groupSize": "Number of signers in the keep.",
          "_honestThreshold": "Minimum number of honest keep signers.",
          "_owner": "Address of the keep owner.",
          "_stakeLockDuration": "Stake lock duration in seconds."
        },
        "return": "Created keep address."
      },
      "openKeepFeeEstimate()": {
        "return": "Uint256 estimate."
      },
      "registerMemberCandidate(address)": {
        "details": "If caller is already registered it returns without any changes.",
        "params": {
          "_application": "Address of the application."
        }
      },
      "setMinimumBondableValue(uint256,uint256,uint256)": {
        "params": {
          "_groupSize": "Number of signers in the keep.",
          "_honestThreshold": "Minimum number of honest keep signers.",
          "_minimumBondableValue": "The minimum bond value the application requires from a single keep."
        }
      },
      "updateOperatorStatus(address,address)": {
        "params": {
          "_application": "Customer application address.",
          "_operator": "Operator's address."
        }
      }
    },
    "title": "Bonded ECDSA Keep Factory Stub for vendor testing"
  },
  "userdoc": {
    "methods": {
      "__beaconCallback(uint256)": {
        "notice": "Sets a new group selection seed value."
      },
      "__isRecognized(address)": {
        "notice": "Verifies if delegates authority recipient is valid address recognized by the factory for token staking authority delegation."
      },
      "balanceOf(address)": {
        "notice": "Gets the stake balance of the specified operator."
      },
      "createSortitionPool(address)": {
        "notice": "Creates new sortition pool for the application."
      },
      "getKeepAtIndex(uint256)": {
        "notice": "Gets a specific keep address at a given index."
      },
      "getKeepCount()": {
        "notice": "Gets how many keeps have been opened by this contract."
      },
      "getKeepOpenedTimestamp(address)": {
        "notice": "Gets the opened timestamp of the given keep."
      },
      "getSortitionPool(address)": {
        "notice": "Gets the sortition pool address for the given application."
      },
      "getSortitionPoolWeight(address)": {
        "notice": "Gets the total weight of operators in the sortition pool for the given application."
      },
      "hasMinimumStake(address)": {
        "notice": "Checks if the specified account has enough active stake to become network operator and that this contract has been authorized for potential slashing.     /// Having the required minimum of active stake makes the operator eligible to join the network. If the active stake is not currently undelegating, operator is also eligible for work selection. "
      },
      "isOperatorAuthorized(address)": {
        "notice": "Checks if the factory has the authorization to operate on stake represented by the provided operator. "
      },
      "isOperatorEligible(address,address)": {
        "notice": "Checks if given operator is eligible for the given application."
      },
      "isOperatorRegistered(address,address)": {
        "notice": "Checks if operator is registered as a candidate for the given customer application."
      },
      "isOperatorUpToDate(address,address)": {
        "notice": "Checks if operator's details in the member candidates pool are up to date for the given application. If not update operator status function should be called by the one who is monitoring the status."
      },
      "newEntryFeeEstimate()": {
        "notice": "Gets a fee estimate for a new random entry."
      },
      "newGroupSelectionSeedFee()": {
        "notice": "Calculates the fee requestor has to pay to reseed the factory for signer selection. Depending on how much value is stored in the reseed pool and the price of a new relay entry, returned value may vary."
      },
      "openKeep(uint256,uint256,address,uint256,uint256)": {
        "notice": "Opens a new ECDSA keep."
      },
      "openKeepFeeEstimate()": {
        "notice": "Gets a fee estimate for opening a new keep."
      },
      "registerMemberCandidate(address)": {
        "notice": "Register caller as a candidate to be selected as keep member for the provided customer application."
      },
      "requestNewGroupSelectionSeed()": {
        "notice": "Reseeds the value used for a signer selection. Requires enough payment to be passed. The required payment can be calculated using reseedFee function. Factory is automatically triggering reseeding after opening a new keep but the reseed can be also triggered at any moment using this function."
      },
      "setMinimumBondableValue(uint256,uint256,uint256)": {
        "notice": "Sets the minimum bondable value required from the operator to join the sortition pool of the given application. It is up to the application to specify a reasonable minimum bond for operators trying to join the pool to prevent griefing by operators joining without enough bondable value."
      },
      "updateOperatorStatus(address,address)": {
        "notice": "Invokes update of operator's details in the member candidates pool for the given application"
      }
    }
  }
}