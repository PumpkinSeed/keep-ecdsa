{
  "contractName": "BondedECDSAKeepFactory",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_masterBondedECDSAKeepAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_sortitionPoolFactory",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_tokenStaking",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_keepBonding",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_randomBeacon",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_bondTokenAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "keepAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "members",
          "type": "address[]"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "application",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "honestThreshold",
          "type": "uint256"
        }
      ],
      "name": "BondedECDSAKeepCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "application",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "sortitionPool",
          "type": "address"
        }
      ],
      "name": "SortitionPoolCreated",
      "type": "event"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_relayEntry",
          "type": "uint256"
        }
      ],
      "name": "__beaconCallback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "bondTokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "callbackGas",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_application",
          "type": "address"
        }
      ],
      "name": "createSortitionPool",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getKeepAtIndex",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getKeepCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_keep",
          "type": "address"
        }
      ],
      "name": "getKeepOpenedTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_application",
          "type": "address"
        }
      ],
      "name": "getSortitionPool",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_application",
          "type": "address"
        }
      ],
      "name": "getSortitionPoolWeight",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "groupSelectionSeed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_application",
          "type": "address"
        }
      ],
      "name": "isOperatorEligible",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_application",
          "type": "address"
        }
      ],
      "name": "isOperatorRegistered",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_application",
          "type": "address"
        }
      ],
      "name": "isOperatorUpToDate",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "keeps",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "masterKeepAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "minimumBond",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "newEntryFeeEstimate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "newGroupSelectionSeedFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "poolStakeWeightDivisor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_application",
          "type": "address"
        }
      ],
      "name": "registerMemberCandidate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "requestNewGroupSelectionSeed",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "reseedPool",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_application",
          "type": "address"
        }
      ],
      "name": "updateOperatorStatus",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_minimumBondableValue",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_groupSize",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_honestThreshold",
          "type": "uint256"
        }
      ],
      "name": "setMinimumBondableValue",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_groupSize",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_honestThreshold",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_bond",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_stakeLockDuration",
          "type": "uint256"
        }
      ],
      "name": "openKeep",
      "outputs": [
        {
          "internalType": "address",
          "name": "keepAddress",
          "type": "address"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_delegatedAuthorityRecipient",
          "type": "address"
        }
      ],
      "name": "__isRecognized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "openKeepFeeEstimate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "hasMinimumStake",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "isOperatorAuthorized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_masterBondedECDSAKeepAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_sortitionPoolFactory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenStaking\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_keepBonding\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_randomBeacon\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_bondTokenAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"keepAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"members\",\"type\":\"address[]\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"application\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"honestThreshold\",\"type\":\"uint256\"}],\"name\":\"BondedECDSAKeepCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"application\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sortitionPool\",\"type\":\"address\"}],\"name\":\"SortitionPoolCreated\",\"type\":\"event\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_relayEntry\",\"type\":\"uint256\"}],\"name\":\"__beaconCallback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_delegatedAuthorityRecipient\",\"type\":\"address\"}],\"name\":\"__isRecognized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bondTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"callbackGas\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_application\",\"type\":\"address\"}],\"name\":\"createSortitionPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getKeepAtIndex\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getKeepCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_keep\",\"type\":\"address\"}],\"name\":\"getKeepOpenedTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_application\",\"type\":\"address\"}],\"name\":\"getSortitionPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_application\",\"type\":\"address\"}],\"name\":\"getSortitionPoolWeight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"groupSelectionSeed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"hasMinimumStake\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isOperatorAuthorized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_application\",\"type\":\"address\"}],\"name\":\"isOperatorEligible\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_application\",\"type\":\"address\"}],\"name\":\"isOperatorRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_application\",\"type\":\"address\"}],\"name\":\"isOperatorUpToDate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"keeps\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"masterKeepAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minimumBond\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newEntryFeeEstimate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newGroupSelectionSeedFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_groupSize\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_honestThreshold\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_bond\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_stakeLockDuration\",\"type\":\"uint256\"}],\"name\":\"openKeep\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"keepAddress\",\"type\":\"address\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"openKeepFeeEstimate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"poolStakeWeightDivisor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_application\",\"type\":\"address\"}],\"name\":\"registerMemberCandidate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"requestNewGroupSelectionSeed\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"reseedPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minimumBondableValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_groupSize\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_honestThreshold\",\"type\":\"uint256\"}],\"name\":\"setMinimumBondableValue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_application\",\"type\":\"address\"}],\"name\":\"updateOperatorStatus\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"We avoid redeployment of bonded ECDSA keep contract by using the clone factory. Proxy delegates calls to sortition pool and therefore does not affect contract's state. This means that we only need to deploy the bonded ECDSA keep contract once. The factory provides clean state for every new bonded ECDSA keep clone.\",\"methods\":{\"__beaconCallback(uint256)\":{\"details\":\"The function is expected to be called in a callback by the random beacon.\",\"params\":{\"_relayEntry\":\"Beacon output.\"}},\"__isRecognized(address)\":{\"params\":{\"_delegatedAuthorityRecipient\":\"Address of the delegated authority recipient.\"},\"return\":\"True if provided address is recognized delegated token staking authority for this factory contract.\"},\"balanceOf(address)\":{\"params\":{\"_operator\":\"The operator to query the balance of.\"},\"return\":\"An uint256 representing the amount staked by the passed operator.\"},\"createSortitionPool(address)\":{\"details\":\"Emits an event after sortition pool creation.\",\"params\":{\"_application\":\"Address of the application.\"},\"return\":\"Address of the created sortition pool contract.\"},\"getKeepAtIndex(uint256)\":{\"return\":\"The address of the keep at the given index.\"},\"getKeepCount()\":{\"details\":\"Checks the size of the keeps array.\",\"return\":\"The number of keeps opened so far.\"},\"getKeepOpenedTimestamp(address)\":{\"return\":\"Timestamp the given keep was opened at or 0 if this keep was not created by this factory.\"},\"getSortitionPool(address)\":{\"details\":\"Reverts if sortition does not exist for the application.\",\"params\":{\"_application\":\"Address of the application.\"},\"return\":\"Address of the sortition pool contract.\"},\"getSortitionPoolWeight(address)\":{\"details\":\"Reverts if sortition does not exits for the application.\",\"params\":{\"_application\":\"Address of the application.\"},\"return\":\"The sum of all registered operators' weights in the pool. Reverts if sortition pool for the application does not exist.\"},\"hasMinimumStake(address)\":{\"params\":{\"_operator\":\"operator's address\"},\"return\":\"True if has enough active stake to participate in the network, false otherwise.\"},\"isOperatorAuthorized(address)\":{\"params\":{\"_operator\":\"operator's address\"},\"return\":\"True if the factory has access to the staked token balance of the provided operator and can slash that stake. False otherwise.\"},\"isOperatorEligible(address,address)\":{\"params\":{\"_application\":\"Customer application address.\",\"_operator\":\"Operator's address.\"}},\"isOperatorRegistered(address,address)\":{\"params\":{\"_application\":\"Customer application address.\",\"_operator\":\"Operator's address.\"},\"return\":\"True if operator is already registered in the candidates pool, false otherwise.\"},\"isOperatorUpToDate(address,address)\":{\"params\":{\"_application\":\"Customer application address.\",\"_operator\":\"Operator's address.\"}},\"newEntryFeeEstimate()\":{\"return\":\"Uint256 estimate.\"},\"openKeep(uint256,uint256,address,uint256,uint256)\":{\"details\":\"Selects a list of signers for the keep based on provided parameters. A caller of this function is expected to be an application for which member candidates were registered in a pool.\",\"params\":{\"_bond\":\"Value of ETH bond required from the keep in wei.\",\"_groupSize\":\"Number of signers in the keep.\",\"_honestThreshold\":\"Minimum number of honest keep signers.\",\"_owner\":\"Address of the keep owner.\",\"_stakeLockDuration\":\"Stake lock duration in seconds.\"},\"return\":\"Created keep address.\"},\"openKeepFeeEstimate()\":{\"return\":\"Uint256 estimate.\"},\"registerMemberCandidate(address)\":{\"details\":\"If caller is already registered it returns without any changes.\",\"params\":{\"_application\":\"Address of the application.\"}},\"setMinimumBondableValue(uint256,uint256,uint256)\":{\"params\":{\"_groupSize\":\"Number of signers in the keep.\",\"_honestThreshold\":\"Minimum number of honest keep signers.\",\"_minimumBondableValue\":\"The minimum bond value the application requires from a single keep.\"}},\"updateOperatorStatus(address,address)\":{\"params\":{\"_application\":\"Customer application address.\",\"_operator\":\"Operator's address.\"}}},\"title\":\"Bonded ECDSA Keep Factory\"},\"userdoc\":{\"methods\":{\"__beaconCallback(uint256)\":{\"notice\":\"Sets a new group selection seed value.\"},\"__isRecognized(address)\":{\"notice\":\"Verifies if delegates authority recipient is valid address recognized by the factory for token staking authority delegation.\"},\"balanceOf(address)\":{\"notice\":\"Gets the stake balance of the specified operator.\"},\"createSortitionPool(address)\":{\"notice\":\"Creates new sortition pool for the application.\"},\"getKeepAtIndex(uint256)\":{\"notice\":\"Gets a specific keep address at a given index.\"},\"getKeepCount()\":{\"notice\":\"Gets how many keeps have been opened by this contract.\"},\"getKeepOpenedTimestamp(address)\":{\"notice\":\"Gets the opened timestamp of the given keep.\"},\"getSortitionPool(address)\":{\"notice\":\"Gets the sortition pool address for the given application.\"},\"getSortitionPoolWeight(address)\":{\"notice\":\"Gets the total weight of operators in the sortition pool for the given application.\"},\"hasMinimumStake(address)\":{\"notice\":\"Checks if the specified account has enough active stake to become network operator and that this contract has been authorized for potential slashing.     /// Having the required minimum of active stake makes the operator eligible to join the network. If the active stake is not currently undelegating, operator is also eligible for work selection. \"},\"isOperatorAuthorized(address)\":{\"notice\":\"Checks if the factory has the authorization to operate on stake represented by the provided operator. \"},\"isOperatorEligible(address,address)\":{\"notice\":\"Checks if given operator is eligible for the given application.\"},\"isOperatorRegistered(address,address)\":{\"notice\":\"Checks if operator is registered as a candidate for the given customer application.\"},\"isOperatorUpToDate(address,address)\":{\"notice\":\"Checks if operator's details in the member candidates pool are up to date for the given application. If not update operator status function should be called by the one who is monitoring the status.\"},\"newEntryFeeEstimate()\":{\"notice\":\"Gets a fee estimate for a new random entry.\"},\"newGroupSelectionSeedFee()\":{\"notice\":\"Calculates the fee requestor has to pay to reseed the factory for signer selection. Depending on how much value is stored in the reseed pool and the price of a new relay entry, returned value may vary.\"},\"openKeep(uint256,uint256,address,uint256,uint256)\":{\"notice\":\"Opens a new ECDSA keep.\"},\"openKeepFeeEstimate()\":{\"notice\":\"Gets a fee estimate for opening a new keep.\"},\"registerMemberCandidate(address)\":{\"notice\":\"Register caller as a candidate to be selected as keep member for the provided customer application.\"},\"requestNewGroupSelectionSeed()\":{\"notice\":\"Reseeds the value used for a signer selection. Requires enough payment to be passed. The required payment can be calculated using reseedFee function. Factory is automatically triggering reseeding after opening a new keep but the reseed can be also triggered at any moment using this function.\"},\"setMinimumBondableValue(uint256,uint256,uint256)\":{\"notice\":\"Sets the minimum bondable value required from the operator to join the sortition pool of the given application. It is up to the application to specify a reasonable minimum bond for operators trying to join the pool to prevent griefing by operators joining without enough bondable value.\"},\"updateOperatorStatus(address,address)\":{\"notice\":\"Invokes update of operator's details in the member candidates pool for the given application\"}},\"notice\":\"Contract creating bonded ECDSA keeps.\"}},\"settings\":{\"compilationTarget\":{\"/home/kowal/Projects/sovryn/keep-ecdsa/solidity/contracts/BondedECDSAKeepFactory.sol\":\"BondedECDSAKeepFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/kowal/Projects/sovryn/keep-ecdsa/solidity/contracts/AbstractBondedECDSAKeep.sol\":{\"keccak256\":\"0xf30ee72199b66699bda3d0b543ecbea81f3c6f038d114653b0dff3ed965917af\",\"urls\":[\"bzz-raw://fc82178453c6503c722989f6d4f6d088f79e77845601893e1a2357d9b3b54e7b\",\"dweb:/ipfs/QmSbXo1w66Jw3TfbSenyJH7J7vKrrKnbQg2E3rDyQSSefK\"]},\"/home/kowal/Projects/sovryn/keep-ecdsa/solidity/contracts/AbstractBonding.sol\":{\"keccak256\":\"0xfa1dc6ce7275597b41bf827cbaccba02356221fd4582043f4202a564283a8c94\",\"urls\":[\"bzz-raw://1467ee58821e268916c01214a60ba89a6c1f86552b6804c03e6a24ff8c2324fa\",\"dweb:/ipfs/QmPWHY2yazh7XfTnYCEwZBvoAShK7vkjCXGikMeE9UCaaG\"]},\"/home/kowal/Projects/sovryn/keep-ecdsa/solidity/contracts/BondedECDSAKeep.sol\":{\"keccak256\":\"0x034a5dc5aafcde1958d66e687e0ffb459ee2e674afa088974f26a6a2ec203c61\",\"urls\":[\"bzz-raw://692686e7b6b9d673c5fcd2016fa027f60cf01f42888dc54761323a31fe5f62ec\",\"dweb:/ipfs/QmYdpb79ra3jiNaSEdoZhdQxcNY648ZbXd9QJGxGVeotDi\"]},\"/home/kowal/Projects/sovryn/keep-ecdsa/solidity/contracts/BondedECDSAKeepFactory.sol\":{\"keccak256\":\"0x8a2458db2682e68dd06cda051ca4a5e7da88940f8627f0e5ecd75684dfd167ce\",\"urls\":[\"bzz-raw://8d469b3b2e3200ce7c19df102e953149cc0dc8e19ebef198fd7ae30b352ca6ac\",\"dweb:/ipfs/QmfAaEMh7dZbK51jk4ANLcYKifazCoPoafs1ahxbeMCfhk\"]},\"/home/kowal/Projects/sovryn/keep-ecdsa/solidity/contracts/CandidatesPools.sol\":{\"keccak256\":\"0x8e7bdbebd3dfe16d075d516ea52cd8c9438a2e8a8fb7254a7f29a06ddd941fcc\",\"urls\":[\"bzz-raw://2cbd86e98e09ee38b70f1d5e2bf4fbec12755131b89640ebacdd2cb47072ced0\",\"dweb:/ipfs/QmTXj4eZmpfTQNMxfyiXsi6ge4RyUqBnNsv6QrF7xPQQ5A\"]},\"/home/kowal/Projects/sovryn/keep-ecdsa/solidity/contracts/CloneFactory.sol\":{\"keccak256\":\"0xc474d7a9994b783d28962cf9b22fa015563d2a94461af48b7e559439caf53ef1\",\"urls\":[\"bzz-raw://8fe135f81f3f4ab4e13c5a86c2a0853309d91918159b3533c0c483c889035243\",\"dweb:/ipfs/QmVg1wsXggXH4chee9HuwuwdUjaj75WHBrv17ESCjwAfJh\"]},\"/home/kowal/Projects/sovryn/keep-ecdsa/solidity/contracts/GroupSelectionSeed.sol\":{\"keccak256\":\"0x105193bb6372cd0928ee93e1e3325c1f083dc11517ffc1efbf6957943be85316\",\"urls\":[\"bzz-raw://54baf3a168f857eb1091fdeaac8457d725992ca434f1a3e56409136a9cd5c522\",\"dweb:/ipfs/QmT7R8JXJsKDXjK3ie54oEcPo7PD9ARHYWPJD6ZcxdwvZz\"]},\"/home/kowal/Projects/sovryn/keep-ecdsa/solidity/contracts/KeepBonding.sol\":{\"keccak256\":\"0x9d735436f51788923fdb965c03f74ff9781e91351998f8f6335cfcd0b5547c3a\",\"urls\":[\"bzz-raw://d013bde0b2aeb22fb561540c17dc99efe2ff0fef0bd1b60672dfcbcd78a68d9b\",\"dweb:/ipfs/QmeWWdKv6z7QXNpzHAnFwcUUPWAcDeYiL6T7VeHtPYCepr\"]},\"/home/kowal/Projects/sovryn/keep-ecdsa/solidity/contracts/KeepCreator.sol\":{\"keccak256\":\"0x0e0f7f07e0da6300e3f7ab54a04f657f6b639ca6d8ca173ed0c72ed984f9ff29\",\"urls\":[\"bzz-raw://c194e148dd7a9722840f191bccfd8bd0e587980e224d09ed75b763394ad706e3\",\"dweb:/ipfs/QmehudS123595jGdobFd5i54rH8fEKqT7ExBmsg9sBxXmC\"]},\"/home/kowal/Projects/sovryn/keep-ecdsa/solidity/contracts/api/IBondedECDSAKeep.sol\":{\"keccak256\":\"0x7ecd15b29cfe5da88d5b37e290fb9b49505e7dc49c311b76ab1ead34b2455eaf\",\"urls\":[\"bzz-raw://db6e10bf48ed6c451bc9fb43576f43f8bc2888bfba874eab58aed1bbe2dae7ce\",\"dweb:/ipfs/QmW9KhkuBLek9WhNnhc8CrX4N4msBndb9FQh2ypv71UDvs\"]},\"/home/kowal/Projects/sovryn/keep-ecdsa/solidity/contracts/api/IBondedECDSAKeepFactory.sol\":{\"keccak256\":\"0x07ae883d2a0f5b7fe2c0b055206f565da51b04d1ca574ae4d4da3a19e6badcdb\",\"urls\":[\"bzz-raw://038b4f5b45b2d676ef7411b69cadd490d5789e3d245afd78aaa72177ce042572\",\"dweb:/ipfs/QmRaBYU4HCDSH33a3gpLN4t2TsyNaFRxLKv3WeAZEgk9Rr\"]},\"/home/kowal/Projects/sovryn/keep-ecdsa/solidity/contracts/api/IBondingManagement.sol\":{\"keccak256\":\"0x00888f7edf918020ce70acf3ab6a17ff3d4b410a5413bf7ded1d3d5f21de1fb7\",\"urls\":[\"bzz-raw://a8e5989318021ed8866f03537c649c12fb75831859df5198028e5a4430494799\",\"dweb:/ipfs/QmWCPALgJvVfq3aveqEyRcquEckdeHFFbD7ATuraMAVaer\"]},\"@keep-network/keep-core/contracts/Authorizations.sol\":{\"keccak256\":\"0xd49b3840507c924cc37ac2da48bf1549013a79d84daf2cb106b4d4b9c6096e7a\",\"urls\":[\"bzz-raw://2b740d974564d027f9df04253f71ce2314839a682beac926b778e0f7ea59fbb5\",\"dweb:/ipfs/QmamRuiYLpt2fCUPrQypkvrf7BrCsdV12QgaSHQYPsJHT2\"]},\"@keep-network/keep-core/contracts/GrantStakingPolicy.sol\":{\"keccak256\":\"0x9d7604d5ccd4bf23b5aca39074183aabad98ce47bc74edd2023e7e0b1be6d1b5\",\"urls\":[\"bzz-raw://92fb21051ecfa9b9885b775c2cff1778cfbab3afe3b436e234a4f08181277983\",\"dweb:/ipfs/QmPxQUWpL6iFcydJxyFsZjmWRnxziPVA2rqrgwhn6F7Tfe\"]},\"@keep-network/keep-core/contracts/IRandomBeacon.sol\":{\"keccak256\":\"0x7582dc270725d9d15dbc2e13b263fa2f2c3164d9c2ac4a452b2a891a8285262a\",\"urls\":[\"bzz-raw://25cfc654326961065b23bd76da82b9c86354b30bf0b37d16c4734bdc3033b84d\",\"dweb:/ipfs/QmYvebB1arUVwod3speEHWZx6qZNaPuB94XhSFR6hPw8a6\"]},\"@keep-network/keep-core/contracts/KeepRegistry.sol\":{\"keccak256\":\"0x723cf0ade28c4158935e6c22f1da1ee98252ad1bc1cac30fe8fa462fe36ea886\",\"urls\":[\"bzz-raw://6244a0370c42ae7bac430e646694d64b80397e02209ae9ec1e01776e6b5a49fc\",\"dweb:/ipfs/QmcygjqGFv81ZpyKTUwdMRt1VdnM9H6pGUuKAP5YLmL5U8\"]},\"@keep-network/keep-core/contracts/KeepToken.sol\":{\"keccak256\":\"0x50defd2a00e356ed8eaf9aba405719f567c2da0164db5cdeadd68d155f6ded3b\",\"urls\":[\"bzz-raw://dbc8fb24f311c2dc95a26b1a1dfc9c7d93c634d32ef623fc23f799da5988fafb\",\"dweb:/ipfs/QmShZ3FtP2WUC9r1rbka8BWSf6oFkBbuxgxiDqhpwxo6zZ\"]},\"@keep-network/keep-core/contracts/ManagedGrant.sol\":{\"keccak256\":\"0x47f1cccc9f9c095b34ca514ae25cc467bbced15251b06f39896e0237e7fdec7c\",\"urls\":[\"bzz-raw://cad43bec15804ff17bd40fdee3598676f716b60204da9be163f15f45135ad250\",\"dweb:/ipfs/QmYHYEfR2UPZJZpsDhN2o1iD7drVSz8oqbYQFVT4G2oKqr\"]},\"@keep-network/keep-core/contracts/StakeDelegatable.sol\":{\"keccak256\":\"0xa1d81d17bc9f6bcc5878fb9b8acfdf7797c1561bf35111bac6bdbc3bba2c62aa\",\"urls\":[\"bzz-raw://deca3e5444cd9a5546818854009f9ac8c8e58479609de1a128ca73863f10ae7a\",\"dweb:/ipfs/QmcWYJkcHxsmCEhxRz6W5gSBgH597VYZgEaog9pzoLyZtt\"]},\"@keep-network/keep-core/contracts/TokenGrant.sol\":{\"keccak256\":\"0xad97f1a667f3be66dc6904fb7925e940ca57e4c88d38ae960672d95d7911bf6f\",\"urls\":[\"bzz-raw://f3f6b377ddcc2ad2b47811f115c20bdf6a6a208066afaebe027ac4eb165ca231\",\"dweb:/ipfs/QmXNSkqCDoBS1KGQbQ3PqXr1iMPgkPNWLcEKiBrV8u5LeW\"]},\"@keep-network/keep-core/contracts/TokenGrantStake.sol\":{\"keccak256\":\"0x014bbb7f336388024480415391cad745ec52cd255cd2740c890948246ab4d524\",\"urls\":[\"bzz-raw://745d488e7271fe9c71879c09fd09eb96b2193346adfddbb59638b80610707be3\",\"dweb:/ipfs/QmR3DyUzhTjE971QovXxMchRkUD3eHUj5S73Eahrf2Wyw8\"]},\"@keep-network/keep-core/contracts/TokenSender.sol\":{\"keccak256\":\"0xe50a3a7d2f30e8801d8b608c462f65c868e17ff8b2f0db3448876adf0f288117\",\"urls\":[\"bzz-raw://f040546b183d26a9e26adfc01a6425eb6bce1cec1ab5b142aa360c8096ede385\",\"dweb:/ipfs/QmdRa8huRUmsTTvwnWPBF7V2gTQAGsGn3VFUeBfbisBszw\"]},\"@keep-network/keep-core/contracts/TokenStaking.sol\":{\"keccak256\":\"0x957a8b500117fd8c74466e9c2cfd13e295e5cd66107bda1e5fdea1871248d0e8\",\"urls\":[\"bzz-raw://c6cca24bbf724e77009cb683d1715b8ffb1faa7ad2089156d6fc8d600a397fd4\",\"dweb:/ipfs/QmeVnKTgFhfVSfEgCcoFD86MfGUB9FTD8cbi5SxX2Vmy67\"]},\"@keep-network/keep-core/contracts/TokenStakingEscrow.sol\":{\"keccak256\":\"0x152a565d564bee09ea3f0f363c912fe3361966bf8d60f14ebcb8bf593d3b140e\",\"urls\":[\"bzz-raw://78ffe4daadcfeacc49c45c4e9879f62c2df3bdd00587b033492ee901537976f1\",\"dweb:/ipfs/QmPwmSu4XF7KpHnC6bqBTkrkjA6CUnC8h5PML9DqkAzLW8\"]},\"@keep-network/keep-core/contracts/libraries/RolesLookup.sol\":{\"keccak256\":\"0x4622ccfb359f6478d3e87fb99f755dcebde1b5040662f3572ab8c8d50d2f8bc0\",\"urls\":[\"bzz-raw://cee3570c755b0a30412af08ce4663f85078b10a0eccf6808bec125897c7ead8e\",\"dweb:/ipfs/Qmc9EAjLfBYXfhtd24uNFzu1XKrPaqS5ismF4ZGsPyiBuU\"]},\"@keep-network/keep-core/contracts/libraries/grant/UnlockingSchedule.sol\":{\"keccak256\":\"0x26f8fe158e3f661bc54fc42a50a1686ef92dd18316a03592bafa2db6a2af9c3f\",\"urls\":[\"bzz-raw://718b4a48d7a50c151328cd15e91e9b9b4cba0db7f7b6b06533709614f9811a55\",\"dweb:/ipfs/QmYyTN6cLZiWumwE6jt2yDHNtc6DMCXaEntgKAN3zqp8yX\"]},\"@keep-network/keep-core/contracts/libraries/staking/GrantStaking.sol\":{\"keccak256\":\"0x96253ba2eb78b83a04dd48f0a7ff6083ca72d6e4a27dec0888959c1b3b0be9aa\",\"urls\":[\"bzz-raw://a2ad3ddeba9de2f24b1c1c0339baf52a0b0446248ddfc0554d8fb71ce2057c0f\",\"dweb:/ipfs/QmdYxpcxm8TG7i3qYswudhxvff8hnARSR1GsVcY2fjUpzh\"]},\"@keep-network/keep-core/contracts/libraries/staking/LockUtils.sol\":{\"keccak256\":\"0x0fbd9a4d82cf8803f00cb59cca9580d379c8d98a759b8a6d74f75f01c19fc635\",\"urls\":[\"bzz-raw://f2df931f0a11d4f63aa1f6193419606711a24ce7381dd15db52419c783dc7952\",\"dweb:/ipfs/QmRMGWSbfYPaxppBb7w2cQHpAwDc4T9MBmpZqU396i8hKK\"]},\"@keep-network/keep-core/contracts/libraries/staking/Locks.sol\":{\"keccak256\":\"0xf45306074f9e893646c21e53954891e29c8011887545d8bbbcab7ef74558b18a\",\"urls\":[\"bzz-raw://971d3c54afde9050e455e79ec42b28d86a101bec8afab30e22b1fa4bfc110cc4\",\"dweb:/ipfs/QmfGTvrbc8dJXaxsxAmZM6oU8AvP5V6C2PQ5JF3gCJC81m\"]},\"@keep-network/keep-core/contracts/libraries/staking/MinimumStakeSchedule.sol\":{\"keccak256\":\"0x31a399a918eba21f0002019a70b1b68c9610a5a4977fcd874b86d4965eb974c3\",\"urls\":[\"bzz-raw://acbe55a89d5e6f7b6d4add0764e7b47acbdc31afc0d5b1f211b45546d3a5cd6c\",\"dweb:/ipfs/QmcXSUaLV7d117ZvyMnRB3MVXVEGy62ccB5u6d8h1Sm792\"]},\"@keep-network/keep-core/contracts/libraries/staking/TopUps.sol\":{\"keccak256\":\"0xe3a3c8d5e542f4f8ac8fdab92de57081257e1c07288e0e592cfc27551085e07f\",\"urls\":[\"bzz-raw://4cffa006da7f76868bcca1d107be436f3cd83339ff76df79c3e92a029e7ad66a\",\"dweb:/ipfs/QmZ5AArQ3gKBeXqGwGnSH45BQZQpGvjuQ4LnNaarrLrdy5\"]},\"@keep-network/keep-core/contracts/utils/AddressArrayUtils.sol\":{\"keccak256\":\"0xfb546b43ffd00d565d8440b6d221f5f046222e95469e33044665a56e79fcde48\",\"urls\":[\"bzz-raw://1f947ef8956e26d564cffd73a4f0dcdb02db1d7a46774d4e8876328116f6b663\",\"dweb:/ipfs/QmYUpg3JhhkogsY5nnjyMg6TEwoqRzTkJAWdhQGSbYqMH3\"]},\"@keep-network/keep-core/contracts/utils/BytesLib.sol\":{\"keccak256\":\"0xf5c726e1c77dea37b9ea1edd9bc7b4eebfafe33ce766a2607eb37d7144e4d68c\",\"urls\":[\"bzz-raw://32f61bad1923d749aff36ad9f62929e603ed27832348ba58d44d01561339d761\",\"dweb:/ipfs/QmWvfwapwUr9SnnEWXdmpo4r2TtVPFJFSUBXKJQpLZkYp1\"]},\"@keep-network/keep-core/contracts/utils/OperatorParams.sol\":{\"keccak256\":\"0xc13cbf7a6ad4740a8ad6373229b20b66eb4cc3d7aa9870161765ab8197513ab7\",\"urls\":[\"bzz-raw://e8343bc058fcee610863777792a25608549d80e126a05d076481dedb48587565\",\"dweb:/ipfs/QmR8ztc4StcK4yw7QmXj2b9TtS3Qs1BERrqDLtPZmUiffS\"]},\"@keep-network/keep-core/contracts/utils/PercentUtils.sol\":{\"keccak256\":\"0x696b15997a739e6c47c5bc29e1f9023998bb188405221a6b337377bca4ab3f68\",\"urls\":[\"bzz-raw://e93e2287fe6b6e1c5cc45ebc92b9d682e19a5b1302e00cb037391da753282bbf\",\"dweb:/ipfs/QmRXmEopRWNaL7mvY5nTyNNob3EPHF67R6Nxhm3F4VsDoo\"]},\"@keep-network/sortition-pools/contracts/AbstractSortitionPool.sol\":{\"keccak256\":\"0xe4b8c582f8ab1384e6ebd7acd2865bb95cc920bd945bb79f1ffa4ab5faf68a43\",\"urls\":[\"bzz-raw://6db8b7341834487a51359e8905e217a6c5a2a4b57af256c8432bc4df88c68798\",\"dweb:/ipfs/Qmf8JFkxJUiMxSkFfSr8KuFce6rLcQhggLrXQAgdn8Wrfj\"]},\"@keep-network/sortition-pools/contracts/BondedSortitionPool.sol\":{\"keccak256\":\"0xbae24009aa6ca4eae00c43632fe039b6349698949e6833b03b78e15c518d3609\",\"urls\":[\"bzz-raw://aa9b88974dd10438b46dede91e167bb74a63338733bd7a745988e892aa459046\",\"dweb:/ipfs/QmYwoXXLW3NmsBha2FhBLrqCmMGZXpUvepZaJ3xRcTNJW2\"]},\"@keep-network/sortition-pools/contracts/BondedSortitionPoolFactory.sol\":{\"keccak256\":\"0x975fc72c7a883b2619cd60cdb295fdb694475fb14ab28e815808d26f69073417\",\"urls\":[\"bzz-raw://6493092041775c8dba5c944bf22c8e2349a9a7e7aa700c77dbe7ca7449f18d9a\",\"dweb:/ipfs/QmbNKytR1wts8ZPcbD9sd399kcqbxLtdR39Xn3cKWhRPNp\"]},\"@keep-network/sortition-pools/contracts/Branch.sol\":{\"keccak256\":\"0x5a25a20ada831bae7d18c81b5c5064237d62b6c85dc5058f2026b4e7f54b764b\",\"urls\":[\"bzz-raw://59a54e0720c7ad0f901d9ca1c8109557b73a53102078622cbe18bdeee0bb0130\",\"dweb:/ipfs/QmZsbANSbvEAz52Je5Nj9zg6v8eqUKxfhPM2RbbpfWrjcd\"]},\"@keep-network/sortition-pools/contracts/DynamicArray.sol\":{\"keccak256\":\"0x066ce3500e921ac158f43fa03fcf4db7972d2e822fb0a4837047a46cea955838\",\"urls\":[\"bzz-raw://01dbda706114d3fc665c8f0e66b55ffb7d7e5ac07b080941c3aa269fe77950a5\",\"dweb:/ipfs/QmZYJggQVRX9JGrjrrEwGfagXYa36GkGxqTYcFGts7XBpe\"]},\"@keep-network/sortition-pools/contracts/GasStation.sol\":{\"keccak256\":\"0x7d308db5dc6172a6921b9a85876f8d1bcff7bab312c48c7622c40ce125cbbde5\",\"urls\":[\"bzz-raw://603855f1e71fb4a494ecb752d7c5056be58b541eae45f77ff823c96624b2191b\",\"dweb:/ipfs/QmXYdmDBdsfWAxQEjeZN3sJ6HfaeBH5BJ4YZvhVz8Nns3b\"]},\"@keep-network/sortition-pools/contracts/Interval.sol\":{\"keccak256\":\"0x2f6427bc88a1394183267371d010902cbc4881f446e8331362800d6858167138\",\"urls\":[\"bzz-raw://da900040f884c3fcdf45bb5176a6717428c69572feb3a58e512a870a0b9f3abf\",\"dweb:/ipfs/QmaJetk4AUDAfPaocX5nxAfgpnAccRFaYUEHXBXKPjkHZR\"]},\"@keep-network/sortition-pools/contracts/Leaf.sol\":{\"keccak256\":\"0xed4661ae7b2946d79e102ae0465905ac73818387647ea7c531d99c5848208af2\",\"urls\":[\"bzz-raw://699f16bffd042beaf313a99d50fe2e2271303798fb23c8d91555c86f97df39ab\",\"dweb:/ipfs/QmYhxivxadGS2TCFXSq3XDZkHmbLagbwi66mKup3KBSWbg\"]},\"@keep-network/sortition-pools/contracts/Position.sol\":{\"keccak256\":\"0x0240fd41cc284d8ebfada3433920dea826dac5d9e3b2d31d43c808bc24b0611b\",\"urls\":[\"bzz-raw://2901fcbfa2f21a1a81c78f40c2172ac15676303ab1357396a04d965224ca67e9\",\"dweb:/ipfs/QmcDa2o51QWZWZCvxTLNMV1mfe3iuANDwmzaZrDpV8Ke8V\"]},\"@keep-network/sortition-pools/contracts/RNG.sol\":{\"keccak256\":\"0x5bf17e705f2e5c082567bdc5d1b352e3fafc0a170f19f0d0f53e0c4655b1980a\",\"urls\":[\"bzz-raw://3db885c8c7856ac8d122c208912ba045abb380574678df6584f4f63329f3ea53\",\"dweb:/ipfs/QmXKWpJkhaeW6RNDY3ABAVvRR7eUTvhJxytufSkTkWLgHx\"]},\"@keep-network/sortition-pools/contracts/SortitionTree.sol\":{\"keccak256\":\"0x03a7f50efc5148f155b935106c869c0f1ebacc9e0ab09a2461a404e2b12b8053\",\"urls\":[\"bzz-raw://2b4a02be0ad34b14125c208e6ce4d7971490af24d156ca7e663bf2f1505eacc9\",\"dweb:/ipfs/QmXiZjTqzKTPkMPqFNoPYeRo5p1rUyB6kCRiFBt89xAsHw\"]},\"@keep-network/sortition-pools/contracts/StackLib.sol\":{\"keccak256\":\"0xff1cb7ce8eee34d1bcd841136088c955d61bb90d465407d5801e1ffd2f4f2c78\",\"urls\":[\"bzz-raw://f7e5586e5027b7948960ac2baca141794e2e8ca7644fc7033032adc4aee96e38\",\"dweb:/ipfs/QmXqfRHKEXH2tUy8QqAzrwtesrnR5nmi7acv4NLsng2ujL\"]},\"@keep-network/sortition-pools/contracts/api/IBonding.sol\":{\"keccak256\":\"0xe62ea5302af749042e419ad1643f0e9788bbbefe82a5c5d0b3e77a4a5a4b241e\",\"urls\":[\"bzz-raw://3ac748582f07716200c2f500aee47a8c2a79c1144fe3454e112290906cb3dfbf\",\"dweb:/ipfs/QmdNqK1V25QB1asWyWJfsSAVxorTjBp8DXG5eXw71e31rM\"]},\"@keep-network/sortition-pools/contracts/api/IStaking.sol\":{\"keccak256\":\"0xf7cc15fb64346774c97f93b7f626d7adcf5a288377f44048906d93511c5ca3cd\",\"urls\":[\"bzz-raw://f9a04f30cad1f821488043c255ee5516c0d84645596f0a9b90fc4a90a03943ce\",\"dweb:/ipfs/QmPaoiRZfA1NpzHVT69sV79ygeXGEx1ZZ3rGdmV2Gvymv3\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x4ccf2d7b51873db1ccfd54ca2adae5eac3b184f9699911ed4490438419f1c690\",\"urls\":[\"bzz-raw://d62d769b2219d5de39013093412623e624fa887f871826ea3bae6052ee893610\",\"dweb:/ipfs/QmV3yVktya1s617QmuzQR2CfuJgUi3dR2xEZY9ecmqZ2G1\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xf79fb10e8235770eb4aea7249034076a3cc9f9119ad944fc48705bae9c9d20dc\",\"urls\":[\"bzz-raw://cd3429aa9a4878dcf6c73faa32c3722f4013d4be012ece543b246faa6b50f55c\",\"dweb:/ipfs/QmS55hgTvNEAKinus19m65CB4wcymN8EiUPFpRx5tYJ1i2\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x852793a3c2f86d336a683b30d688ec3dcfc57451af5a2bf5975cda3b7191a901\",\"urls\":[\"bzz-raw://4f5b57664069671648fb81f55b0082faecdf1b2f159eec6b1fa6cef9b7d73bc5\",\"dweb:/ipfs/QmcyytaLs7zFdb4Uu7C5PmQRhQdB3wA3fUdkV6mkYfdDFH\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20Burnable.sol\":{\"keccak256\":\"0xa5ebf3344a36eb60e723e0764d85251c496e15e4b2d737b56415502b559a1765\",\"urls\":[\"bzz-raw://c543fd1fc299b7d32c658c86118ff2d0e7897a7c8b9d5f576fe6c0271c28961b\",\"dweb:/ipfs/QmNMrjLnsC4JP54aXLHhpra5NPTAs8rrd2bgXfYYYdJMhS\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol\":{\"keccak256\":\"0xc61b3603089b09a730d8ca72e9133a496cc4405da40e9b87c12f073245d774bf\",\"urls\":[\"bzz-raw://de8bb0003d53de236913f0e0102e7a9d015e02098f2495edd000f207fe2be2f4\",\"dweb:/ipfs/QmbtwNwAJEehWWL7yGGyyMoenQvcqtz91pqLgQPpLRoLYC\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x90e8c2521653bbb1768b05889c5760031e688d9cd361f167489b89215e201b95\",\"urls\":[\"bzz-raw://d0abb99bb8bfc2bc0a89902b8ed1dc0442ad08cc78cee64c291b3df6a27bcccc\",\"dweb:/ipfs/QmP5NaEwZthQeM2ESz4WTT3osrP7jhbvu7ocbttBi2JAw6\"]},\"openzeppelin-solidity/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xf6f89424e17870561dc23c5933c55c5726b66a68d51ad2a2c00c569a5f02f507\",\"urls\":[\"bzz-raw://005657a7ffbf6d12726ac0167b55be965dc473d43f061b605f883a54cc00ab4f\",\"dweb:/ipfs/QmaBzyvDQyNnn6DXQYewEtN9Go85orikSnW9PwNWqUGPEX\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0xf3358e5819ca73357abd6c90bdfffd0474af54364897f6b3e3234c4b71fbe9a1\",\"urls\":[\"bzz-raw://75ae8d04454d1511a2ed986cc8585736f05c5c25280683b3d24712a9f414a4bf\",\"dweb:/ipfs/Qmb3kNCoBUZdah1AgBBD4zMk898j5Qw8ahT1w5cCMYp5Y3\"]},\"openzeppelin-solidity/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x0441ff2b36d503f3a29d28d3754291f119064f4973d5c780698143d919037a78\",\"urls\":[\"bzz-raw://af27dd68d2371e68c8ed8cf297ec6d832bf906742d53367b70399ba918060cb7\",\"dweb:/ipfs/QmcMMjZceFepXgRrzSx577oWwt7SCSFzoqZiTF7tTxquF7\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106101cd5760003560e01c8063a10132ad116100f7578063b7a6f48311610095578063d14fede111610064578063d14fede114610a8b578063d870c03414610af0578063ebcbb39f14610b59578063eca4a80d14610bbe576101cd565b8063b7a6f483146108dc578063b8ee915614610965578063bc2c289f146109b4578063ca050cfd146109df576101cd565b8063a5a53fb5116100d1578063a5a53fb514610830578063a5b310551461085b578063aa7517e114610886578063b2dc7593146108b1576101cd565b8063a10132ad146106eb578063a23af33014610716578063a3c28a131461079f576101cd565b8063514899851161016f57806370a082311161013e57806370a082311461058f57806379a382e9146105f45780638701af421461061f57806392ae584a1461069a576101cd565b8063514899851461041b5780635b0d5b8e146104465780635c1c0710146104cf5780635cef841714610538576101cd565b806321f74e56116101ab57806321f74e5614610342578063356e07281461034c57806336c2a0001461038757806338400400146103f0576101cd565b806309211ceb146101df5780631133fd2c14610270578063202bb9f0146102c7575b34600560008282540192505081905550005b3480156101eb57600080fd5b5061022e6004803603602081101561020257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c2f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561027c57600080fd5b50610285610d7c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102d357600080fd5b50610300600480360360208110156102ea57600080fd5b8101908080359060200190929190505050610da2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61034a610e5d565b005b34801561035857600080fd5b506103856004803603602081101561036f57600080fd5b81019080803590602001909291905050506110ef565b005b34801561039357600080fd5b506103d6600480360360208110156103aa57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506111bc565b604051808215151515815260200191505060405180910390f35b3480156103fc57600080fd5b506104056112d3565b6040518082815260200191505060405180910390f35b34801561042757600080fd5b506104306113b5565b6040518082815260200191505060405180910390f35b34801561045257600080fd5b506104b56004803603604081101561046957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061146c565b604051808215151515815260200191505060405180910390f35b3480156104db57600080fd5b5061051e600480360360208110156104f257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611630565b604051808215151515815260200191505060405180910390f35b34801561054457600080fd5b5061054d611747565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561059b57600080fd5b506105de600480360360208110156105b257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061176c565b6040518082815260200191505060405180910390f35b34801561060057600080fd5b5061060961184f565b6040518082815260200191505060405180910390f35b34801561062b57600080fd5b506106586004803603602081101561064257600080fd5b8101908080359060200190929190505050611855565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156106a657600080fd5b506106e9600480360360208110156106bd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611891565b005b3480156106f757600080fd5b506107006119fc565b6040518082815260200191505060405180910390f35b34801561072257600080fd5b506107856004803603604081101561073957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611a02565b604051808215151515815260200191505060405180910390f35b3480156107ab57600080fd5b506107ee600480360360208110156107c257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611acd565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561083c57600080fd5b50610845611d3c565b6040518082815260200191505060405180910390f35b34801561086757600080fd5b50610870611d48565b6040518082815260200191505060405180910390f35b34801561089257600080fd5b5061089b611d4e565b6040518082815260200191505060405180910390f35b3480156108bd57600080fd5b506108c6611d5b565b6040518082815260200191505060405180910390f35b3480156108e857600080fd5b5061094b600480360360408110156108ff57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611d68565b604051808215151515815260200191505060405180910390f35b34801561097157600080fd5b506109b26004803603606081101561098857600080fd5b81019080803590602001909291908035906020019092919080359060200190929190505050611f2c565b005b3480156109c057600080fd5b506109c9611fb3565b6040518082815260200191505060405180910390f35b610a49600480360360a08110156109f557600080fd5b810190808035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190505050611fc2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610a9757600080fd5b50610ada60048036036020811015610aae57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506128ef565b6040518082815260200191505060405180910390f35b348015610afc57600080fd5b50610b3f60048036036020811015610b1357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612938565b604051808215151515815260200191505060405180910390f35b348015610b6557600080fd5b50610ba860048036036020811015610b7c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612983565b6040518082815260200191505060405180910390f35b348015610bca57600080fd5b50610c2d60048036036040811015610be157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612a15565b005b60008073ffffffffffffffffffffffffffffffffffffffff16600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610d15576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806133b86021913960400191505060405180910390fd5b600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006001805490508210610e1e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f4f7574206f6620626f756e64732e00000000000000000000000000000000000081525060200191505060405180910390fd5b60018281548110610e2b57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600160036000828254019250508190555060006003549050610e8a34600554612ab990919063ffffffff16565b6005819055506000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d13f13916175306040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015610f0757600080fd5b505afa158015610f1b573d6000803e3d6000fd5b505050506040513d6020811015610f3157600080fd5b81019080805190602001909291905050509050806005541015610f9f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806134046022913960400191505060405180910390fd5b610fb481600554612b4190919063ffffffff16565b60058190555060006060610fc783612bca565b915091508161107257806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561103757808201518184015260208101905061101c565b50505050905090810190601f1680156110645780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50505060035481146110ec576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081525060200191505060405180910390fd5b50565b3373ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146111b2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f43616c6c6572206973206e6f74207468652072616e646f6d20626561636f6e0081525060200191505060405180910390fd5b8060068190555050565b6000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ef1f966183306040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b15801561129157600080fd5b505afa1580156112a5573d6000803e3d6000fd5b505050506040513d60208110156112bb57600080fd5b81019080805190602001909291905050509050919050565b600080600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d13f13916175306040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561134b57600080fd5b505afa15801561135f573d6000803e3d6000fd5b505050506040513d602081101561137557600080fd5b810190808051906020019092919050505090506005548111156113ac576113a760055482612b4190919063ffffffff16565b6113af565b60005b91505090565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d13f13916175306040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561142c57600080fd5b505afa158015611440573d6000803e3d6000fd5b505050506040513d602081101561145657600080fd5b8101908080519060200190929190505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff16600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561150a576000905061162a565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663b4766856856040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156115eb57600080fd5b505afa1580156115ff573d6000803e3d6000fd5b505050506040513d602081101561161557600080fd5b81019080805190602001909291905050509150505b92915050565b6000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166310a63ec083306040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b15801561170557600080fd5b505afa158015611719573d6000803e3d6000fd5b505050506040513d602081101561172f57600080fd5b81019080805190602001909291905050509050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561180d57600080fd5b505afa158015611821573d6000803e3d6000fd5b505050506040513d602081101561183757600080fd5b81019080805190602001909291905050509050919050565b60065481565b6001818154811061186257fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600061189c82610c2f565b905060003390508173ffffffffffffffffffffffffffffffffffffffff1663f7186ce0826040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561192057600080fd5b505afa158015611934573d6000803e3d6000fd5b505050506040513d602081101561194a57600080fd5b81019080805190602001909291905050506119f7578173ffffffffffffffffffffffffffffffffffffffff16631ae0e73d826040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b1580156119de57600080fd5b505af11580156119f2573d6000803e3d6000fd5b505050505b505050565b61753081565b6000611a0e8383612d70565b73ffffffffffffffffffffffffffffffffffffffff1663e686440f846040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015611a8a57600080fd5b505afa158015611a9e573d6000803e3d6000fd5b505050506040513d6020811015611ab457600080fd5b8101908080519060200190929190505050905092915050565b60008073ffffffffffffffffffffffffffffffffffffffff16600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611bcf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f536f72746974696f6e20706f6f6c20616c72656164792065786973747300000081525060200191505060405180910390fd5b6000611bda83612e39565b905080600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff167f693c68cd964926544cbaee02b00d9352aa98c6de2484515e8bd74130c005e6af82604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a2600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b670de0b6b3a764000081565b60055481565b6801158e460913d0000081565b6000600180549050905090565b60008073ffffffffffffffffffffffffffffffffffffffff16600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611e065760009050611f26565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff16636b1906f8856040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015611ee757600080fd5b505afa158015611efb573d6000803e3d6000fd5b505050506040513d6020811015611f1157600080fd5b81019080805190602001909291905050509150505b92915050565b6000611f388484613061565b9050611f4333610c2f565b73ffffffffffffffffffffffffffffffffffffffff166334ce30f0826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b158015611f9557600080fd5b505af1158015611fa9573d6000803e3d6000fd5b5050505050505050565b6000611fbd6113b5565b905090565b600060016003600082825401925050819055506000600354905060008711612052576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f4d696e696d756d207369676e696e672067726f75702073697a6520697320310081525060200191505060405180910390fd5b60108711156120c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4d6178696d756d207369676e696e672067726f75702073697a6520697320313681525060200191505060405180910390fd5b60008611612122576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001806133916027913960400191505060405180910390fd5b8686111561217b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260358152602001806133336035913960400191505060405180910390fd5b6000339050600061218b82610c2f565b90506000612199878b613061565b9050600081116121f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806133686029913960400191505060405180910390fd5b6121fc611fb3565b341015612254576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180613308602b913960400191505060405180910390fd5b6000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ec5ffac26040518163ffffffff1660e01b815260040160206040518083038186803b1580156122be57600080fd5b505afa1580156122d2573d6000803e3d6000fd5b505050506040513d60208110156122e857600080fd5b8101908080519060200190929190505050905060608373ffffffffffffffffffffffffffffffffffffffff1663a2cca6a28d60065460001b85876040518563ffffffff1660e01b815260040180858152602001848152602001838152602001828152602001945050505050600060405180830381600087803b15801561236d57600080fd5b505af1158015612381573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060208110156123ab57600080fd5b81019080805160405193929190846401000000008211156123cb57600080fd5b838201915060208201858111156123e157600080fd5b82518660208202830111640100000000821117156123fe57600080fd5b8083526020830192505050908051906020019060200280838360005b8381101561243557808201518184015260208101905061241a565b50505050905001604052505050905061244c6130a3565b612454613133565b96508673ffffffffffffffffffffffffffffffffffffffff166379a804918b838e868d600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16306040518963ffffffff1660e01b8152600401808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018881526020018781526020018681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825289818151815260200191508051906020019060200280838360005b838110156125ea5780820151818401526020810190506125cf565b505050509050019950505050505050505050600060405180830381600087803b15801561261657600080fd5b505af115801561262a573d6000803e3d6000fd5b5050505060008090505b8c8110156127a357600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d20a62fc83838151811061268657fe5b60200260200101518a8b73ffffffffffffffffffffffffffffffffffffffff16888a6040518663ffffffff1660e01b8152600401808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200195505050505050600060405180830381600087803b15801561277e57600080fd5b505af1158015612792573d6000803e3d6000fd5b505050508080600101915050612634565b508473ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff167f7c030f3f8c902fa5a59193f1e3c08ae7245fc0e3b7ab290b6a9548a57a46ac60848f6040518080602001838152602001828103825284818151815260200191508051906020019060200280838360005b8381101561285557808201518184015260208101905061283a565b50505050905001935050505060405180910390a4505050505060035481146128e5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081525060200191505060405180910390fd5b5095945050505050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600080600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054119050919050565b600061298e82610c2f565b73ffffffffffffffffffffffffffffffffffffffff166396c82e576040518163ffffffff1660e01b815260040160206040518083038186803b1580156129d357600080fd5b505afa1580156129e7573d6000803e3d6000fd5b505050506040513d60208110156129fd57600080fd5b81019080805190602001909291905050509050919050565b612a1f8282612d70565b73ffffffffffffffffffffffffffffffffffffffff16631c5b0762836040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b158015612a9d57600080fd5b505af1158015612ab1573d6000803e3d6000fd5b505050505050565b600080828401905083811015612b37576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600082821115612bb9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b60006060600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168330617530604051602401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001925050506040516020818303038152906040527fe1f95890000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b60208310612cff5780518252602082019150602081019050602083039250612cdc565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114612d61576040519150601f19603f3d011682016040523d82523d6000602084013e612d66565b606091505b5091509150915091565b6000612d7c8383611d68565b612dd1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b8152602001806133d9602b913960400191505060405180910390fd5b600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905092915050565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166356385578600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ec5ffac26040518163ffffffff1660e01b815260040160206040518083038186803b158015612f2757600080fd5b505afa158015612f3b573d6000803e3d6000fd5b505050506040513d6020811015612f5157600080fd5b81019080805190602001909291905050506801158e460913d00000670de0b6b3a76400006040518663ffffffff1660e01b8152600401808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200182815260200195505050505050602060405180830381600087803b15801561301f57600080fd5b505af1158015613033573d6000803e3d6000fd5b505050506040513d602081101561304957600080fd5b81019080805190602001909291905050509050919050565b600061309b8261308d600161307f8688612ab990919063ffffffff16565b612b4190919063ffffffff16565b61320e90919063ffffffff16565b905092915050565b60065430604051602001808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b8152601401925050506040516020818303038152906040528051906020012060001c600681905550600061311734612bca565b5090508061313057346005600082825401925050819055505b50565b600061315f6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661329d565b905060018190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505042600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555090565b6000808211613285576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525060200191505060405180910390fd5b600082848161329057fe5b0490508091505092915050565b6000808260601b90506040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528160148201527f5af43d82803e903d91602b57fd5bf3000000000000000000000000000000000060288201526037816000f09250505091905056fe496e73756666696369656e74207061796d656e7420666f72206f70656e696e672061206e6577206b656570486f6e657374207468726573686f6c64206d757374206265206c657373206f7220657175616c207468652067726f75702073697a65426f6e6420706572206d656d626572206d7573742062652067726561746572207468616e207a65726f486f6e657374207468726573686f6c64206d7573742062652067726561746572207468616e20304e6f20706f6f6c20666f756e6420666f7220746865206170706c69636174696f6e4f70657261746f72206e6f74207265676973746572656420666f7220746865206170706c69636174696f6e4e6f7420656e6f7567682066756e647320746f207472696767657220726573656564a265627a7a723158201a99b94a727c4249dcb3d5770cd0261d9994e8ba9279b365365e9dce43a7fcc664736f6c63430005110032",
  "sourceMap": "3021:9475:3:-;;;4452:601;8:9:-1;5:2;;;30:1;27;20:12;5:2;4452:601:3;;;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;4452:601:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4776:13;4718:29;2332:18:15;2312:17;;:38;;;;;;;;;;;;;;;;;;2255:102;884:1:103;868:13;:17;;;;3102:13:13;3073:12;;:43;;;;;;;;;;;;;;;;;;3281:77;3260:18;:98;;;;3021:344;4868:21:3;4805:20;;:94;;;;;;;;;;;;;;;;;;4928:17;4909:16;;:36;;;;;;;;;;;;;;;;;;4983:13;4955:12;;:42;;;;;;;;;;;;;;;;;;5033:12;5007:11;;:39;;;;;;;;;;;;;;;;;;4452:601;;;;;;3021:9475;;;;;;",
  "deployedSourceMap": "3021:9475:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3483:9:13;3469:10;;:23;;;;;;;;;;;3021:9475:3;3107:293:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3107:293:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3107:293:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4414:31:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4414:31:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2758:164:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2758:164:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2758:164:15;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4850:479:13;;;:::i;:::-;;3697:122;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3697:122:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3697:122:13;;;;;;;;;;;;;;;;;:::i;:::-;;10769:190:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10769:190:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10769:190:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4286:217:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4286:217:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3919:127;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3919:127:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4326:412:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4326:412:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4326:412:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;10285:149:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10285:149:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10285:149:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2040:32:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2040:32:15;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;11176:125:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11176:125:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11176:125:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2981:33:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2981:33:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2117:22:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2117:22:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2117:22:15;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1462:350:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1462:350:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1462:350:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;2457:43:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2457:43:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2151:261:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2151:261:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2151:261:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;711:488;;8:9:-1;5:2;;;30:1;27;20:12;5:2;711:488:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;711:488:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4355:53:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4355:53:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2949:25:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2949:25:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4018:43:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4018:43:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2537:92:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2537:92:15;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3721:416:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3721:416:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3721:416:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5635:343:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5635:343:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5635:343:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;9613:106;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9613:106:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6587:2366;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;6587:2366:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3103:157:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3103:157:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3103:157:15;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;9330:183:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9330:183:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9330:183:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5122:215:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5122:215:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5122:215:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2638:206;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2638:206:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2638:206:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3107:293;3200:7;3285:1;3244:43;;:15;:29;3260:12;3244:29;;;;;;;;;;;;;;;;;;;;;;;;;:43;;;;3223:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3364:15;:29;3380:12;3364:29;;;;;;;;;;;;;;;;;;;;;;;;;3357:36;;3107:293;;;:::o;4414:31:3:-;;;;;;;;;;;;;:::o;2758:164:15:-;2820:7;2855:5;:12;;;;2847:5;:20;2839:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2903:5;2909;2903:12;;;;;;;;;;;;;;;;;;;;;;;;;2896:19;;2758:164;;;:::o;4850:479:13:-;1318:1:103;1301:13;;:18;;;;;;;;;;;1329:20;1352:13;;1329:36;;4941:25:13;4956:9;4941:10;;:14;;:25;;;;:::i;:::-;4928:10;:38;;;;4977:17;4997:12;;;;;;;;;;;:29;;;2495:5;4997:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4997:42:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4997:42:13;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4997:42:13;;;;;;;;;;;;;;;;4977:62;;5071:9;5057:10;;:23;;5049:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5142:25;5157:9;5142:10;;:14;;:25;;;;:::i;:::-;5129:10;:38;;;;5179:12;5193:23;5220:28;5238:9;5220:17;:28::i;:::-;5178:70;;;;5263:7;5258:65;;5300:10;5286:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5286:26:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5258:65;1375:1:103;;;1410:13;;1394:12;:29;1386:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4850:479:13;:::o;3697:122::-;7204:10;7179:35;;7187:12;;;;;;;;;;;7179:35;;;7158:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3801:11;3780:18;:32;;;;3697:122;:::o;10769:190:3:-;10863:4;10890:12;;;;;;;;;;;:36;;;10927:9;10946:4;10890:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10890:62:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10890:62:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10890:62:3;;;;;;;;;;;;;;;;10883:69;;10769:190;;;:::o;4286:217:13:-;4343:7;4362:17;4382:12;;;;;;;;;;;:29;;;2495:5;4382:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4382:42:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4382:42:13;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4382:42:13;;;;;;;;;;;;;;;;4362:62;;4454:10;;4441:9;:23;;:55;;4471:25;4485:10;;4471:9;:13;;:25;;;;:::i;:::-;4441:55;;;4467:1;4441:55;4434:62;;;4286:217;:::o;3919:127::-;3971:7;3997:12;;;;;;;;;;;:29;;;2495:5;3997:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3997:42:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3997:42:13;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3997:42:13;;;;;;;;;;;;;;;;3990:49;;3919:127;:::o;4326:412:6:-;4440:4;4505:1;4464:43;;:15;:29;4480:12;4464:29;;;;;;;;;;;;;;;;;;;;;;;;;:43;;;4460:86;;;4530:5;4523:12;;;;4460:86;4556:36;4630:15;:29;4646:12;4630:29;;;;;;;;;;;;;;;;;;;;;;;;;4556:113;;4687:14;:33;;;4721:9;4687:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4687:44:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4687:44:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4687:44:6;;;;;;;;;;;;;;;;4680:51;;;4326:412;;;;;:::o;10285:149:3:-;10350:4;10373:12;;;;;;;;;;;:28;;;10402:9;10421:4;10373:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10373:54:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10373:54:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10373:54:3;;;;;;;;;;;;;;;;10366:61;;10285:149;;;:::o;2040:32:15:-;;;;;;;;;;;;;:::o;11176:125:3:-;11235:7;11261:12;;;;;;;;;;;:22;;;11284:9;11261:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11261:33:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11261:33:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11261:33:3;;;;;;;;;;;;;;;;11254:40;;11176:125;;;:::o;2981:33:13:-;;;;:::o;2117:22:15:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1462:350:6:-;1536:36;1610:30;1627:12;1610:16;:30::i;:::-;1536:114;;1661:16;1680:10;1661:29;;1705:14;:31;;;1737:8;1705:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1705:41:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1705:41:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1705:41:6;;;;;;;;;;;;;;;;1700:106;;1762:14;:23;;;1786:8;1762:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1762:33:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1762:33:6;;;;1700:106;1462:350;;;:::o;2457:43:13:-;2495:5;2457:43;:::o;2151:261:6:-;2267:4;2306:52;2334:9;2345:12;2306:27;:52::i;:::-;:88;;;2395:9;2306:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2306:99:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2306:99:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2306:99:6;;;;;;;;;;;;;;;;2287:118;;2151:261;;;;:::o;711:488::-;796:7;881:1;840:43;;:15;:29;856:12;840:29;;;;;;;;;;;;;;;;;;;;;;;;;:43;;;819:119;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;949:28;980:30;997:12;980:16;:30::i;:::-;949:61;;1053:20;1021:15;:29;1037:12;1021:29;;;;;;;;;;;;;;;;:52;;;;;;;;;;;;;;;;;;1110:12;1089:56;;;1124:20;1089:56;;;;;;;;;;;;;;;;;;;;;;1163:15;:29;1179:12;1163:29;;;;;;;;;;;;;;;;;;;;;;;;;1156:36;;;711:488;;;:::o;4355:53:3:-;4404:4;4355:53;:::o;2949:25:13:-;;;;:::o;4018:43:3:-;4056:5;4018:43;:::o;2537:92:15:-;2584:7;2610:5;:12;;;;2603:19;;2537:92;:::o;3721:416:6:-;3837:4;3902:1;3861:43;;:15;:29;3877:12;3861:29;;;;;;;;;;;;;;;;;;;;;;;;;:43;;;3857:86;;;3927:5;3920:12;;;;3857:86;3953:36;4027:15;:29;4043:12;4027:29;;;;;;;;;;;;;;;;;;;;;;;;;3953:113;;4084:14;:35;;;4120:9;4084:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4084:46:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4084:46:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4084:46:6;;;;;;;;;;;;;;;;4077:53;;;3721:416;;;;;:::o;5635:343:3:-;5794:18;5815:48;5829:21;5852:10;5815:13;:48::i;:::-;5794:69;;5893:28;5910:10;5893:16;:28::i;:::-;5873:86;;;5960:10;5873:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5873:98:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5873:98:3;;;;5635:343;;;;:::o;9613:106::-;9665:7;9691:21;:19;:21::i;:::-;9684:28;;9613:106;:::o;6587:2366::-;6795:19;1318:1:103;1301:13;;:18;;;;;;;;;;;1329:20;1352:13;;1329:36;;6847:1:3;6834:10;:14;6826:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6916:2;6902:10;:16;;6894:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7005:1;6986:16;:20;6965:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7122:10;7102:16;:30;;7081:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7222:19;7244:10;7222:32;;7264:12;7279:29;7296:11;7279:16;:29::i;:::-;7264:44;;7319:18;7340:32;7354:5;7361:10;7340:13;:32::i;:::-;7319:53;;7403:1;7390:10;:14;7382:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7495:21;:19;:21::i;:::-;7482:9;:34;;7461:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7596:20;7619:12;;;;;;;;;;;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7619:27:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7619:27:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7619:27:3;;;;;;;;;;;;;;;;7596:50;;7657:24;7716:4;7696:40;;;7754:10;7790:18;;7782:27;;7827:12;7857:10;7696:185;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7696:185:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7696:185:3;;;;;;39:16:-1;36:1;17:17;2:54;7696:185:3;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:2;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7696:185:3;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;385:12;380:3;373:25;421:4;416:3;412:14;405:21;;0:433;;7696:185:3;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;7696:185:3;;;;;;;;;;;7657:224;;7892:23;:21;:23::i;:::-;8223:12;:10;:12::i;:::-;8209:26;;8262:11;8246:39;;;8299:6;8319:7;8340:16;8370:12;8396:18;8436:12;;;;;;;;;;;8471:11;;;;;;;;;;;8505:4;8246:274;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;8246:274:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8246:274:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8246:274:3;;;;8536:9;8548:1;8536:13;;8531:247;8555:10;8551:1;:14;8531:247;;;8586:11;;;;;;;;;;;:22;;;8626:7;8634:1;8626:10;;;;;;;;;;;;;;8654:11;8691;8683:20;;8721:10;8749:4;8586:181;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8586:181:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8586:181:3;;;;8567:3;;;;;;;8531:247;;;;8895:11;8793:153;;8875:6;8793:153;;8829:11;8793:153;;;8854:7;8920:16;8793:153;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;8793:153:3;;;;;;;;;;;;;;;;;;1375:1:103;;;;;1410:13;;1394:12;:29;1386:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6587:2366:3;;;;;;;;:::o;3103:157:15:-;3197:7;3227:19;:26;3247:5;3227:26;;;;;;;;;;;;;;;;3220:33;;3103:157;;;:::o;9330:183:3:-;9426:4;9505:1;9453:19;:49;9473:28;9453:49;;;;;;;;;;;;;;;;:53;9446:60;;9330:183;;;:::o;5122:215:6:-;5221:7;5285:30;5302:12;5285:16;:30::i;:::-;5263:65;;;:67;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5263:67:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5263:67:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5263:67:6;;;;;;;;;;;;;;;;5244:86;;5122:215;;;:::o;2638:206::-;2740:52;2768:9;2779:12;2740:27;:52::i;:::-;:86;;;2827:9;2740:97;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2740:97:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2740:97:6;;;;2638:206;;:::o;834:176:94:-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;1274:179::-;1332:7;1364:1;1359;:6;;1351:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1410:9;1426:1;1422;:5;1410:17;;1445:1;1438:8;;;1274:179;;;;:::o;6593:378:13:-;6671:4;6677:12;6732;;;;;;;;;;;6724:26;;6757:7;6894:4;2495:5;6783:167;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;6783:167:13;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;6783:167:13;6724:240;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;6724:240:13;;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;6705:259:13;;;;6593:378;;;:::o;6019:368:6:-;6142:21;6196:45;6217:9;6228:12;6196:20;:45::i;:::-;6175:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6350:15;:29;6366:12;6350:29;;;;;;;;;;;;;;;;;;;;;;;;;6321:59;;6019:368;;;;:::o;11307:376:3:-;11373:7;11411:20;;;;;;;;;;;:40;;;11486:12;;;;;;;;;;;11535:11;;;;;;;;;;;11566:12;;;;;;;;;;;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11566:27:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11566:27:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11566:27:3;;;;;;;;;;;;;;;;4056:5;4404:4;11411:265;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11411:265:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11411:265:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11411:265:3;;;;;;;;;;;;;;;;11392:284;;11307:376;;;:::o;11959:535::-;12068:7;12437:50;12476:10;12438:32;12468:1;12438:25;12452:10;12438:9;:13;;:25;;;;:::i;:::-;:29;;:32;;;;:::i;:::-;12437:38;;:50;;;;:::i;:::-;12430:57;;11959:535;;;;:::o;5851:633:13:-;6231:18;;6259:4;6214:51;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;6214:51:13;;;6204:62;;;;;;6183:93;;6162:18;:114;;;;6360:12;6378:28;6396:9;6378:17;:28::i;:::-;6359:47;;;6421:7;6416:62;;6458:9;6444:10;;:23;;;;;;;;;;;6416:62;5851:633;:::o;3418:280:15:-;3458:19;3503:30;3515:17;;;;;;;;;;;3503:11;:30::i;:::-;3489:44;;3543:5;3554:11;3543:23;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;3543:23:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3676:15;3641:19;:32;3661:11;3641:32;;;;;;;;;;;;;;;:50;;;;3418:280;:::o;2606:326:94:-;2664:7;2761:1;2757;:5;2749:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2803:9;2819:1;2815;:5;;;;;;2803:17;;2924:1;2917:8;;;2606:326;;;;:::o;1608:577:7:-;1663:14;1689:19;1719:6;1711:15;;1689:37;;1778:4;1772:11;1843:66;1820:5;1796:127;1961:11;1954:4;1947:5;1943:16;1936:37;2044:66;2021:4;2014:5;2010:16;1986:138;2164:4;2157:5;2154:1;2147:22;2137:32;;1745:434;;;;;:::o",
  "source": "/**\n▓▓▌ ▓▓ ▐▓▓ ▓▓▓▓▓▓▓▓▓▓▌▐▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▄\n▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▌▐▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓\n  ▓▓▓▓▓▓    ▓▓▓▓▓▓▓▀    ▐▓▓▓▓▓▓    ▐▓▓▓▓▓   ▓▓▓▓▓▓     ▓▓▓▓▓   ▐▓▓▓▓▓▌   ▐▓▓▓▓▓▓\n  ▓▓▓▓▓▓▄▄▓▓▓▓▓▓▓▀      ▐▓▓▓▓▓▓▄▄▄▄         ▓▓▓▓▓▓▄▄▄▄         ▐▓▓▓▓▓▌   ▐▓▓▓▓▓▓\n  ▓▓▓▓▓▓▓▓▓▓▓▓▓▀        ▐▓▓▓▓▓▓▓▓▓▓         ▓▓▓▓▓▓▓▓▓▓▌        ▐▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓\n  ▓▓▓▓▓▓▀▀▓▓▓▓▓▓▄       ▐▓▓▓▓▓▓▀▀▀▀         ▓▓▓▓▓▓▀▀▀▀         ▐▓▓▓▓▓▓▓▓▓▓▓▓▓▓▀\n  ▓▓▓▓▓▓   ▀▓▓▓▓▓▓▄     ▐▓▓▓▓▓▓     ▓▓▓▓▓   ▓▓▓▓▓▓     ▓▓▓▓▓   ▐▓▓▓▓▓▌\n▓▓▓▓▓▓▓▓▓▓ █▓▓▓▓▓▓▓▓▓ ▐▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓  ▓▓▓▓▓▓▓▓▓▓\n▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓ ▐▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓  ▓▓▓▓▓▓▓▓▓▓\n\n                           Trust math, not hardware.\n*/\n\npragma solidity 0.5.17;\n\nimport \"./BondedECDSAKeep.sol\";\nimport \"./KeepBonding.sol\";\nimport \"./api/IBondedECDSAKeepFactory.sol\";\nimport \"./KeepCreator.sol\";\nimport \"./GroupSelectionSeed.sol\";\nimport \"./CandidatesPools.sol\";\n\nimport \"@keep-network/sortition-pools/contracts/api/IStaking.sol\";\nimport \"@keep-network/sortition-pools/contracts/api/IBonding.sol\";\nimport \"@keep-network/sortition-pools/contracts/BondedSortitionPool.sol\";\nimport \"@keep-network/sortition-pools/contracts/BondedSortitionPoolFactory.sol\";\n\nimport {\n    AuthorityDelegator,\n    TokenStaking\n} from \"@keep-network/keep-core/contracts/TokenStaking.sol\";\nimport \"@keep-network/keep-core/contracts/utils/AddressArrayUtils.sol\";\n\nimport \"openzeppelin-solidity/contracts/math/SafeMath.sol\";\n\n/// @title Bonded ECDSA Keep Factory\n/// @notice Contract creating bonded ECDSA keeps.\n/// @dev We avoid redeployment of bonded ECDSA keep contract by using the clone factory.\n/// Proxy delegates calls to sortition pool and therefore does not affect contract's\n/// state. This means that we only need to deploy the bonded ECDSA keep contract\n/// once. The factory provides clean state for every new bonded ECDSA keep clone.\ncontract BondedECDSAKeepFactory is\n    IBondedECDSAKeepFactory,\n    KeepCreator,\n    AuthorityDelegator,\n    GroupSelectionSeed,\n    CandidatesPools\n{\n    using AddressArrayUtils for address[];\n    using SafeMath for uint256;\n\n    // Notification that a new keep has been created.\n    event BondedECDSAKeepCreated(\n        address indexed keepAddress,\n        address[] members,\n        address indexed owner,\n        address indexed application,\n        uint256 honestThreshold\n    );\n\n    BondedSortitionPoolFactory sortitionPoolFactory;\n    TokenStaking tokenStaking;\n    KeepBonding keepBonding;\n\n    // Sortition pool is created with a minimum bond of 20 ETH to avoid\n    // small operators joining and griefing future selections before the\n    // minimum bond is set to the right value by the application.\n    //\n    // Anyone can create a sortition pool for an application with the default\n    // minimum bond value but the application can change this value later, at\n    // any point.\n    uint256 public constant minimumBond = 20e18; // 20 ETH\n\n    // Signer candidates in bonded sortition pool are weighted by their eligible\n    // stake divided by a constant divisor. The divisor is set to 1 KEEP so that\n    // all KEEPs in eligible stake matter when calculating operator's eligible\n    // weight for signer selection.\n    uint256 public constant poolStakeWeightDivisor = 1e18;\n    address public bondTokenAddress;\n\n    constructor(\n        address _masterBondedECDSAKeepAddress,\n        address _sortitionPoolFactory,\n        address _tokenStaking,\n        address _keepBonding,\n        address _randomBeacon,\n        address _bondTokenAddress\n    )\n        public\n        KeepCreator(_masterBondedECDSAKeepAddress)\n        GroupSelectionSeed(_randomBeacon)\n    {\n        sortitionPoolFactory = BondedSortitionPoolFactory(\n            _sortitionPoolFactory\n        );\n        bondTokenAddress = _bondTokenAddress;\n        tokenStaking = TokenStaking(_tokenStaking);\n        keepBonding = KeepBonding(_keepBonding);\n    }\n\n    /// @notice Sets the minimum bondable value required from the operator to\n    /// join the sortition pool of the given application. It is up to the\n    /// application to specify a reasonable minimum bond for operators trying to\n    /// join the pool to prevent griefing by operators joining without enough\n    /// bondable value.\n    /// @param _minimumBondableValue The minimum bond value the application\n    /// requires from a single keep.\n    /// @param _groupSize Number of signers in the keep.\n    /// @param _honestThreshold Minimum number of honest keep signers.\n    function setMinimumBondableValue(\n        uint256 _minimumBondableValue,\n        uint256 _groupSize,\n        uint256 _honestThreshold\n    ) external {\n        uint256 memberBond = bondPerMember(_minimumBondableValue, _groupSize);\n        BondedSortitionPool(getSortitionPool(msg.sender))\n            .setMinimumBondableValue(memberBond);\n    }\n\n    /// @notice Opens a new ECDSA keep.\n    /// @dev Selects a list of signers for the keep based on provided parameters.\n    /// A caller of this function is expected to be an application for which\n    /// member candidates were registered in a pool.\n    /// @param _groupSize Number of signers in the keep.\n    /// @param _honestThreshold Minimum number of honest keep signers.\n    /// @param _owner Address of the keep owner.\n    /// @param _bond Value of ETH bond required from the keep in wei.\n    /// @param _stakeLockDuration Stake lock duration in seconds.\n    /// @return Created keep address.\n    function openKeep(\n        uint256 _groupSize,\n        uint256 _honestThreshold,\n        address _owner,\n        uint256 _bond,\n        uint256 _stakeLockDuration\n    ) external payable nonReentrant returns (address keepAddress) {\n        require(_groupSize > 0, \"Minimum signing group size is 1\");\n        require(_groupSize <= 16, \"Maximum signing group size is 16\");\n        require(\n            _honestThreshold > 0,\n            \"Honest threshold must be greater than 0\"\n        );\n        require(\n            _honestThreshold <= _groupSize,\n            \"Honest threshold must be less or equal the group size\"\n        );\n\n        address application = msg.sender;\n        address pool = getSortitionPool(application);\n\n        uint256 memberBond = bondPerMember(_bond, _groupSize);\n        require(memberBond > 0, \"Bond per member must be greater than zero\");\n\n        require(\n            msg.value >= openKeepFeeEstimate(),\n            \"Insufficient payment for opening a new keep\"\n        );\n\n        uint256 minimumStake = tokenStaking.minimumStake();\n\n        address[] memory members =\n            BondedSortitionPool(pool).selectSetGroup(\n                _groupSize,\n                bytes32(groupSelectionSeed),\n                minimumStake,\n                memberBond\n            );\n\n        newGroupSelectionSeed();\n\n        // createKeep sets keepOpenedTimestamp value for newly created keep which\n        // is required to be set before calling `keep.initialize` function as it\n        // is used to determine token staking delegation authority recognition\n        // in `__isRecognized` function.\n        keepAddress = createKeep();\n\n        BondedECDSAKeep(keepAddress).initialize(\n            _owner,\n            members,\n            _honestThreshold,\n            minimumStake,\n            _stakeLockDuration,\n            address(tokenStaking),\n            address(keepBonding),\n            address(this)\n        );\n\n        for (uint256 i = 0; i < _groupSize; i++) {\n            keepBonding.createBond(\n                members[i],\n                keepAddress,\n                uint256(keepAddress),\n                memberBond,\n                pool\n            );\n        }\n\n        emit BondedECDSAKeepCreated(\n            keepAddress,\n            members,\n            _owner,\n            application,\n            _honestThreshold\n        );\n    }\n\n    /// @notice Verifies if delegates authority recipient is valid address recognized\n    /// by the factory for token staking authority delegation.\n    /// @param _delegatedAuthorityRecipient Address of the delegated authority\n    /// recipient.\n    /// @return True if provided address is recognized delegated token staking\n    /// authority for this factory contract.\n    function __isRecognized(address _delegatedAuthorityRecipient)\n        external\n        returns (bool)\n    {\n        return keepOpenedTimestamp[_delegatedAuthorityRecipient] > 0;\n    }\n\n    /// @notice Gets a fee estimate for opening a new keep.\n    /// @return Uint256 estimate.\n    function openKeepFeeEstimate() public view returns (uint256) {\n        return newEntryFeeEstimate();\n    }\n\n    /// @notice Checks if the specified account has enough active stake to become\n    /// network operator and that this contract has been authorized for potential\n    /// slashing.\n    ///\n    /// Having the required minimum of active stake makes the operator eligible\n    /// to join the network. If the active stake is not currently undelegating,\n    /// operator is also eligible for work selection.\n    ///\n    /// @param _operator operator's address\n    /// @return True if has enough active stake to participate in the network,\n    /// false otherwise.\n    function hasMinimumStake(address _operator) public view returns (bool) {\n        return tokenStaking.hasMinimumStake(_operator, address(this));\n    }\n\n    /// @notice Checks if the factory has the authorization to operate on stake\n    /// represented by the provided operator.\n    ///\n    /// @param _operator operator's address\n    /// @return True if the factory has access to the staked token balance of\n    /// the provided operator and can slash that stake. False otherwise.\n    function isOperatorAuthorized(address _operator)\n        public\n        view\n        returns (bool)\n    {\n        return tokenStaking.isAuthorizedForOperator(_operator, address(this));\n    }\n\n    /// @notice Gets the stake balance of the specified operator.\n    /// @param _operator The operator to query the balance of.\n    /// @return An uint256 representing the amount staked by the passed operator.\n    function balanceOf(address _operator) public view returns (uint256) {\n        return tokenStaking.balanceOf(_operator);\n    }\n\n    function newSortitionPool(address _application) internal returns (address) {\n        return\n            sortitionPoolFactory.createSortitionPool(\n                IStaking(address(tokenStaking)),\n                IBonding(address(keepBonding)),\n                tokenStaking.minimumStake(),\n                minimumBond,\n                poolStakeWeightDivisor\n            );\n    }\n\n    /// @notice Calculates bond requirement per member performing the necessary\n    /// rounding.\n    /// @param _keepBond The bond required from a keep.\n    /// @param _groupSize Number of signers in the keep.\n    /// @return Bond value required from each keep member.\n    function bondPerMember(uint256 _keepBond, uint256 _groupSize)\n        internal\n        pure\n        returns (uint256)\n    {\n        // In Solidity, division rounds towards zero (down) and dividing\n        // '_bond' by '_groupSize' can leave a remainder. Even though, a remainder\n        // is very small, we want to avoid this from happening and memberBond is\n        // rounded up by: `(bond + groupSize - 1 ) / groupSize`\n        // Ex. (100 + 3 - 1) / 3 = 34\n        return (_keepBond.add(_groupSize).sub(1)).div(_groupSize);\n    }\n}\n",
  "sourcePath": "/home/kowal/Projects/sovryn/keep-ecdsa/solidity/contracts/BondedECDSAKeepFactory.sol",
  "ast": {
    "absolutePath": "/home/kowal/Projects/sovryn/keep-ecdsa/solidity/contracts/BondedECDSAKeepFactory.sol",
    "exportedSymbols": {
      "BondedECDSAKeepFactory": [
        2471
      ]
    },
    "id": 2472,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2059,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "1837:23:3"
      },
      {
        "absolutePath": "/home/kowal/Projects/sovryn/keep-ecdsa/solidity/contracts/BondedECDSAKeep.sol",
        "file": "./BondedECDSAKeep.sol",
        "id": 2060,
        "nodeType": "ImportDirective",
        "scope": 2472,
        "sourceUnit": 2058,
        "src": "1862:31:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/kowal/Projects/sovryn/keep-ecdsa/solidity/contracts/KeepBonding.sol",
        "file": "./KeepBonding.sol",
        "id": 2061,
        "nodeType": "ImportDirective",
        "scope": 2472,
        "sourceUnit": 4934,
        "src": "1894:27:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/kowal/Projects/sovryn/keep-ecdsa/solidity/contracts/api/IBondedECDSAKeepFactory.sol",
        "file": "./api/IBondedECDSAKeepFactory.sol",
        "id": 2062,
        "nodeType": "ImportDirective",
        "scope": 2472,
        "sourceUnit": 5750,
        "src": "1922:43:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/kowal/Projects/sovryn/keep-ecdsa/solidity/contracts/KeepCreator.sol",
        "file": "./KeepCreator.sol",
        "id": 2063,
        "nodeType": "ImportDirective",
        "scope": 2472,
        "sourceUnit": 5025,
        "src": "1966:27:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/kowal/Projects/sovryn/keep-ecdsa/solidity/contracts/GroupSelectionSeed.sol",
        "file": "./GroupSelectionSeed.sol",
        "id": 2064,
        "nodeType": "ImportDirective",
        "scope": 2472,
        "sourceUnit": 4788,
        "src": "1994:34:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/kowal/Projects/sovryn/keep-ecdsa/solidity/contracts/CandidatesPools.sol",
        "file": "./CandidatesPools.sol",
        "id": 2065,
        "nodeType": "ImportDirective",
        "scope": 2472,
        "sourceUnit": 3406,
        "src": "2029:31:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@keep-network/sortition-pools/contracts/api/IStaking.sol",
        "file": "@keep-network/sortition-pools/contracts/api/IStaking.sol",
        "id": 2066,
        "nodeType": "ImportDirective",
        "scope": 2472,
        "sourceUnit": 20976,
        "src": "2062:66:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@keep-network/sortition-pools/contracts/api/IBonding.sol",
        "file": "@keep-network/sortition-pools/contracts/api/IBonding.sol",
        "id": 2067,
        "nodeType": "ImportDirective",
        "scope": 2472,
        "sourceUnit": 20949,
        "src": "2129:66:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@keep-network/sortition-pools/contracts/BondedSortitionPool.sol",
        "file": "@keep-network/sortition-pools/contracts/BondedSortitionPool.sol",
        "id": 2068,
        "nodeType": "ImportDirective",
        "scope": 2472,
        "sourceUnit": 18097,
        "src": "2196:73:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@keep-network/sortition-pools/contracts/BondedSortitionPoolFactory.sol",
        "file": "@keep-network/sortition-pools/contracts/BondedSortitionPoolFactory.sol",
        "id": 2069,
        "nodeType": "ImportDirective",
        "scope": 2472,
        "sourceUnit": 18132,
        "src": "2270:80:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@keep-network/keep-core/contracts/TokenStaking.sol",
        "file": "@keep-network/keep-core/contracts/TokenStaking.sol",
        "id": 2072,
        "nodeType": "ImportDirective",
        "scope": 2472,
        "sourceUnit": 14181,
        "src": "2352:110:3",
        "symbolAliases": [
          {
            "foreign": 2070,
            "local": null
          },
          {
            "foreign": 2071,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "@keep-network/keep-core/contracts/utils/AddressArrayUtils.sol",
        "file": "@keep-network/keep-core/contracts/utils/AddressArrayUtils.sol",
        "id": 2073,
        "nodeType": "ImportDirective",
        "scope": 2472,
        "sourceUnit": 16653,
        "src": "2463:71:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 2074,
        "nodeType": "ImportDirective",
        "scope": 2472,
        "sourceUnit": 21470,
        "src": "2536:59:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2075,
              "name": "IBondedECDSAKeepFactory",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5749,
              "src": "3060:23:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IBondedECDSAKeepFactory_$5749",
                "typeString": "contract IBondedECDSAKeepFactory"
              }
            },
            "id": 2076,
            "nodeType": "InheritanceSpecifier",
            "src": "3060:23:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2077,
              "name": "KeepCreator",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5024,
              "src": "3089:11:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_KeepCreator_$5024",
                "typeString": "contract KeepCreator"
              }
            },
            "id": 2078,
            "nodeType": "InheritanceSpecifier",
            "src": "3089:11:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2079,
              "name": "AuthorityDelegator",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8039,
              "src": "3106:18:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AuthorityDelegator_$8039",
                "typeString": "contract AuthorityDelegator"
              }
            },
            "id": 2080,
            "nodeType": "InheritanceSpecifier",
            "src": "3106:18:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2081,
              "name": "GroupSelectionSeed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4787,
              "src": "3130:18:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_GroupSelectionSeed_$4787",
                "typeString": "contract GroupSelectionSeed"
              }
            },
            "id": 2082,
            "nodeType": "InheritanceSpecifier",
            "src": "3130:18:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2083,
              "name": "CandidatesPools",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3405,
              "src": "3154:15:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CandidatesPools_$3405",
                "typeString": "contract CandidatesPools"
              }
            },
            "id": 2084,
            "nodeType": "InheritanceSpecifier",
            "src": "3154:15:3"
          }
        ],
        "contractDependencies": [
          3405,
          3440,
          4787,
          5024,
          5749,
          8039,
          8373,
          22433
        ],
        "contractKind": "contract",
        "documentation": "@title Bonded ECDSA Keep Factory\n @notice Contract creating bonded ECDSA keeps.\n @dev We avoid redeployment of bonded ECDSA keep contract by using the clone factory.\n Proxy delegates calls to sortition pool and therefore does not affect contract's\n state. This means that we only need to deploy the bonded ECDSA keep contract\n once. The factory provides clean state for every new bonded ECDSA keep clone.",
        "fullyImplemented": true,
        "id": 2471,
        "linearizedBaseContracts": [
          2471,
          3405,
          4787,
          22433,
          8373,
          8039,
          5024,
          3440,
          5749
        ],
        "name": "BondedECDSAKeepFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2088,
            "libraryName": {
              "contractScope": null,
              "id": 2085,
              "name": "AddressArrayUtils",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 16652,
              "src": "3182:17:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AddressArrayUtils_$16652",
                "typeString": "library AddressArrayUtils"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "3176:38:3",
            "typeName": {
              "baseType": {
                "id": 2086,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "3204:7:3",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 2087,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "3204:9:3",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            }
          },
          {
            "id": 2091,
            "libraryName": {
              "contractScope": null,
              "id": 2089,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 21469,
              "src": "3225:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$21469",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "3219:27:3",
            "typeName": {
              "id": 2090,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3238:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 2104,
            "name": "BondedECDSAKeepCreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2093,
                  "indexed": true,
                  "name": "keepAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2104,
                  "src": "3344:27:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2092,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3344:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2096,
                  "indexed": false,
                  "name": "members",
                  "nodeType": "VariableDeclaration",
                  "scope": 2104,
                  "src": "3381:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2094,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3381:7:3",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2095,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3381:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2098,
                  "indexed": true,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 2104,
                  "src": "3408:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2097,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3408:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2100,
                  "indexed": true,
                  "name": "application",
                  "nodeType": "VariableDeclaration",
                  "scope": 2104,
                  "src": "3439:27:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2099,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3439:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2102,
                  "indexed": false,
                  "name": "honestThreshold",
                  "nodeType": "VariableDeclaration",
                  "scope": 2104,
                  "src": "3476:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2101,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3476:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3334:171:3"
            },
            "src": "3306:200:3"
          },
          {
            "constant": false,
            "id": 2106,
            "name": "sortitionPoolFactory",
            "nodeType": "VariableDeclaration",
            "scope": 2471,
            "src": "3512:47:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_BondedSortitionPoolFactory_$18131",
              "typeString": "contract BondedSortitionPoolFactory"
            },
            "typeName": {
              "contractScope": null,
              "id": 2105,
              "name": "BondedSortitionPoolFactory",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 18131,
              "src": "3512:26:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BondedSortitionPoolFactory_$18131",
                "typeString": "contract BondedSortitionPoolFactory"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 2108,
            "name": "tokenStaking",
            "nodeType": "VariableDeclaration",
            "scope": 2471,
            "src": "3565:25:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TokenStaking_$14180",
              "typeString": "contract TokenStaking"
            },
            "typeName": {
              "contractScope": null,
              "id": 2107,
              "name": "TokenStaking",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 14180,
              "src": "3565:12:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TokenStaking_$14180",
                "typeString": "contract TokenStaking"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 2110,
            "name": "keepBonding",
            "nodeType": "VariableDeclaration",
            "scope": 2471,
            "src": "3596:23:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_KeepBonding_$4933",
              "typeString": "contract KeepBonding"
            },
            "typeName": {
              "contractScope": null,
              "id": 2109,
              "name": "KeepBonding",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4933,
              "src": "3596:11:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_KeepBonding_$4933",
                "typeString": "contract KeepBonding"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 2113,
            "name": "minimumBond",
            "nodeType": "VariableDeclaration",
            "scope": 2471,
            "src": "4018:43:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2111,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "4018:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3230653138",
              "id": 2112,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "4056:5:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_20000000000000000000_by_1",
                "typeString": "int_const 20000000000000000000"
              },
              "value": "20e18"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 2116,
            "name": "poolStakeWeightDivisor",
            "nodeType": "VariableDeclaration",
            "scope": 2471,
            "src": "4355:53:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2114,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "4355:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31653138",
              "id": 2115,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "4404:4:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              },
              "value": "1e18"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2118,
            "name": "bondTokenAddress",
            "nodeType": "VariableDeclaration",
            "scope": 2471,
            "src": "4414:31:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2117,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "4414:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2161,
              "nodeType": "Block",
              "src": "4795:258:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2139,
                      "name": "sortitionPoolFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2106,
                      "src": "4805:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BondedSortitionPoolFactory_$18131",
                        "typeString": "contract BondedSortitionPoolFactory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2141,
                          "name": "_sortitionPoolFactory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2122,
                          "src": "4868:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2140,
                        "name": "BondedSortitionPoolFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18131,
                        "src": "4828:26:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_BondedSortitionPoolFactory_$18131_$",
                          "typeString": "type(contract BondedSortitionPoolFactory)"
                        }
                      },
                      "id": 2142,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4828:71:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BondedSortitionPoolFactory_$18131",
                        "typeString": "contract BondedSortitionPoolFactory"
                      }
                    },
                    "src": "4805:94:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BondedSortitionPoolFactory_$18131",
                      "typeString": "contract BondedSortitionPoolFactory"
                    }
                  },
                  "id": 2144,
                  "nodeType": "ExpressionStatement",
                  "src": "4805:94:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2145,
                      "name": "bondTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2118,
                      "src": "4909:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2146,
                      "name": "_bondTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2130,
                      "src": "4928:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4909:36:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2148,
                  "nodeType": "ExpressionStatement",
                  "src": "4909:36:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2149,
                      "name": "tokenStaking",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2108,
                      "src": "4955:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TokenStaking_$14180",
                        "typeString": "contract TokenStaking"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2151,
                          "name": "_tokenStaking",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2124,
                          "src": "4983:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2150,
                        "name": "TokenStaking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14180,
                        "src": "4970:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TokenStaking_$14180_$",
                          "typeString": "type(contract TokenStaking)"
                        }
                      },
                      "id": 2152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4970:27:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TokenStaking_$14180",
                        "typeString": "contract TokenStaking"
                      }
                    },
                    "src": "4955:42:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TokenStaking_$14180",
                      "typeString": "contract TokenStaking"
                    }
                  },
                  "id": 2154,
                  "nodeType": "ExpressionStatement",
                  "src": "4955:42:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2155,
                      "name": "keepBonding",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2110,
                      "src": "5007:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_KeepBonding_$4933",
                        "typeString": "contract KeepBonding"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2157,
                          "name": "_keepBonding",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2126,
                          "src": "5033:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2156,
                        "name": "KeepBonding",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4933,
                        "src": "5021:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_KeepBonding_$4933_$",
                          "typeString": "type(contract KeepBonding)"
                        }
                      },
                      "id": 2158,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5021:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_KeepBonding_$4933",
                        "typeString": "contract KeepBonding"
                      }
                    },
                    "src": "5007:39:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_KeepBonding_$4933",
                      "typeString": "contract KeepBonding"
                    }
                  },
                  "id": 2160,
                  "nodeType": "ExpressionStatement",
                  "src": "5007:39:3"
                }
              ]
            },
            "documentation": null,
            "id": 2162,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 2133,
                    "name": "_masterBondedECDSAKeepAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2120,
                    "src": "4718:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 2134,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2132,
                  "name": "KeepCreator",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5024,
                  "src": "4706:11:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_KeepCreator_$5024_$",
                    "typeString": "type(contract KeepCreator)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4706:42:3"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 2136,
                    "name": "_randomBeacon",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2128,
                    "src": "4776:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 2137,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2135,
                  "name": "GroupSelectionSeed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4787,
                  "src": "4757:18:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_GroupSelectionSeed_$4787_$",
                    "typeString": "type(contract GroupSelectionSeed)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4757:33:3"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2131,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2120,
                  "name": "_masterBondedECDSAKeepAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2162,
                  "src": "4473:37:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2119,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4473:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2122,
                  "name": "_sortitionPoolFactory",
                  "nodeType": "VariableDeclaration",
                  "scope": 2162,
                  "src": "4520:29:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2121,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4520:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2124,
                  "name": "_tokenStaking",
                  "nodeType": "VariableDeclaration",
                  "scope": 2162,
                  "src": "4559:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2123,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4559:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2126,
                  "name": "_keepBonding",
                  "nodeType": "VariableDeclaration",
                  "scope": 2162,
                  "src": "4590:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2125,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4590:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2128,
                  "name": "_randomBeacon",
                  "nodeType": "VariableDeclaration",
                  "scope": 2162,
                  "src": "4620:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2127,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4620:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2130,
                  "name": "_bondTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2162,
                  "src": "4651:25:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2129,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4651:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4463:219:3"
            },
            "returnParameters": {
              "id": 2138,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4795:0:3"
            },
            "scope": 2471,
            "src": "4452:601:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2188,
              "nodeType": "Block",
              "src": "5784:194:3",
              "statements": [
                {
                  "assignments": [
                    2172
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2172,
                      "name": "memberBond",
                      "nodeType": "VariableDeclaration",
                      "scope": 2188,
                      "src": "5794:18:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2171,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5794:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2177,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2174,
                        "name": "_minimumBondableValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2164,
                        "src": "5829:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2175,
                        "name": "_groupSize",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2166,
                        "src": "5852:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2173,
                      "name": "bondPerMember",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2470,
                      "src": "5815:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 2176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5815:48:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5794:69:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2185,
                        "name": "memberBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2172,
                        "src": "5960:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2180,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 22448,
                                  "src": "5910:3:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2181,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "5910:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 2179,
                              "name": "getSortitionPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3289,
                              "src": "5893:16:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_address_$",
                                "typeString": "function (address) view returns (address)"
                              }
                            },
                            "id": 2182,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5893:28:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2178,
                          "name": "BondedSortitionPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18096,
                          "src": "5873:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_BondedSortitionPool_$18096_$",
                            "typeString": "type(contract BondedSortitionPool)"
                          }
                        },
                        "id": 2183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5873:49:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondedSortitionPool_$18096",
                          "typeString": "contract BondedSortitionPool"
                        }
                      },
                      "id": 2184,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setMinimumBondableValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17865,
                      "src": "5873:86:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 2186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5873:98:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2187,
                  "nodeType": "ExpressionStatement",
                  "src": "5873:98:3"
                }
              ]
            },
            "documentation": "@notice Sets the minimum bondable value required from the operator to\n join the sortition pool of the given application. It is up to the\n application to specify a reasonable minimum bond for operators trying to\n join the pool to prevent griefing by operators joining without enough\n bondable value.\n @param _minimumBondableValue The minimum bond value the application\n requires from a single keep.\n @param _groupSize Number of signers in the keep.\n @param _honestThreshold Minimum number of honest keep signers.",
            "id": 2189,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setMinimumBondableValue",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2169,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2164,
                  "name": "_minimumBondableValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 2189,
                  "src": "5677:29:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2163,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5677:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2166,
                  "name": "_groupSize",
                  "nodeType": "VariableDeclaration",
                  "scope": 2189,
                  "src": "5716:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2165,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5716:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2168,
                  "name": "_honestThreshold",
                  "nodeType": "VariableDeclaration",
                  "scope": 2189,
                  "src": "5744:24:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2167,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5744:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5667:107:3"
            },
            "returnParameters": {
              "id": 2170,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5784:0:3"
            },
            "scope": 2471,
            "src": "5635:343:3",
            "stateMutability": "nonpayable",
            "superFunction": 5748,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2352,
              "nodeType": "Block",
              "src": "6816:2137:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2207,
                          "name": "_groupSize",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2191,
                          "src": "6834:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6847:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6834:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d696e696d756d207369676e696e672067726f75702073697a652069732031",
                        "id": 2210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6850:33:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ce1d5679ea5eb1c383e20fb05cb6895b68b949d01504bfd69f7ec4fce48cc486",
                          "typeString": "literal_string \"Minimum signing group size is 1\""
                        },
                        "value": "Minimum signing group size is 1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ce1d5679ea5eb1c383e20fb05cb6895b68b949d01504bfd69f7ec4fce48cc486",
                          "typeString": "literal_string \"Minimum signing group size is 1\""
                        }
                      ],
                      "id": 2206,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22451,
                        22452
                      ],
                      "referencedDeclaration": 22452,
                      "src": "6826:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6826:58:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2212,
                  "nodeType": "ExpressionStatement",
                  "src": "6826:58:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2214,
                          "name": "_groupSize",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2191,
                          "src": "6902:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3136",
                          "id": 2215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6916:2:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_16_by_1",
                            "typeString": "int_const 16"
                          },
                          "value": "16"
                        },
                        "src": "6902:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d6178696d756d207369676e696e672067726f75702073697a65206973203136",
                        "id": 2217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6920:34:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0c19cbed612d498474656dfe90b0d112c9b590c3121bd0d012cf771ecd2ba33c",
                          "typeString": "literal_string \"Maximum signing group size is 16\""
                        },
                        "value": "Maximum signing group size is 16"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0c19cbed612d498474656dfe90b0d112c9b590c3121bd0d012cf771ecd2ba33c",
                          "typeString": "literal_string \"Maximum signing group size is 16\""
                        }
                      ],
                      "id": 2213,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22451,
                        22452
                      ],
                      "referencedDeclaration": 22452,
                      "src": "6894:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6894:61:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2219,
                  "nodeType": "ExpressionStatement",
                  "src": "6894:61:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2221,
                          "name": "_honestThreshold",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2193,
                          "src": "6986:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7005:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6986:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "486f6e657374207468726573686f6c64206d7573742062652067726561746572207468616e2030",
                        "id": 2224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7020:41:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_76b55815d77413fb98e13a319e24746178e9607f8bb9e169e74de214dd212baf",
                          "typeString": "literal_string \"Honest threshold must be greater than 0\""
                        },
                        "value": "Honest threshold must be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_76b55815d77413fb98e13a319e24746178e9607f8bb9e169e74de214dd212baf",
                          "typeString": "literal_string \"Honest threshold must be greater than 0\""
                        }
                      ],
                      "id": 2220,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22451,
                        22452
                      ],
                      "referencedDeclaration": 22452,
                      "src": "6965:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6965:106:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2226,
                  "nodeType": "ExpressionStatement",
                  "src": "6965:106:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2228,
                          "name": "_honestThreshold",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2193,
                          "src": "7102:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2229,
                          "name": "_groupSize",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2191,
                          "src": "7122:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7102:30:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "486f6e657374207468726573686f6c64206d757374206265206c657373206f7220657175616c207468652067726f75702073697a65",
                        "id": 2231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7146:55:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2bb04b7d211ca170031adaaa3c2649e964719e77a31b4c2d16a13662505f8d09",
                          "typeString": "literal_string \"Honest threshold must be less or equal the group size\""
                        },
                        "value": "Honest threshold must be less or equal the group size"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2bb04b7d211ca170031adaaa3c2649e964719e77a31b4c2d16a13662505f8d09",
                          "typeString": "literal_string \"Honest threshold must be less or equal the group size\""
                        }
                      ],
                      "id": 2227,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22451,
                        22452
                      ],
                      "referencedDeclaration": 22452,
                      "src": "7081:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7081:130:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2233,
                  "nodeType": "ExpressionStatement",
                  "src": "7081:130:3"
                },
                {
                  "assignments": [
                    2235
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2235,
                      "name": "application",
                      "nodeType": "VariableDeclaration",
                      "scope": 2352,
                      "src": "7222:19:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2234,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7222:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2238,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 2236,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22448,
                      "src": "7244:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 2237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "7244:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7222:32:3"
                },
                {
                  "assignments": [
                    2240
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2240,
                      "name": "pool",
                      "nodeType": "VariableDeclaration",
                      "scope": 2352,
                      "src": "7264:12:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2239,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7264:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2244,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2242,
                        "name": "application",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2235,
                        "src": "7296:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2241,
                      "name": "getSortitionPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3289,
                      "src": "7279:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_address_$",
                        "typeString": "function (address) view returns (address)"
                      }
                    },
                    "id": 2243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7279:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7264:44:3"
                },
                {
                  "assignments": [
                    2246
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2246,
                      "name": "memberBond",
                      "nodeType": "VariableDeclaration",
                      "scope": 2352,
                      "src": "7319:18:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2245,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7319:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2251,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2248,
                        "name": "_bond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2197,
                        "src": "7354:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2249,
                        "name": "_groupSize",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2191,
                        "src": "7361:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2247,
                      "name": "bondPerMember",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2470,
                      "src": "7340:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 2250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7340:32:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7319:53:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2253,
                          "name": "memberBond",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2246,
                          "src": "7390:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7403:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7390:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "426f6e6420706572206d656d626572206d7573742062652067726561746572207468616e207a65726f",
                        "id": 2256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7406:43:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6660f0a6c2a970de75affd793ac4b9f4d8587b182c2760960ead852dfc001eda",
                          "typeString": "literal_string \"Bond per member must be greater than zero\""
                        },
                        "value": "Bond per member must be greater than zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6660f0a6c2a970de75affd793ac4b9f4d8587b182c2760960ead852dfc001eda",
                          "typeString": "literal_string \"Bond per member must be greater than zero\""
                        }
                      ],
                      "id": 2252,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22451,
                        22452
                      ],
                      "referencedDeclaration": 22452,
                      "src": "7382:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7382:68:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2258,
                  "nodeType": "ExpressionStatement",
                  "src": "7382:68:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2260,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22448,
                            "src": "7482:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2261,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "7482:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2262,
                            "name": "openKeepFeeEstimate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2376,
                            "src": "7495:19:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 2263,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7495:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7482:34:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e73756666696369656e74207061796d656e7420666f72206f70656e696e672061206e6577206b656570",
                        "id": 2265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7530:45:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_23a8b863313d942464f8022484dd6e633e90901a8f2d63114412c9ca830b9acb",
                          "typeString": "literal_string \"Insufficient payment for opening a new keep\""
                        },
                        "value": "Insufficient payment for opening a new keep"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_23a8b863313d942464f8022484dd6e633e90901a8f2d63114412c9ca830b9acb",
                          "typeString": "literal_string \"Insufficient payment for opening a new keep\""
                        }
                      ],
                      "id": 2259,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22451,
                        22452
                      ],
                      "referencedDeclaration": 22452,
                      "src": "7461:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7461:124:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2267,
                  "nodeType": "ExpressionStatement",
                  "src": "7461:124:3"
                },
                {
                  "assignments": [
                    2269
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2269,
                      "name": "minimumStake",
                      "nodeType": "VariableDeclaration",
                      "scope": 2352,
                      "src": "7596:20:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2268,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7596:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2273,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2270,
                        "name": "tokenStaking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2108,
                        "src": "7619:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenStaking_$14180",
                          "typeString": "contract TokenStaking"
                        }
                      },
                      "id": 2271,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "minimumStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12910,
                      "src": "7619:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 2272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7619:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7596:50:3"
                },
                {
                  "assignments": [
                    2277
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2277,
                      "name": "members",
                      "nodeType": "VariableDeclaration",
                      "scope": 2352,
                      "src": "7657:24:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2275,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7657:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2276,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "7657:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2289,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2282,
                        "name": "_groupSize",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2191,
                        "src": "7754:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2284,
                            "name": "groupSelectionSeed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4587,
                            "src": "7790:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2283,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7782:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": "bytes32"
                        },
                        "id": 2285,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7782:27:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2286,
                        "name": "minimumStake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2269,
                        "src": "7827:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2287,
                        "name": "memberBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2246,
                        "src": "7857:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2279,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2240,
                            "src": "7716:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2278,
                          "name": "BondedSortitionPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18096,
                          "src": "7696:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_BondedSortitionPool_$18096_$",
                            "typeString": "type(contract BondedSortitionPool)"
                          }
                        },
                        "id": 2280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7696:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondedSortitionPool_$18096",
                          "typeString": "contract BondedSortitionPool"
                        }
                      },
                      "id": 2281,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "selectSetGroup",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17844,
                      "src": "7696:40:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_bytes32_$_t_uint256_$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256,bytes32,uint256,uint256) external returns (address[] memory)"
                      }
                    },
                    "id": 2288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7696:185:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7657:224:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2290,
                      "name": "newGroupSelectionSeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4745,
                      "src": "7892:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 2291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7892:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2292,
                  "nodeType": "ExpressionStatement",
                  "src": "7892:23:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2293,
                      "name": "keepAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2204,
                      "src": "8209:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 2294,
                        "name": "createKeep",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5023,
                        "src": "8223:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                          "typeString": "function () returns (address)"
                        }
                      },
                      "id": 2295,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8223:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8209:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2297,
                  "nodeType": "ExpressionStatement",
                  "src": "8209:26:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2302,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2195,
                        "src": "8299:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2303,
                        "name": "members",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2277,
                        "src": "8319:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2304,
                        "name": "_honestThreshold",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2193,
                        "src": "8340:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2305,
                        "name": "minimumStake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2269,
                        "src": "8370:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2306,
                        "name": "_stakeLockDuration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2199,
                        "src": "8396:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2308,
                            "name": "tokenStaking",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2108,
                            "src": "8436:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenStaking_$14180",
                              "typeString": "contract TokenStaking"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenStaking_$14180",
                              "typeString": "contract TokenStaking"
                            }
                          ],
                          "id": 2307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8428:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 2309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8428:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2311,
                            "name": "keepBonding",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2110,
                            "src": "8471:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_KeepBonding_$4933",
                              "typeString": "contract KeepBonding"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_KeepBonding_$4933",
                              "typeString": "contract KeepBonding"
                            }
                          ],
                          "id": 2310,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8463:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 2312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8463:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2314,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22584,
                            "src": "8505:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondedECDSAKeepFactory_$2471",
                              "typeString": "contract BondedECDSAKeepFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondedECDSAKeepFactory_$2471",
                              "typeString": "contract BondedECDSAKeepFactory"
                            }
                          ],
                          "id": 2313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8497:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 2315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8497:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2299,
                            "name": "keepAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2204,
                            "src": "8262:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2298,
                          "name": "BondedECDSAKeep",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2057,
                          "src": "8246:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_BondedECDSAKeep_$2057_$",
                            "typeString": "type(contract BondedECDSAKeep)"
                          }
                        },
                        "id": 2300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8246:28:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondedECDSAKeep_$2057",
                          "typeString": "contract BondedECDSAKeep"
                        }
                      },
                      "id": 2301,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1937,
                      "src": "8246:39:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_address_$_t_address_payable_$returns$__$",
                        "typeString": "function (address,address[] memory,uint256,uint256,uint256,address,address,address payable) external"
                      }
                    },
                    "id": 2316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8246:274:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2317,
                  "nodeType": "ExpressionStatement",
                  "src": "8246:274:3"
                },
                {
                  "body": {
                    "id": 2342,
                    "nodeType": "Block",
                    "src": "8572:206:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 2331,
                                "name": "members",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2277,
                                "src": "8626:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 2333,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 2332,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2319,
                                "src": "8634:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8626:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 2334,
                              "name": "keepAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2204,
                              "src": "8654:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 2336,
                                  "name": "keepAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2204,
                                  "src": "8691:11:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2335,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8683:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": "uint256"
                              },
                              "id": 2337,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8683:20:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 2338,
                              "name": "memberBond",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2246,
                              "src": "8721:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 2339,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2240,
                              "src": "8749:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2328,
                              "name": "keepBonding",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2110,
                              "src": "8586:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_KeepBonding_$4933",
                                "typeString": "contract KeepBonding"
                              }
                            },
                            "id": 2330,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "createBond",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1467,
                            "src": "8586:22:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (address,address,uint256,uint256,address) external"
                            }
                          },
                          "id": 2340,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8586:181:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2341,
                        "nodeType": "ExpressionStatement",
                        "src": "8586:181:3"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2322,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2319,
                      "src": "8551:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 2323,
                      "name": "_groupSize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2191,
                      "src": "8555:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8551:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2343,
                  "initializationExpression": {
                    "assignments": [
                      2319
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2319,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 2343,
                        "src": "8536:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2318,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8536:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 2321,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2320,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8548:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "8536:13:3"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 2326,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "8567:3:3",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 2325,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2319,
                        "src": "8567:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2327,
                    "nodeType": "ExpressionStatement",
                    "src": "8567:3:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "8531:247:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2345,
                        "name": "keepAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2204,
                        "src": "8829:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2346,
                        "name": "members",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2277,
                        "src": "8854:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2347,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2195,
                        "src": "8875:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2348,
                        "name": "application",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2235,
                        "src": "8895:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2349,
                        "name": "_honestThreshold",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2193,
                        "src": "8920:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2344,
                      "name": "BondedECDSAKeepCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2104,
                      "src": "8793:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address[] memory,address,address,uint256)"
                      }
                    },
                    "id": 2350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8793:153:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2351,
                  "nodeType": "EmitStatement",
                  "src": "8788:158:3"
                }
              ]
            },
            "documentation": "@notice Opens a new ECDSA keep.\n @dev Selects a list of signers for the keep based on provided parameters.\n A caller of this function is expected to be an application for which\n member candidates were registered in a pool.\n @param _groupSize Number of signers in the keep.\n @param _honestThreshold Minimum number of honest keep signers.\n @param _owner Address of the keep owner.\n @param _bond Value of ETH bond required from the keep in wei.\n @param _stakeLockDuration Stake lock duration in seconds.\n @return Created keep address.",
            "id": 2353,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2202,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2201,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 22432,
                  "src": "6773:12:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6773:12:3"
              }
            ],
            "name": "openKeep",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2200,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2191,
                  "name": "_groupSize",
                  "nodeType": "VariableDeclaration",
                  "scope": 2353,
                  "src": "6614:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2190,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6614:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2193,
                  "name": "_honestThreshold",
                  "nodeType": "VariableDeclaration",
                  "scope": 2353,
                  "src": "6642:24:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2192,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6642:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2195,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 2353,
                  "src": "6676:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2194,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6676:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2197,
                  "name": "_bond",
                  "nodeType": "VariableDeclaration",
                  "scope": 2353,
                  "src": "6700:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2196,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6700:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2199,
                  "name": "_stakeLockDuration",
                  "nodeType": "VariableDeclaration",
                  "scope": 2353,
                  "src": "6723:26:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2198,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6723:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6604:151:3"
            },
            "returnParameters": {
              "id": 2205,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2204,
                  "name": "keepAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2353,
                  "src": "6795:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2203,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6795:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6794:21:3"
            },
            "scope": 2471,
            "src": "6587:2366:3",
            "stateMutability": "payable",
            "superFunction": 5727,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2366,
              "nodeType": "Block",
              "src": "9436:77:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2360,
                        "name": "keepOpenedTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4947,
                        "src": "9453:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2362,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2361,
                        "name": "_delegatedAuthorityRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2355,
                        "src": "9473:28:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9453:49:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2363,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9505:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9453:53:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2359,
                  "id": 2365,
                  "nodeType": "Return",
                  "src": "9446:60:3"
                }
              ]
            },
            "documentation": "@notice Verifies if delegates authority recipient is valid address recognized\n by the factory for token staking authority delegation.\n @param _delegatedAuthorityRecipient Address of the delegated authority\n recipient.\n @return True if provided address is recognized delegated token staking\n authority for this factory contract.",
            "id": 2367,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__isRecognized",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2356,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2355,
                  "name": "_delegatedAuthorityRecipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 2367,
                  "src": "9354:36:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2354,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9354:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9353:38:3"
            },
            "returnParameters": {
              "id": 2359,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2358,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2367,
                  "src": "9426:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2357,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9426:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9425:6:3"
            },
            "scope": 2471,
            "src": "9330:183:3",
            "stateMutability": "nonpayable",
            "superFunction": 8038,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2375,
              "nodeType": "Block",
              "src": "9674:45:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2372,
                      "name": "newEntryFeeEstimate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4635,
                      "src": "9691:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 2373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9691:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2371,
                  "id": 2374,
                  "nodeType": "Return",
                  "src": "9684:28:3"
                }
              ]
            },
            "documentation": "@notice Gets a fee estimate for opening a new keep.\n @return Uint256 estimate.",
            "id": 2376,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "openKeepFeeEstimate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2368,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9641:2:3"
            },
            "returnParameters": {
              "id": 2371,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2370,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2376,
                  "src": "9665:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2369,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9665:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9664:9:3"
            },
            "scope": 2471,
            "src": "9613:106:3",
            "stateMutability": "view",
            "superFunction": 5732,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2391,
              "nodeType": "Block",
              "src": "10356:78:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2385,
                        "name": "_operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2378,
                        "src": "10402:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2387,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22584,
                            "src": "10421:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondedECDSAKeepFactory_$2471",
                              "typeString": "contract BondedECDSAKeepFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondedECDSAKeepFactory_$2471",
                              "typeString": "contract BondedECDSAKeepFactory"
                            }
                          ],
                          "id": 2386,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10413:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 2388,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10413:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2383,
                        "name": "tokenStaking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2108,
                        "src": "10373:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenStaking_$14180",
                          "typeString": "contract TokenStaking"
                        }
                      },
                      "id": 2384,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "hasMinimumStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14041,
                      "src": "10373:28:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address,address) view external returns (bool)"
                      }
                    },
                    "id": 2389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10373:54:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2382,
                  "id": 2390,
                  "nodeType": "Return",
                  "src": "10366:61:3"
                }
              ]
            },
            "documentation": "@notice Checks if the specified account has enough active stake to become\n network operator and that this contract has been authorized for potential\n slashing.\n\n    /// Having the required minimum of active stake makes the operator eligible\n to join the network. If the active stake is not currently undelegating,\n operator is also eligible for work selection.\n\n    /// @param _operator operator's address\n @return True if has enough active stake to participate in the network,\n false otherwise.",
            "id": 2392,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "hasMinimumStake",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2379,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2378,
                  "name": "_operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 2392,
                  "src": "10310:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2377,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10310:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10309:19:3"
            },
            "returnParameters": {
              "id": 2382,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2381,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2392,
                  "src": "10350:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2380,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10350:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10349:6:3"
            },
            "scope": 2471,
            "src": "10285:149:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2407,
              "nodeType": "Block",
              "src": "10873:86:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2401,
                        "name": "_operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2394,
                        "src": "10927:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2403,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22584,
                            "src": "10946:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondedECDSAKeepFactory_$2471",
                              "typeString": "contract BondedECDSAKeepFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondedECDSAKeepFactory_$2471",
                              "typeString": "contract BondedECDSAKeepFactory"
                            }
                          ],
                          "id": 2402,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10938:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 2404,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10938:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2399,
                        "name": "tokenStaking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2108,
                        "src": "10890:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenStaking_$14180",
                          "typeString": "contract TokenStaking"
                        }
                      },
                      "id": 2400,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isAuthorizedForOperator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8147,
                      "src": "10890:36:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address,address) view external returns (bool)"
                      }
                    },
                    "id": 2405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10890:62:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2398,
                  "id": 2406,
                  "nodeType": "Return",
                  "src": "10883:69:3"
                }
              ]
            },
            "documentation": "@notice Checks if the factory has the authorization to operate on stake\n represented by the provided operator.\n\n    /// @param _operator operator's address\n @return True if the factory has access to the staked token balance of\n the provided operator and can slash that stake. False otherwise.",
            "id": 2408,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isOperatorAuthorized",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2395,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2394,
                  "name": "_operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 2408,
                  "src": "10799:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2393,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10799:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10798:19:3"
            },
            "returnParameters": {
              "id": 2398,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2397,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2408,
                  "src": "10863:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2396,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10863:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10862:6:3"
            },
            "scope": 2471,
            "src": "10769:190:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2420,
              "nodeType": "Block",
              "src": "11244:57:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2417,
                        "name": "_operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2410,
                        "src": "11284:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2415,
                        "name": "tokenStaking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2108,
                        "src": "11261:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenStaking_$14180",
                          "typeString": "contract TokenStaking"
                        }
                      },
                      "id": 2416,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11140,
                      "src": "11261:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 2418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11261:33:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2414,
                  "id": 2419,
                  "nodeType": "Return",
                  "src": "11254:40:3"
                }
              ]
            },
            "documentation": "@notice Gets the stake balance of the specified operator.\n @param _operator The operator to query the balance of.\n @return An uint256 representing the amount staked by the passed operator.",
            "id": 2421,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2411,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2410,
                  "name": "_operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 2421,
                  "src": "11195:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2409,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11195:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11194:19:3"
            },
            "returnParameters": {
              "id": 2414,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2413,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2421,
                  "src": "11235:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2412,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11235:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11234:9:3"
            },
            "scope": 2471,
            "src": "11176:125:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2447,
              "nodeType": "Block",
              "src": "11382:301:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 2432,
                                "name": "tokenStaking",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2108,
                                "src": "11486:12:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TokenStaking_$14180",
                                  "typeString": "contract TokenStaking"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TokenStaking_$14180",
                                  "typeString": "contract TokenStaking"
                                }
                              ],
                              "id": 2431,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11478:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 2433,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11478:21:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2430,
                          "name": "IStaking",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20975,
                          "src": "11469:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IStaking_$20975_$",
                            "typeString": "type(contract IStaking)"
                          }
                        },
                        "id": 2434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11469:31:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStaking_$20975",
                          "typeString": "contract IStaking"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 2437,
                                "name": "keepBonding",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2110,
                                "src": "11535:11:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_KeepBonding_$4933",
                                  "typeString": "contract KeepBonding"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_KeepBonding_$4933",
                                  "typeString": "contract KeepBonding"
                                }
                              ],
                              "id": 2436,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11527:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 2438,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11527:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2435,
                          "name": "IBonding",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20948,
                          "src": "11518:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IBonding_$20948_$",
                            "typeString": "type(contract IBonding)"
                          }
                        },
                        "id": 2439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11518:30:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBonding_$20948",
                          "typeString": "contract IBonding"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 2440,
                            "name": "tokenStaking",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2108,
                            "src": "11566:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenStaking_$14180",
                              "typeString": "contract TokenStaking"
                            }
                          },
                          "id": 2441,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "minimumStake",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12910,
                          "src": "11566:25:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 2442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11566:27:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2443,
                        "name": "minimumBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2113,
                        "src": "11611:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2444,
                        "name": "poolStakeWeightDivisor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2116,
                        "src": "11640:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IStaking_$20975",
                          "typeString": "contract IStaking"
                        },
                        {
                          "typeIdentifier": "t_contract$_IBonding_$20948",
                          "typeString": "contract IBonding"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2428,
                        "name": "sortitionPoolFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2106,
                        "src": "11411:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondedSortitionPoolFactory_$18131",
                          "typeString": "contract BondedSortitionPoolFactory"
                        }
                      },
                      "id": 2429,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createSortitionPool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18130,
                      "src": "11411:40:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IStaking_$20975_$_t_contract$_IBonding_$20948_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (contract IStaking,contract IBonding,uint256,uint256,uint256) external returns (address)"
                      }
                    },
                    "id": 2445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11411:265:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 2427,
                  "id": 2446,
                  "nodeType": "Return",
                  "src": "11392:284:3"
                }
              ]
            },
            "documentation": null,
            "id": 2448,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "newSortitionPool",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2424,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2423,
                  "name": "_application",
                  "nodeType": "VariableDeclaration",
                  "scope": 2448,
                  "src": "11333:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2422,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11333:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11332:22:3"
            },
            "returnParameters": {
              "id": 2427,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2426,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2448,
                  "src": "11373:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2425,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11373:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11372:9:3"
            },
            "scope": 2471,
            "src": "11307:376:3",
            "stateMutability": "nonpayable",
            "superFunction": 3380,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2469,
              "nodeType": "Block",
              "src": "12081:413:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2466,
                        "name": "_groupSize",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2452,
                        "src": "12476:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "31",
                                "id": 2462,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12468:1:3",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 2459,
                                    "name": "_groupSize",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2452,
                                    "src": "12452:10:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 2457,
                                    "name": "_keepBond",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2450,
                                    "src": "12438:9:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2458,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "add",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 21363,
                                  "src": "12438:13:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 2460,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12438:25:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2461,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 21388,
                              "src": "12438:29:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 2463,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12438:32:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 2464,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "12437:34:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 2465,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21447,
                      "src": "12437:38:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 2467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12437:50:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2456,
                  "id": 2468,
                  "nodeType": "Return",
                  "src": "12430:57:3"
                }
              ]
            },
            "documentation": "@notice Calculates bond requirement per member performing the necessary\n rounding.\n @param _keepBond The bond required from a keep.\n @param _groupSize Number of signers in the keep.\n @return Bond value required from each keep member.",
            "id": 2470,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "bondPerMember",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2453,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2450,
                  "name": "_keepBond",
                  "nodeType": "VariableDeclaration",
                  "scope": 2470,
                  "src": "11982:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2449,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11982:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2452,
                  "name": "_groupSize",
                  "nodeType": "VariableDeclaration",
                  "scope": 2470,
                  "src": "12001:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2451,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12001:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11981:39:3"
            },
            "returnParameters": {
              "id": 2456,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2455,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2470,
                  "src": "12068:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2454,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12068:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12067:9:3"
            },
            "scope": 2471,
            "src": "11959:535:3",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 2472,
        "src": "3021:9475:3"
      }
    ],
    "src": "1837:10660:3"
  },
  "legacyAST": {
    "absolutePath": "/home/kowal/Projects/sovryn/keep-ecdsa/solidity/contracts/BondedECDSAKeepFactory.sol",
    "exportedSymbols": {
      "BondedECDSAKeepFactory": [
        2471
      ]
    },
    "id": 2472,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2059,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "1837:23:3"
      },
      {
        "absolutePath": "/home/kowal/Projects/sovryn/keep-ecdsa/solidity/contracts/BondedECDSAKeep.sol",
        "file": "./BondedECDSAKeep.sol",
        "id": 2060,
        "nodeType": "ImportDirective",
        "scope": 2472,
        "sourceUnit": 2058,
        "src": "1862:31:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/kowal/Projects/sovryn/keep-ecdsa/solidity/contracts/KeepBonding.sol",
        "file": "./KeepBonding.sol",
        "id": 2061,
        "nodeType": "ImportDirective",
        "scope": 2472,
        "sourceUnit": 4934,
        "src": "1894:27:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/kowal/Projects/sovryn/keep-ecdsa/solidity/contracts/api/IBondedECDSAKeepFactory.sol",
        "file": "./api/IBondedECDSAKeepFactory.sol",
        "id": 2062,
        "nodeType": "ImportDirective",
        "scope": 2472,
        "sourceUnit": 5750,
        "src": "1922:43:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/kowal/Projects/sovryn/keep-ecdsa/solidity/contracts/KeepCreator.sol",
        "file": "./KeepCreator.sol",
        "id": 2063,
        "nodeType": "ImportDirective",
        "scope": 2472,
        "sourceUnit": 5025,
        "src": "1966:27:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/kowal/Projects/sovryn/keep-ecdsa/solidity/contracts/GroupSelectionSeed.sol",
        "file": "./GroupSelectionSeed.sol",
        "id": 2064,
        "nodeType": "ImportDirective",
        "scope": 2472,
        "sourceUnit": 4788,
        "src": "1994:34:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/kowal/Projects/sovryn/keep-ecdsa/solidity/contracts/CandidatesPools.sol",
        "file": "./CandidatesPools.sol",
        "id": 2065,
        "nodeType": "ImportDirective",
        "scope": 2472,
        "sourceUnit": 3406,
        "src": "2029:31:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@keep-network/sortition-pools/contracts/api/IStaking.sol",
        "file": "@keep-network/sortition-pools/contracts/api/IStaking.sol",
        "id": 2066,
        "nodeType": "ImportDirective",
        "scope": 2472,
        "sourceUnit": 20976,
        "src": "2062:66:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@keep-network/sortition-pools/contracts/api/IBonding.sol",
        "file": "@keep-network/sortition-pools/contracts/api/IBonding.sol",
        "id": 2067,
        "nodeType": "ImportDirective",
        "scope": 2472,
        "sourceUnit": 20949,
        "src": "2129:66:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@keep-network/sortition-pools/contracts/BondedSortitionPool.sol",
        "file": "@keep-network/sortition-pools/contracts/BondedSortitionPool.sol",
        "id": 2068,
        "nodeType": "ImportDirective",
        "scope": 2472,
        "sourceUnit": 18097,
        "src": "2196:73:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@keep-network/sortition-pools/contracts/BondedSortitionPoolFactory.sol",
        "file": "@keep-network/sortition-pools/contracts/BondedSortitionPoolFactory.sol",
        "id": 2069,
        "nodeType": "ImportDirective",
        "scope": 2472,
        "sourceUnit": 18132,
        "src": "2270:80:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@keep-network/keep-core/contracts/TokenStaking.sol",
        "file": "@keep-network/keep-core/contracts/TokenStaking.sol",
        "id": 2072,
        "nodeType": "ImportDirective",
        "scope": 2472,
        "sourceUnit": 14181,
        "src": "2352:110:3",
        "symbolAliases": [
          {
            "foreign": 2070,
            "local": null
          },
          {
            "foreign": 2071,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "@keep-network/keep-core/contracts/utils/AddressArrayUtils.sol",
        "file": "@keep-network/keep-core/contracts/utils/AddressArrayUtils.sol",
        "id": 2073,
        "nodeType": "ImportDirective",
        "scope": 2472,
        "sourceUnit": 16653,
        "src": "2463:71:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 2074,
        "nodeType": "ImportDirective",
        "scope": 2472,
        "sourceUnit": 21470,
        "src": "2536:59:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2075,
              "name": "IBondedECDSAKeepFactory",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5749,
              "src": "3060:23:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IBondedECDSAKeepFactory_$5749",
                "typeString": "contract IBondedECDSAKeepFactory"
              }
            },
            "id": 2076,
            "nodeType": "InheritanceSpecifier",
            "src": "3060:23:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2077,
              "name": "KeepCreator",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5024,
              "src": "3089:11:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_KeepCreator_$5024",
                "typeString": "contract KeepCreator"
              }
            },
            "id": 2078,
            "nodeType": "InheritanceSpecifier",
            "src": "3089:11:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2079,
              "name": "AuthorityDelegator",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8039,
              "src": "3106:18:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AuthorityDelegator_$8039",
                "typeString": "contract AuthorityDelegator"
              }
            },
            "id": 2080,
            "nodeType": "InheritanceSpecifier",
            "src": "3106:18:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2081,
              "name": "GroupSelectionSeed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4787,
              "src": "3130:18:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_GroupSelectionSeed_$4787",
                "typeString": "contract GroupSelectionSeed"
              }
            },
            "id": 2082,
            "nodeType": "InheritanceSpecifier",
            "src": "3130:18:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2083,
              "name": "CandidatesPools",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3405,
              "src": "3154:15:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CandidatesPools_$3405",
                "typeString": "contract CandidatesPools"
              }
            },
            "id": 2084,
            "nodeType": "InheritanceSpecifier",
            "src": "3154:15:3"
          }
        ],
        "contractDependencies": [
          3405,
          3440,
          4787,
          5024,
          5749,
          8039,
          8373,
          22433
        ],
        "contractKind": "contract",
        "documentation": "@title Bonded ECDSA Keep Factory\n @notice Contract creating bonded ECDSA keeps.\n @dev We avoid redeployment of bonded ECDSA keep contract by using the clone factory.\n Proxy delegates calls to sortition pool and therefore does not affect contract's\n state. This means that we only need to deploy the bonded ECDSA keep contract\n once. The factory provides clean state for every new bonded ECDSA keep clone.",
        "fullyImplemented": true,
        "id": 2471,
        "linearizedBaseContracts": [
          2471,
          3405,
          4787,
          22433,
          8373,
          8039,
          5024,
          3440,
          5749
        ],
        "name": "BondedECDSAKeepFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2088,
            "libraryName": {
              "contractScope": null,
              "id": 2085,
              "name": "AddressArrayUtils",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 16652,
              "src": "3182:17:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AddressArrayUtils_$16652",
                "typeString": "library AddressArrayUtils"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "3176:38:3",
            "typeName": {
              "baseType": {
                "id": 2086,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "3204:7:3",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 2087,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "3204:9:3",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            }
          },
          {
            "id": 2091,
            "libraryName": {
              "contractScope": null,
              "id": 2089,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 21469,
              "src": "3225:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$21469",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "3219:27:3",
            "typeName": {
              "id": 2090,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3238:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 2104,
            "name": "BondedECDSAKeepCreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2093,
                  "indexed": true,
                  "name": "keepAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2104,
                  "src": "3344:27:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2092,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3344:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2096,
                  "indexed": false,
                  "name": "members",
                  "nodeType": "VariableDeclaration",
                  "scope": 2104,
                  "src": "3381:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2094,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3381:7:3",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2095,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3381:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2098,
                  "indexed": true,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 2104,
                  "src": "3408:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2097,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3408:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2100,
                  "indexed": true,
                  "name": "application",
                  "nodeType": "VariableDeclaration",
                  "scope": 2104,
                  "src": "3439:27:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2099,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3439:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2102,
                  "indexed": false,
                  "name": "honestThreshold",
                  "nodeType": "VariableDeclaration",
                  "scope": 2104,
                  "src": "3476:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2101,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3476:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3334:171:3"
            },
            "src": "3306:200:3"
          },
          {
            "constant": false,
            "id": 2106,
            "name": "sortitionPoolFactory",
            "nodeType": "VariableDeclaration",
            "scope": 2471,
            "src": "3512:47:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_BondedSortitionPoolFactory_$18131",
              "typeString": "contract BondedSortitionPoolFactory"
            },
            "typeName": {
              "contractScope": null,
              "id": 2105,
              "name": "BondedSortitionPoolFactory",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 18131,
              "src": "3512:26:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BondedSortitionPoolFactory_$18131",
                "typeString": "contract BondedSortitionPoolFactory"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 2108,
            "name": "tokenStaking",
            "nodeType": "VariableDeclaration",
            "scope": 2471,
            "src": "3565:25:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TokenStaking_$14180",
              "typeString": "contract TokenStaking"
            },
            "typeName": {
              "contractScope": null,
              "id": 2107,
              "name": "TokenStaking",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 14180,
              "src": "3565:12:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TokenStaking_$14180",
                "typeString": "contract TokenStaking"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 2110,
            "name": "keepBonding",
            "nodeType": "VariableDeclaration",
            "scope": 2471,
            "src": "3596:23:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_KeepBonding_$4933",
              "typeString": "contract KeepBonding"
            },
            "typeName": {
              "contractScope": null,
              "id": 2109,
              "name": "KeepBonding",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4933,
              "src": "3596:11:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_KeepBonding_$4933",
                "typeString": "contract KeepBonding"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 2113,
            "name": "minimumBond",
            "nodeType": "VariableDeclaration",
            "scope": 2471,
            "src": "4018:43:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2111,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "4018:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3230653138",
              "id": 2112,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "4056:5:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_20000000000000000000_by_1",
                "typeString": "int_const 20000000000000000000"
              },
              "value": "20e18"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 2116,
            "name": "poolStakeWeightDivisor",
            "nodeType": "VariableDeclaration",
            "scope": 2471,
            "src": "4355:53:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2114,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "4355:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31653138",
              "id": 2115,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "4404:4:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              },
              "value": "1e18"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2118,
            "name": "bondTokenAddress",
            "nodeType": "VariableDeclaration",
            "scope": 2471,
            "src": "4414:31:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2117,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "4414:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2161,
              "nodeType": "Block",
              "src": "4795:258:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2139,
                      "name": "sortitionPoolFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2106,
                      "src": "4805:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BondedSortitionPoolFactory_$18131",
                        "typeString": "contract BondedSortitionPoolFactory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2141,
                          "name": "_sortitionPoolFactory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2122,
                          "src": "4868:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2140,
                        "name": "BondedSortitionPoolFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18131,
                        "src": "4828:26:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_BondedSortitionPoolFactory_$18131_$",
                          "typeString": "type(contract BondedSortitionPoolFactory)"
                        }
                      },
                      "id": 2142,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4828:71:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BondedSortitionPoolFactory_$18131",
                        "typeString": "contract BondedSortitionPoolFactory"
                      }
                    },
                    "src": "4805:94:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BondedSortitionPoolFactory_$18131",
                      "typeString": "contract BondedSortitionPoolFactory"
                    }
                  },
                  "id": 2144,
                  "nodeType": "ExpressionStatement",
                  "src": "4805:94:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2145,
                      "name": "bondTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2118,
                      "src": "4909:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2146,
                      "name": "_bondTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2130,
                      "src": "4928:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4909:36:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2148,
                  "nodeType": "ExpressionStatement",
                  "src": "4909:36:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2149,
                      "name": "tokenStaking",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2108,
                      "src": "4955:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TokenStaking_$14180",
                        "typeString": "contract TokenStaking"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2151,
                          "name": "_tokenStaking",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2124,
                          "src": "4983:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2150,
                        "name": "TokenStaking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14180,
                        "src": "4970:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TokenStaking_$14180_$",
                          "typeString": "type(contract TokenStaking)"
                        }
                      },
                      "id": 2152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4970:27:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TokenStaking_$14180",
                        "typeString": "contract TokenStaking"
                      }
                    },
                    "src": "4955:42:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TokenStaking_$14180",
                      "typeString": "contract TokenStaking"
                    }
                  },
                  "id": 2154,
                  "nodeType": "ExpressionStatement",
                  "src": "4955:42:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2155,
                      "name": "keepBonding",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2110,
                      "src": "5007:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_KeepBonding_$4933",
                        "typeString": "contract KeepBonding"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2157,
                          "name": "_keepBonding",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2126,
                          "src": "5033:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2156,
                        "name": "KeepBonding",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4933,
                        "src": "5021:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_KeepBonding_$4933_$",
                          "typeString": "type(contract KeepBonding)"
                        }
                      },
                      "id": 2158,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5021:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_KeepBonding_$4933",
                        "typeString": "contract KeepBonding"
                      }
                    },
                    "src": "5007:39:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_KeepBonding_$4933",
                      "typeString": "contract KeepBonding"
                    }
                  },
                  "id": 2160,
                  "nodeType": "ExpressionStatement",
                  "src": "5007:39:3"
                }
              ]
            },
            "documentation": null,
            "id": 2162,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 2133,
                    "name": "_masterBondedECDSAKeepAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2120,
                    "src": "4718:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 2134,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2132,
                  "name": "KeepCreator",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5024,
                  "src": "4706:11:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_KeepCreator_$5024_$",
                    "typeString": "type(contract KeepCreator)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4706:42:3"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 2136,
                    "name": "_randomBeacon",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2128,
                    "src": "4776:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 2137,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2135,
                  "name": "GroupSelectionSeed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4787,
                  "src": "4757:18:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_GroupSelectionSeed_$4787_$",
                    "typeString": "type(contract GroupSelectionSeed)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4757:33:3"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2131,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2120,
                  "name": "_masterBondedECDSAKeepAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2162,
                  "src": "4473:37:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2119,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4473:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2122,
                  "name": "_sortitionPoolFactory",
                  "nodeType": "VariableDeclaration",
                  "scope": 2162,
                  "src": "4520:29:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2121,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4520:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2124,
                  "name": "_tokenStaking",
                  "nodeType": "VariableDeclaration",
                  "scope": 2162,
                  "src": "4559:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2123,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4559:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2126,
                  "name": "_keepBonding",
                  "nodeType": "VariableDeclaration",
                  "scope": 2162,
                  "src": "4590:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2125,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4590:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2128,
                  "name": "_randomBeacon",
                  "nodeType": "VariableDeclaration",
                  "scope": 2162,
                  "src": "4620:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2127,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4620:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2130,
                  "name": "_bondTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2162,
                  "src": "4651:25:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2129,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4651:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4463:219:3"
            },
            "returnParameters": {
              "id": 2138,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4795:0:3"
            },
            "scope": 2471,
            "src": "4452:601:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2188,
              "nodeType": "Block",
              "src": "5784:194:3",
              "statements": [
                {
                  "assignments": [
                    2172
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2172,
                      "name": "memberBond",
                      "nodeType": "VariableDeclaration",
                      "scope": 2188,
                      "src": "5794:18:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2171,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5794:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2177,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2174,
                        "name": "_minimumBondableValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2164,
                        "src": "5829:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2175,
                        "name": "_groupSize",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2166,
                        "src": "5852:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2173,
                      "name": "bondPerMember",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2470,
                      "src": "5815:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 2176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5815:48:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5794:69:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2185,
                        "name": "memberBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2172,
                        "src": "5960:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2180,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 22448,
                                  "src": "5910:3:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2181,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "5910:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 2179,
                              "name": "getSortitionPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3289,
                              "src": "5893:16:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_address_$",
                                "typeString": "function (address) view returns (address)"
                              }
                            },
                            "id": 2182,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5893:28:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2178,
                          "name": "BondedSortitionPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18096,
                          "src": "5873:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_BondedSortitionPool_$18096_$",
                            "typeString": "type(contract BondedSortitionPool)"
                          }
                        },
                        "id": 2183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5873:49:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondedSortitionPool_$18096",
                          "typeString": "contract BondedSortitionPool"
                        }
                      },
                      "id": 2184,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setMinimumBondableValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17865,
                      "src": "5873:86:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 2186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5873:98:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2187,
                  "nodeType": "ExpressionStatement",
                  "src": "5873:98:3"
                }
              ]
            },
            "documentation": "@notice Sets the minimum bondable value required from the operator to\n join the sortition pool of the given application. It is up to the\n application to specify a reasonable minimum bond for operators trying to\n join the pool to prevent griefing by operators joining without enough\n bondable value.\n @param _minimumBondableValue The minimum bond value the application\n requires from a single keep.\n @param _groupSize Number of signers in the keep.\n @param _honestThreshold Minimum number of honest keep signers.",
            "id": 2189,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setMinimumBondableValue",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2169,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2164,
                  "name": "_minimumBondableValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 2189,
                  "src": "5677:29:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2163,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5677:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2166,
                  "name": "_groupSize",
                  "nodeType": "VariableDeclaration",
                  "scope": 2189,
                  "src": "5716:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2165,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5716:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2168,
                  "name": "_honestThreshold",
                  "nodeType": "VariableDeclaration",
                  "scope": 2189,
                  "src": "5744:24:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2167,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5744:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5667:107:3"
            },
            "returnParameters": {
              "id": 2170,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5784:0:3"
            },
            "scope": 2471,
            "src": "5635:343:3",
            "stateMutability": "nonpayable",
            "superFunction": 5748,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2352,
              "nodeType": "Block",
              "src": "6816:2137:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2207,
                          "name": "_groupSize",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2191,
                          "src": "6834:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6847:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6834:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d696e696d756d207369676e696e672067726f75702073697a652069732031",
                        "id": 2210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6850:33:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ce1d5679ea5eb1c383e20fb05cb6895b68b949d01504bfd69f7ec4fce48cc486",
                          "typeString": "literal_string \"Minimum signing group size is 1\""
                        },
                        "value": "Minimum signing group size is 1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ce1d5679ea5eb1c383e20fb05cb6895b68b949d01504bfd69f7ec4fce48cc486",
                          "typeString": "literal_string \"Minimum signing group size is 1\""
                        }
                      ],
                      "id": 2206,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22451,
                        22452
                      ],
                      "referencedDeclaration": 22452,
                      "src": "6826:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6826:58:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2212,
                  "nodeType": "ExpressionStatement",
                  "src": "6826:58:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2214,
                          "name": "_groupSize",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2191,
                          "src": "6902:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3136",
                          "id": 2215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6916:2:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_16_by_1",
                            "typeString": "int_const 16"
                          },
                          "value": "16"
                        },
                        "src": "6902:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d6178696d756d207369676e696e672067726f75702073697a65206973203136",
                        "id": 2217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6920:34:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0c19cbed612d498474656dfe90b0d112c9b590c3121bd0d012cf771ecd2ba33c",
                          "typeString": "literal_string \"Maximum signing group size is 16\""
                        },
                        "value": "Maximum signing group size is 16"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0c19cbed612d498474656dfe90b0d112c9b590c3121bd0d012cf771ecd2ba33c",
                          "typeString": "literal_string \"Maximum signing group size is 16\""
                        }
                      ],
                      "id": 2213,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22451,
                        22452
                      ],
                      "referencedDeclaration": 22452,
                      "src": "6894:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6894:61:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2219,
                  "nodeType": "ExpressionStatement",
                  "src": "6894:61:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2221,
                          "name": "_honestThreshold",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2193,
                          "src": "6986:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7005:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6986:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "486f6e657374207468726573686f6c64206d7573742062652067726561746572207468616e2030",
                        "id": 2224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7020:41:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_76b55815d77413fb98e13a319e24746178e9607f8bb9e169e74de214dd212baf",
                          "typeString": "literal_string \"Honest threshold must be greater than 0\""
                        },
                        "value": "Honest threshold must be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_76b55815d77413fb98e13a319e24746178e9607f8bb9e169e74de214dd212baf",
                          "typeString": "literal_string \"Honest threshold must be greater than 0\""
                        }
                      ],
                      "id": 2220,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22451,
                        22452
                      ],
                      "referencedDeclaration": 22452,
                      "src": "6965:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6965:106:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2226,
                  "nodeType": "ExpressionStatement",
                  "src": "6965:106:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2228,
                          "name": "_honestThreshold",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2193,
                          "src": "7102:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2229,
                          "name": "_groupSize",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2191,
                          "src": "7122:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7102:30:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "486f6e657374207468726573686f6c64206d757374206265206c657373206f7220657175616c207468652067726f75702073697a65",
                        "id": 2231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7146:55:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2bb04b7d211ca170031adaaa3c2649e964719e77a31b4c2d16a13662505f8d09",
                          "typeString": "literal_string \"Honest threshold must be less or equal the group size\""
                        },
                        "value": "Honest threshold must be less or equal the group size"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2bb04b7d211ca170031adaaa3c2649e964719e77a31b4c2d16a13662505f8d09",
                          "typeString": "literal_string \"Honest threshold must be less or equal the group size\""
                        }
                      ],
                      "id": 2227,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22451,
                        22452
                      ],
                      "referencedDeclaration": 22452,
                      "src": "7081:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7081:130:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2233,
                  "nodeType": "ExpressionStatement",
                  "src": "7081:130:3"
                },
                {
                  "assignments": [
                    2235
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2235,
                      "name": "application",
                      "nodeType": "VariableDeclaration",
                      "scope": 2352,
                      "src": "7222:19:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2234,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7222:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2238,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 2236,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22448,
                      "src": "7244:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 2237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "7244:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7222:32:3"
                },
                {
                  "assignments": [
                    2240
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2240,
                      "name": "pool",
                      "nodeType": "VariableDeclaration",
                      "scope": 2352,
                      "src": "7264:12:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2239,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7264:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2244,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2242,
                        "name": "application",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2235,
                        "src": "7296:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2241,
                      "name": "getSortitionPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3289,
                      "src": "7279:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_address_$",
                        "typeString": "function (address) view returns (address)"
                      }
                    },
                    "id": 2243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7279:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7264:44:3"
                },
                {
                  "assignments": [
                    2246
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2246,
                      "name": "memberBond",
                      "nodeType": "VariableDeclaration",
                      "scope": 2352,
                      "src": "7319:18:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2245,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7319:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2251,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2248,
                        "name": "_bond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2197,
                        "src": "7354:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2249,
                        "name": "_groupSize",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2191,
                        "src": "7361:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2247,
                      "name": "bondPerMember",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2470,
                      "src": "7340:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 2250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7340:32:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7319:53:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2253,
                          "name": "memberBond",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2246,
                          "src": "7390:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7403:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7390:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "426f6e6420706572206d656d626572206d7573742062652067726561746572207468616e207a65726f",
                        "id": 2256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7406:43:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6660f0a6c2a970de75affd793ac4b9f4d8587b182c2760960ead852dfc001eda",
                          "typeString": "literal_string \"Bond per member must be greater than zero\""
                        },
                        "value": "Bond per member must be greater than zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6660f0a6c2a970de75affd793ac4b9f4d8587b182c2760960ead852dfc001eda",
                          "typeString": "literal_string \"Bond per member must be greater than zero\""
                        }
                      ],
                      "id": 2252,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22451,
                        22452
                      ],
                      "referencedDeclaration": 22452,
                      "src": "7382:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7382:68:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2258,
                  "nodeType": "ExpressionStatement",
                  "src": "7382:68:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2260,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22448,
                            "src": "7482:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2261,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "7482:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2262,
                            "name": "openKeepFeeEstimate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2376,
                            "src": "7495:19:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 2263,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7495:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7482:34:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e73756666696369656e74207061796d656e7420666f72206f70656e696e672061206e6577206b656570",
                        "id": 2265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7530:45:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_23a8b863313d942464f8022484dd6e633e90901a8f2d63114412c9ca830b9acb",
                          "typeString": "literal_string \"Insufficient payment for opening a new keep\""
                        },
                        "value": "Insufficient payment for opening a new keep"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_23a8b863313d942464f8022484dd6e633e90901a8f2d63114412c9ca830b9acb",
                          "typeString": "literal_string \"Insufficient payment for opening a new keep\""
                        }
                      ],
                      "id": 2259,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22451,
                        22452
                      ],
                      "referencedDeclaration": 22452,
                      "src": "7461:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7461:124:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2267,
                  "nodeType": "ExpressionStatement",
                  "src": "7461:124:3"
                },
                {
                  "assignments": [
                    2269
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2269,
                      "name": "minimumStake",
                      "nodeType": "VariableDeclaration",
                      "scope": 2352,
                      "src": "7596:20:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2268,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7596:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2273,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2270,
                        "name": "tokenStaking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2108,
                        "src": "7619:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenStaking_$14180",
                          "typeString": "contract TokenStaking"
                        }
                      },
                      "id": 2271,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "minimumStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12910,
                      "src": "7619:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 2272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7619:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7596:50:3"
                },
                {
                  "assignments": [
                    2277
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2277,
                      "name": "members",
                      "nodeType": "VariableDeclaration",
                      "scope": 2352,
                      "src": "7657:24:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2275,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7657:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2276,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "7657:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2289,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2282,
                        "name": "_groupSize",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2191,
                        "src": "7754:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2284,
                            "name": "groupSelectionSeed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4587,
                            "src": "7790:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2283,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7782:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": "bytes32"
                        },
                        "id": 2285,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7782:27:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2286,
                        "name": "minimumStake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2269,
                        "src": "7827:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2287,
                        "name": "memberBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2246,
                        "src": "7857:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2279,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2240,
                            "src": "7716:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2278,
                          "name": "BondedSortitionPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18096,
                          "src": "7696:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_BondedSortitionPool_$18096_$",
                            "typeString": "type(contract BondedSortitionPool)"
                          }
                        },
                        "id": 2280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7696:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondedSortitionPool_$18096",
                          "typeString": "contract BondedSortitionPool"
                        }
                      },
                      "id": 2281,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "selectSetGroup",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17844,
                      "src": "7696:40:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_bytes32_$_t_uint256_$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256,bytes32,uint256,uint256) external returns (address[] memory)"
                      }
                    },
                    "id": 2288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7696:185:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7657:224:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2290,
                      "name": "newGroupSelectionSeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4745,
                      "src": "7892:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 2291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7892:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2292,
                  "nodeType": "ExpressionStatement",
                  "src": "7892:23:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2293,
                      "name": "keepAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2204,
                      "src": "8209:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 2294,
                        "name": "createKeep",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5023,
                        "src": "8223:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                          "typeString": "function () returns (address)"
                        }
                      },
                      "id": 2295,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8223:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8209:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2297,
                  "nodeType": "ExpressionStatement",
                  "src": "8209:26:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2302,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2195,
                        "src": "8299:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2303,
                        "name": "members",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2277,
                        "src": "8319:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2304,
                        "name": "_honestThreshold",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2193,
                        "src": "8340:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2305,
                        "name": "minimumStake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2269,
                        "src": "8370:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2306,
                        "name": "_stakeLockDuration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2199,
                        "src": "8396:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2308,
                            "name": "tokenStaking",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2108,
                            "src": "8436:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenStaking_$14180",
                              "typeString": "contract TokenStaking"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenStaking_$14180",
                              "typeString": "contract TokenStaking"
                            }
                          ],
                          "id": 2307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8428:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 2309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8428:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2311,
                            "name": "keepBonding",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2110,
                            "src": "8471:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_KeepBonding_$4933",
                              "typeString": "contract KeepBonding"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_KeepBonding_$4933",
                              "typeString": "contract KeepBonding"
                            }
                          ],
                          "id": 2310,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8463:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 2312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8463:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2314,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22584,
                            "src": "8505:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondedECDSAKeepFactory_$2471",
                              "typeString": "contract BondedECDSAKeepFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondedECDSAKeepFactory_$2471",
                              "typeString": "contract BondedECDSAKeepFactory"
                            }
                          ],
                          "id": 2313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8497:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 2315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8497:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2299,
                            "name": "keepAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2204,
                            "src": "8262:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2298,
                          "name": "BondedECDSAKeep",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2057,
                          "src": "8246:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_BondedECDSAKeep_$2057_$",
                            "typeString": "type(contract BondedECDSAKeep)"
                          }
                        },
                        "id": 2300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8246:28:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondedECDSAKeep_$2057",
                          "typeString": "contract BondedECDSAKeep"
                        }
                      },
                      "id": 2301,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1937,
                      "src": "8246:39:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_address_$_t_address_payable_$returns$__$",
                        "typeString": "function (address,address[] memory,uint256,uint256,uint256,address,address,address payable) external"
                      }
                    },
                    "id": 2316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8246:274:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2317,
                  "nodeType": "ExpressionStatement",
                  "src": "8246:274:3"
                },
                {
                  "body": {
                    "id": 2342,
                    "nodeType": "Block",
                    "src": "8572:206:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 2331,
                                "name": "members",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2277,
                                "src": "8626:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 2333,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 2332,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2319,
                                "src": "8634:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8626:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 2334,
                              "name": "keepAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2204,
                              "src": "8654:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 2336,
                                  "name": "keepAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2204,
                                  "src": "8691:11:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2335,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8683:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": "uint256"
                              },
                              "id": 2337,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8683:20:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 2338,
                              "name": "memberBond",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2246,
                              "src": "8721:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 2339,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2240,
                              "src": "8749:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2328,
                              "name": "keepBonding",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2110,
                              "src": "8586:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_KeepBonding_$4933",
                                "typeString": "contract KeepBonding"
                              }
                            },
                            "id": 2330,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "createBond",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1467,
                            "src": "8586:22:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (address,address,uint256,uint256,address) external"
                            }
                          },
                          "id": 2340,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8586:181:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2341,
                        "nodeType": "ExpressionStatement",
                        "src": "8586:181:3"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2322,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2319,
                      "src": "8551:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 2323,
                      "name": "_groupSize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2191,
                      "src": "8555:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8551:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2343,
                  "initializationExpression": {
                    "assignments": [
                      2319
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2319,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 2343,
                        "src": "8536:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2318,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8536:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 2321,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2320,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8548:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "8536:13:3"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 2326,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "8567:3:3",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 2325,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2319,
                        "src": "8567:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2327,
                    "nodeType": "ExpressionStatement",
                    "src": "8567:3:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "8531:247:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2345,
                        "name": "keepAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2204,
                        "src": "8829:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2346,
                        "name": "members",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2277,
                        "src": "8854:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2347,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2195,
                        "src": "8875:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2348,
                        "name": "application",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2235,
                        "src": "8895:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2349,
                        "name": "_honestThreshold",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2193,
                        "src": "8920:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2344,
                      "name": "BondedECDSAKeepCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2104,
                      "src": "8793:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address[] memory,address,address,uint256)"
                      }
                    },
                    "id": 2350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8793:153:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2351,
                  "nodeType": "EmitStatement",
                  "src": "8788:158:3"
                }
              ]
            },
            "documentation": "@notice Opens a new ECDSA keep.\n @dev Selects a list of signers for the keep based on provided parameters.\n A caller of this function is expected to be an application for which\n member candidates were registered in a pool.\n @param _groupSize Number of signers in the keep.\n @param _honestThreshold Minimum number of honest keep signers.\n @param _owner Address of the keep owner.\n @param _bond Value of ETH bond required from the keep in wei.\n @param _stakeLockDuration Stake lock duration in seconds.\n @return Created keep address.",
            "id": 2353,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2202,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2201,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 22432,
                  "src": "6773:12:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6773:12:3"
              }
            ],
            "name": "openKeep",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2200,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2191,
                  "name": "_groupSize",
                  "nodeType": "VariableDeclaration",
                  "scope": 2353,
                  "src": "6614:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2190,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6614:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2193,
                  "name": "_honestThreshold",
                  "nodeType": "VariableDeclaration",
                  "scope": 2353,
                  "src": "6642:24:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2192,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6642:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2195,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 2353,
                  "src": "6676:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2194,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6676:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2197,
                  "name": "_bond",
                  "nodeType": "VariableDeclaration",
                  "scope": 2353,
                  "src": "6700:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2196,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6700:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2199,
                  "name": "_stakeLockDuration",
                  "nodeType": "VariableDeclaration",
                  "scope": 2353,
                  "src": "6723:26:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2198,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6723:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6604:151:3"
            },
            "returnParameters": {
              "id": 2205,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2204,
                  "name": "keepAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2353,
                  "src": "6795:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2203,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6795:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6794:21:3"
            },
            "scope": 2471,
            "src": "6587:2366:3",
            "stateMutability": "payable",
            "superFunction": 5727,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2366,
              "nodeType": "Block",
              "src": "9436:77:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2360,
                        "name": "keepOpenedTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4947,
                        "src": "9453:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2362,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2361,
                        "name": "_delegatedAuthorityRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2355,
                        "src": "9473:28:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9453:49:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2363,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9505:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9453:53:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2359,
                  "id": 2365,
                  "nodeType": "Return",
                  "src": "9446:60:3"
                }
              ]
            },
            "documentation": "@notice Verifies if delegates authority recipient is valid address recognized\n by the factory for token staking authority delegation.\n @param _delegatedAuthorityRecipient Address of the delegated authority\n recipient.\n @return True if provided address is recognized delegated token staking\n authority for this factory contract.",
            "id": 2367,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__isRecognized",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2356,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2355,
                  "name": "_delegatedAuthorityRecipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 2367,
                  "src": "9354:36:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2354,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9354:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9353:38:3"
            },
            "returnParameters": {
              "id": 2359,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2358,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2367,
                  "src": "9426:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2357,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9426:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9425:6:3"
            },
            "scope": 2471,
            "src": "9330:183:3",
            "stateMutability": "nonpayable",
            "superFunction": 8038,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2375,
              "nodeType": "Block",
              "src": "9674:45:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2372,
                      "name": "newEntryFeeEstimate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4635,
                      "src": "9691:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 2373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9691:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2371,
                  "id": 2374,
                  "nodeType": "Return",
                  "src": "9684:28:3"
                }
              ]
            },
            "documentation": "@notice Gets a fee estimate for opening a new keep.\n @return Uint256 estimate.",
            "id": 2376,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "openKeepFeeEstimate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2368,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9641:2:3"
            },
            "returnParameters": {
              "id": 2371,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2370,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2376,
                  "src": "9665:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2369,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9665:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9664:9:3"
            },
            "scope": 2471,
            "src": "9613:106:3",
            "stateMutability": "view",
            "superFunction": 5732,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2391,
              "nodeType": "Block",
              "src": "10356:78:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2385,
                        "name": "_operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2378,
                        "src": "10402:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2387,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22584,
                            "src": "10421:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondedECDSAKeepFactory_$2471",
                              "typeString": "contract BondedECDSAKeepFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondedECDSAKeepFactory_$2471",
                              "typeString": "contract BondedECDSAKeepFactory"
                            }
                          ],
                          "id": 2386,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10413:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 2388,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10413:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2383,
                        "name": "tokenStaking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2108,
                        "src": "10373:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenStaking_$14180",
                          "typeString": "contract TokenStaking"
                        }
                      },
                      "id": 2384,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "hasMinimumStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14041,
                      "src": "10373:28:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address,address) view external returns (bool)"
                      }
                    },
                    "id": 2389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10373:54:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2382,
                  "id": 2390,
                  "nodeType": "Return",
                  "src": "10366:61:3"
                }
              ]
            },
            "documentation": "@notice Checks if the specified account has enough active stake to become\n network operator and that this contract has been authorized for potential\n slashing.\n\n    /// Having the required minimum of active stake makes the operator eligible\n to join the network. If the active stake is not currently undelegating,\n operator is also eligible for work selection.\n\n    /// @param _operator operator's address\n @return True if has enough active stake to participate in the network,\n false otherwise.",
            "id": 2392,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "hasMinimumStake",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2379,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2378,
                  "name": "_operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 2392,
                  "src": "10310:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2377,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10310:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10309:19:3"
            },
            "returnParameters": {
              "id": 2382,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2381,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2392,
                  "src": "10350:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2380,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10350:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10349:6:3"
            },
            "scope": 2471,
            "src": "10285:149:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2407,
              "nodeType": "Block",
              "src": "10873:86:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2401,
                        "name": "_operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2394,
                        "src": "10927:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2403,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22584,
                            "src": "10946:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondedECDSAKeepFactory_$2471",
                              "typeString": "contract BondedECDSAKeepFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondedECDSAKeepFactory_$2471",
                              "typeString": "contract BondedECDSAKeepFactory"
                            }
                          ],
                          "id": 2402,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10938:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 2404,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10938:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2399,
                        "name": "tokenStaking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2108,
                        "src": "10890:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenStaking_$14180",
                          "typeString": "contract TokenStaking"
                        }
                      },
                      "id": 2400,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isAuthorizedForOperator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8147,
                      "src": "10890:36:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address,address) view external returns (bool)"
                      }
                    },
                    "id": 2405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10890:62:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2398,
                  "id": 2406,
                  "nodeType": "Return",
                  "src": "10883:69:3"
                }
              ]
            },
            "documentation": "@notice Checks if the factory has the authorization to operate on stake\n represented by the provided operator.\n\n    /// @param _operator operator's address\n @return True if the factory has access to the staked token balance of\n the provided operator and can slash that stake. False otherwise.",
            "id": 2408,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isOperatorAuthorized",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2395,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2394,
                  "name": "_operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 2408,
                  "src": "10799:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2393,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10799:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10798:19:3"
            },
            "returnParameters": {
              "id": 2398,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2397,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2408,
                  "src": "10863:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2396,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10863:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10862:6:3"
            },
            "scope": 2471,
            "src": "10769:190:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2420,
              "nodeType": "Block",
              "src": "11244:57:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2417,
                        "name": "_operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2410,
                        "src": "11284:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2415,
                        "name": "tokenStaking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2108,
                        "src": "11261:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenStaking_$14180",
                          "typeString": "contract TokenStaking"
                        }
                      },
                      "id": 2416,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11140,
                      "src": "11261:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 2418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11261:33:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2414,
                  "id": 2419,
                  "nodeType": "Return",
                  "src": "11254:40:3"
                }
              ]
            },
            "documentation": "@notice Gets the stake balance of the specified operator.\n @param _operator The operator to query the balance of.\n @return An uint256 representing the amount staked by the passed operator.",
            "id": 2421,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2411,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2410,
                  "name": "_operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 2421,
                  "src": "11195:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2409,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11195:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11194:19:3"
            },
            "returnParameters": {
              "id": 2414,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2413,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2421,
                  "src": "11235:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2412,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11235:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11234:9:3"
            },
            "scope": 2471,
            "src": "11176:125:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2447,
              "nodeType": "Block",
              "src": "11382:301:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 2432,
                                "name": "tokenStaking",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2108,
                                "src": "11486:12:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TokenStaking_$14180",
                                  "typeString": "contract TokenStaking"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TokenStaking_$14180",
                                  "typeString": "contract TokenStaking"
                                }
                              ],
                              "id": 2431,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11478:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 2433,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11478:21:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2430,
                          "name": "IStaking",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20975,
                          "src": "11469:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IStaking_$20975_$",
                            "typeString": "type(contract IStaking)"
                          }
                        },
                        "id": 2434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11469:31:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStaking_$20975",
                          "typeString": "contract IStaking"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 2437,
                                "name": "keepBonding",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2110,
                                "src": "11535:11:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_KeepBonding_$4933",
                                  "typeString": "contract KeepBonding"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_KeepBonding_$4933",
                                  "typeString": "contract KeepBonding"
                                }
                              ],
                              "id": 2436,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11527:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 2438,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11527:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2435,
                          "name": "IBonding",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20948,
                          "src": "11518:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IBonding_$20948_$",
                            "typeString": "type(contract IBonding)"
                          }
                        },
                        "id": 2439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11518:30:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBonding_$20948",
                          "typeString": "contract IBonding"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 2440,
                            "name": "tokenStaking",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2108,
                            "src": "11566:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenStaking_$14180",
                              "typeString": "contract TokenStaking"
                            }
                          },
                          "id": 2441,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "minimumStake",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12910,
                          "src": "11566:25:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 2442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11566:27:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2443,
                        "name": "minimumBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2113,
                        "src": "11611:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2444,
                        "name": "poolStakeWeightDivisor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2116,
                        "src": "11640:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IStaking_$20975",
                          "typeString": "contract IStaking"
                        },
                        {
                          "typeIdentifier": "t_contract$_IBonding_$20948",
                          "typeString": "contract IBonding"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2428,
                        "name": "sortitionPoolFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2106,
                        "src": "11411:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondedSortitionPoolFactory_$18131",
                          "typeString": "contract BondedSortitionPoolFactory"
                        }
                      },
                      "id": 2429,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createSortitionPool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18130,
                      "src": "11411:40:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IStaking_$20975_$_t_contract$_IBonding_$20948_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (contract IStaking,contract IBonding,uint256,uint256,uint256) external returns (address)"
                      }
                    },
                    "id": 2445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11411:265:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 2427,
                  "id": 2446,
                  "nodeType": "Return",
                  "src": "11392:284:3"
                }
              ]
            },
            "documentation": null,
            "id": 2448,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "newSortitionPool",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2424,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2423,
                  "name": "_application",
                  "nodeType": "VariableDeclaration",
                  "scope": 2448,
                  "src": "11333:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2422,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11333:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11332:22:3"
            },
            "returnParameters": {
              "id": 2427,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2426,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2448,
                  "src": "11373:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2425,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11373:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11372:9:3"
            },
            "scope": 2471,
            "src": "11307:376:3",
            "stateMutability": "nonpayable",
            "superFunction": 3380,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2469,
              "nodeType": "Block",
              "src": "12081:413:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2466,
                        "name": "_groupSize",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2452,
                        "src": "12476:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "31",
                                "id": 2462,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12468:1:3",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 2459,
                                    "name": "_groupSize",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2452,
                                    "src": "12452:10:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 2457,
                                    "name": "_keepBond",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2450,
                                    "src": "12438:9:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2458,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "add",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 21363,
                                  "src": "12438:13:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 2460,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12438:25:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2461,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 21388,
                              "src": "12438:29:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 2463,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12438:32:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 2464,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "12437:34:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 2465,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21447,
                      "src": "12437:38:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 2467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12437:50:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2456,
                  "id": 2468,
                  "nodeType": "Return",
                  "src": "12430:57:3"
                }
              ]
            },
            "documentation": "@notice Calculates bond requirement per member performing the necessary\n rounding.\n @param _keepBond The bond required from a keep.\n @param _groupSize Number of signers in the keep.\n @return Bond value required from each keep member.",
            "id": 2470,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "bondPerMember",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2453,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2450,
                  "name": "_keepBond",
                  "nodeType": "VariableDeclaration",
                  "scope": 2470,
                  "src": "11982:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2449,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11982:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2452,
                  "name": "_groupSize",
                  "nodeType": "VariableDeclaration",
                  "scope": 2470,
                  "src": "12001:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2451,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12001:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11981:39:3"
            },
            "returnParameters": {
              "id": 2456,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2455,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2470,
                  "src": "12068:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2454,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12068:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12067:9:3"
            },
            "scope": 2471,
            "src": "11959:535:3",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 2472,
        "src": "3021:9475:3"
      }
    ],
    "src": "1837:10660:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {
    "31": {
      "events": {
        "0x7c030f3f8c902fa5a59193f1e3c08ae7245fc0e3b7ab290b6a9548a57a46ac60": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "keepAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address[]",
              "name": "members",
              "type": "address[]"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "application",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "honestThreshold",
              "type": "uint256"
            }
          ],
          "name": "BondedECDSAKeepCreated",
          "type": "event",
          "signature": "0x7c030f3f8c902fa5a59193f1e3c08ae7245fc0e3b7ab290b6a9548a57a46ac60"
        },
        "0x693c68cd964926544cbaee02b00d9352aa98c6de2484515e8bd74130c005e6af": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "application",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "sortitionPool",
              "type": "address"
            }
          ],
          "name": "SortitionPoolCreated",
          "type": "event",
          "signature": "0x693c68cd964926544cbaee02b00d9352aa98c6de2484515e8bd74130c005e6af"
        }
      },
      "links": {},
      "address": "0xd91f6705fae8e903a98c2A08Fa51fb5AA55c92a6",
      "transactionHash": "0x9680a5acf86052cf6fb6941bce58448c92d5ca38d3698f64bc6de79eb9b4cc68"
    }
  },
  "schemaVersion": "3.0.22",
  "updatedAt": "2021-02-01T13:36:19.406Z",
  "networkType": "ethereum",
  "devdoc": {
    "details": "We avoid redeployment of bonded ECDSA keep contract by using the clone factory. Proxy delegates calls to sortition pool and therefore does not affect contract's state. This means that we only need to deploy the bonded ECDSA keep contract once. The factory provides clean state for every new bonded ECDSA keep clone.",
    "methods": {
      "__beaconCallback(uint256)": {
        "details": "The function is expected to be called in a callback by the random beacon.",
        "params": {
          "_relayEntry": "Beacon output."
        }
      },
      "__isRecognized(address)": {
        "params": {
          "_delegatedAuthorityRecipient": "Address of the delegated authority recipient."
        },
        "return": "True if provided address is recognized delegated token staking authority for this factory contract."
      },
      "balanceOf(address)": {
        "params": {
          "_operator": "The operator to query the balance of."
        },
        "return": "An uint256 representing the amount staked by the passed operator."
      },
      "createSortitionPool(address)": {
        "details": "Emits an event after sortition pool creation.",
        "params": {
          "_application": "Address of the application."
        },
        "return": "Address of the created sortition pool contract."
      },
      "getKeepAtIndex(uint256)": {
        "return": "The address of the keep at the given index."
      },
      "getKeepCount()": {
        "details": "Checks the size of the keeps array.",
        "return": "The number of keeps opened so far."
      },
      "getKeepOpenedTimestamp(address)": {
        "return": "Timestamp the given keep was opened at or 0 if this keep was not created by this factory."
      },
      "getSortitionPool(address)": {
        "details": "Reverts if sortition does not exist for the application.",
        "params": {
          "_application": "Address of the application."
        },
        "return": "Address of the sortition pool contract."
      },
      "getSortitionPoolWeight(address)": {
        "details": "Reverts if sortition does not exits for the application.",
        "params": {
          "_application": "Address of the application."
        },
        "return": "The sum of all registered operators' weights in the pool. Reverts if sortition pool for the application does not exist."
      },
      "hasMinimumStake(address)": {
        "params": {
          "_operator": "operator's address"
        },
        "return": "True if has enough active stake to participate in the network, false otherwise."
      },
      "isOperatorAuthorized(address)": {
        "params": {
          "_operator": "operator's address"
        },
        "return": "True if the factory has access to the staked token balance of the provided operator and can slash that stake. False otherwise."
      },
      "isOperatorEligible(address,address)": {
        "params": {
          "_application": "Customer application address.",
          "_operator": "Operator's address."
        }
      },
      "isOperatorRegistered(address,address)": {
        "params": {
          "_application": "Customer application address.",
          "_operator": "Operator's address."
        },
        "return": "True if operator is already registered in the candidates pool, false otherwise."
      },
      "isOperatorUpToDate(address,address)": {
        "params": {
          "_application": "Customer application address.",
          "_operator": "Operator's address."
        }
      },
      "newEntryFeeEstimate()": {
        "return": "Uint256 estimate."
      },
      "openKeep(uint256,uint256,address,uint256,uint256)": {
        "details": "Selects a list of signers for the keep based on provided parameters. A caller of this function is expected to be an application for which member candidates were registered in a pool.",
        "params": {
          "_bond": "Value of ETH bond required from the keep in wei.",
          "_groupSize": "Number of signers in the keep.",
          "_honestThreshold": "Minimum number of honest keep signers.",
          "_owner": "Address of the keep owner.",
          "_stakeLockDuration": "Stake lock duration in seconds."
        },
        "return": "Created keep address."
      },
      "openKeepFeeEstimate()": {
        "return": "Uint256 estimate."
      },
      "registerMemberCandidate(address)": {
        "details": "If caller is already registered it returns without any changes.",
        "params": {
          "_application": "Address of the application."
        }
      },
      "setMinimumBondableValue(uint256,uint256,uint256)": {
        "params": {
          "_groupSize": "Number of signers in the keep.",
          "_honestThreshold": "Minimum number of honest keep signers.",
          "_minimumBondableValue": "The minimum bond value the application requires from a single keep."
        }
      },
      "updateOperatorStatus(address,address)": {
        "params": {
          "_application": "Customer application address.",
          "_operator": "Operator's address."
        }
      }
    },
    "title": "Bonded ECDSA Keep Factory"
  },
  "userdoc": {
    "methods": {
      "__beaconCallback(uint256)": {
        "notice": "Sets a new group selection seed value."
      },
      "__isRecognized(address)": {
        "notice": "Verifies if delegates authority recipient is valid address recognized by the factory for token staking authority delegation."
      },
      "balanceOf(address)": {
        "notice": "Gets the stake balance of the specified operator."
      },
      "createSortitionPool(address)": {
        "notice": "Creates new sortition pool for the application."
      },
      "getKeepAtIndex(uint256)": {
        "notice": "Gets a specific keep address at a given index."
      },
      "getKeepCount()": {
        "notice": "Gets how many keeps have been opened by this contract."
      },
      "getKeepOpenedTimestamp(address)": {
        "notice": "Gets the opened timestamp of the given keep."
      },
      "getSortitionPool(address)": {
        "notice": "Gets the sortition pool address for the given application."
      },
      "getSortitionPoolWeight(address)": {
        "notice": "Gets the total weight of operators in the sortition pool for the given application."
      },
      "hasMinimumStake(address)": {
        "notice": "Checks if the specified account has enough active stake to become network operator and that this contract has been authorized for potential slashing.     /// Having the required minimum of active stake makes the operator eligible to join the network. If the active stake is not currently undelegating, operator is also eligible for work selection. "
      },
      "isOperatorAuthorized(address)": {
        "notice": "Checks if the factory has the authorization to operate on stake represented by the provided operator. "
      },
      "isOperatorEligible(address,address)": {
        "notice": "Checks if given operator is eligible for the given application."
      },
      "isOperatorRegistered(address,address)": {
        "notice": "Checks if operator is registered as a candidate for the given customer application."
      },
      "isOperatorUpToDate(address,address)": {
        "notice": "Checks if operator's details in the member candidates pool are up to date for the given application. If not update operator status function should be called by the one who is monitoring the status."
      },
      "newEntryFeeEstimate()": {
        "notice": "Gets a fee estimate for a new random entry."
      },
      "newGroupSelectionSeedFee()": {
        "notice": "Calculates the fee requestor has to pay to reseed the factory for signer selection. Depending on how much value is stored in the reseed pool and the price of a new relay entry, returned value may vary."
      },
      "openKeep(uint256,uint256,address,uint256,uint256)": {
        "notice": "Opens a new ECDSA keep."
      },
      "openKeepFeeEstimate()": {
        "notice": "Gets a fee estimate for opening a new keep."
      },
      "registerMemberCandidate(address)": {
        "notice": "Register caller as a candidate to be selected as keep member for the provided customer application."
      },
      "requestNewGroupSelectionSeed()": {
        "notice": "Reseeds the value used for a signer selection. Requires enough payment to be passed. The required payment can be calculated using reseedFee function. Factory is automatically triggering reseeding after opening a new keep but the reseed can be also triggered at any moment using this function."
      },
      "setMinimumBondableValue(uint256,uint256,uint256)": {
        "notice": "Sets the minimum bondable value required from the operator to join the sortition pool of the given application. It is up to the application to specify a reasonable minimum bond for operators trying to join the pool to prevent griefing by operators joining without enough bondable value."
      },
      "updateOperatorStatus(address,address)": {
        "notice": "Invokes update of operator's details in the member candidates pool for the given application"
      }
    },
    "notice": "Contract creating bonded ECDSA keeps."
  }
}