{
  "contractName": "KeepBonding",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "registryAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenStakingAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenGrantAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_bondTokenAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "holder",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sortitionPool",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "referenceID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "BondCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "referenceID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newHolder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newReferenceID",
          "type": "uint256"
        }
      ],
      "name": "BondReassigned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "referenceID",
          "type": "uint256"
        }
      ],
      "name": "BondReleased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "referenceID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "destination",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "BondSeized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "UnbondedValueDeposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "UnbondedValueWithdrawn",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_poolAddress",
          "type": "address"
        }
      ],
      "name": "authorizeSortitionPoolContract",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "bondCreator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "authorizedSortitionPool",
          "type": "address"
        }
      ],
      "name": "availableUnbondedValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "referenceID",
          "type": "uint256"
        }
      ],
      "name": "bondAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "bondTokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "referenceID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "authorizedSortitionPool",
          "type": "address"
        }
      ],
      "name": "createBond",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_poolAddress",
          "type": "address"
        }
      ],
      "name": "deauthorizeSortitionPoolContract",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_source",
          "type": "address"
        }
      ],
      "name": "depositFor",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "referenceID",
          "type": "uint256"
        }
      ],
      "name": "freeBond",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_poolAddress",
          "type": "address"
        }
      ],
      "name": "hasSecondaryAuthorization",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "referenceID",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "newHolder",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "newReferenceID",
          "type": "uint256"
        }
      ],
      "name": "reassignBond",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "referenceID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "destination",
          "type": "address"
        }
      ],
      "name": "seizeBond",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "unbondedValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "managedGrant",
          "type": "address"
        }
      ],
      "name": "withdrawAsManagedGrantee",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_operatorContract",
          "type": "address"
        }
      ],
      "name": "isAuthorizedForOperator",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "authorizerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "beneficiaryOf",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"registryAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenStakingAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenGrantAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_bondTokenAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sortitionPool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"referenceID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BondCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"referenceID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newHolder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newReferenceID\",\"type\":\"uint256\"}],\"name\":\"BondReassigned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"referenceID\",\"type\":\"uint256\"}],\"name\":\"BondReleased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"referenceID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BondSeized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"UnbondedValueDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"UnbondedValueWithdrawn\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_poolAddress\",\"type\":\"address\"}],\"name\":\"authorizeSortitionPoolContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"authorizerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"bondCreator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"authorizedSortitionPool\",\"type\":\"address\"}],\"name\":\"availableUnbondedValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"beneficiaryOf\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"referenceID\",\"type\":\"uint256\"}],\"name\":\"bondAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bondTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"referenceID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"authorizedSortitionPool\",\"type\":\"address\"}],\"name\":\"createBond\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_poolAddress\",\"type\":\"address\"}],\"name\":\"deauthorizeSortitionPoolContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_source\",\"type\":\"address\"}],\"name\":\"depositFor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"referenceID\",\"type\":\"uint256\"}],\"name\":\"freeBond\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_poolAddress\",\"type\":\"address\"}],\"name\":\"hasSecondaryAuthorization\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operatorContract\",\"type\":\"address\"}],\"name\":\"isAuthorizedForOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"referenceID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newHolder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newReferenceID\",\"type\":\"uint256\"}],\"name\":\"reassignBond\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"referenceID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"seizeBond\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"unbondedValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"managedGrant\",\"type\":\"address\"}],\"name\":\"withdrawAsManagedGrantee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"authorizeSortitionPoolContract(address,address)\":{\"details\":\"Only operator's authorizer can call this function.\"},\"availableUnbondedValue(address,address,address)\":{\"details\":\"Implements function expected by sortition pools' IBonding interface.\",\"params\":{\"authorizedSortitionPool\":\"Address of authorized sortition pool.\",\"bondCreator\":\"Address authorized to create a bond.\",\"operator\":\"Address of the operator.\"},\"return\":\"Amount of authorized wei deposit available for bonding.\"},\"bondAmount(address,address,uint256)\":{\"params\":{\"holder\":\"Address of the holder of the bond.\",\"operator\":\"Address of the operator.\",\"referenceID\":\"Reference ID of the bond.\"},\"return\":\"Amount of wei in the selected bond.\"},\"constructor\":{\"params\":{\"registryAddress\":\"Keep registry contract address.\",\"tokenGrantAddress\":\"KEEP token grant contract address.\",\"tokenStakingAddress\":\"KEEP token staking contract address.\"}},\"createBond(address,address,uint256,uint256,address)\":{\"details\":\"Function can be executed only by authorized contract. Reference ID should be unique for holder and operator.\",\"params\":{\"amount\":\"Value to bond in wei.\",\"authorizedSortitionPool\":\"Address of authorized sortition pool.\",\"holder\":\"Address of the holder of the bond.\",\"operator\":\"Address of the operator to bond.\",\"referenceID\":\"Reference ID used to track the bond by holder.\"}},\"deauthorizeSortitionPoolContract(address,address)\":{\"details\":\"Only operator's authorizer can call this function.\"},\"deposit(address,uint256)\":{\"params\":{\"operator\":\"Address of the operator.\"}},\"freeBond(address,uint256)\":{\"details\":\"Function requires that caller is the holder of the bond which is being released.\",\"params\":{\"operator\":\"Address of the bonded operator.\",\"referenceID\":\"Reference ID of the bond.\"}},\"hasSecondaryAuthorization(address,address)\":{\"details\":\"See authorizeSortitionPoolContract.\"},\"reassignBond(address,uint256,address,uint256)\":{\"details\":\"Function requires that a caller is the current holder of the bond which is being reassigned.\",\"params\":{\"newHolder\":\"Address of the new holder of the bond.\",\"newReferenceID\":\"New reference ID to register the bond.\",\"operator\":\"Address of the bonded operator.\",\"referenceID\":\"Reference ID of the bond.\"}},\"seizeBond(address,uint256,uint256,address)\":{\"details\":\"Function requires that a caller is the holder of the bond which is being seized.\",\"params\":{\"amount\":\"Amount to be seized.\",\"destination\":\"Address to send the amount to.\",\"operator\":\"Address of the bonded operator.\",\"referenceID\":\"Reference ID of the bond.\"}},\"withdraw(uint256,address)\":{\"params\":{\"amount\":\"Value to withdraw in wei.\",\"operator\":\"Address of the operator.\"}},\"withdrawAsManagedGrantee(uint256,address,address)\":{\"params\":{\"amount\":\"Value to withdraw in wei.\",\"managedGrant\":\"Address of the managed grant contract.\",\"operator\":\"Address of the operator.\"}}},\"title\":\"Keep Bonding\"},\"userdoc\":{\"methods\":{\"authorizeSortitionPoolContract(address,address)\":{\"notice\":\"Authorizes sortition pool for the provided operator. Operator's authorizers need to authorize individual sortition pools per application since they may be interested in participating only in a subset of keep types used by the given application.\"},\"availableUnbondedValue(address,address,address)\":{\"notice\":\"Returns the amount of wei the operator has made available for bonding and that is still unbounded. If the operator doesn't exist or bond creator is not authorized as an operator contract or it is not authorized by the operator or there is no secondary authorization for the provided sortition pool, function returns 0.\"},\"bondAmount(address,address,uint256)\":{\"notice\":\"Returns value of wei bonded for the operator.\"},\"constructor\":\"Initializes Keep Bonding contract.\",\"createBond(address,address,uint256,uint256,address)\":{\"notice\":\"Create bond for the given operator, holder, reference and amount.\"},\"deauthorizeSortitionPoolContract(address,address)\":{\"notice\":\"Deauthorizes sortition pool for the provided operator. Authorizer may deauthorize individual sortition pool in case the operator should no longer be eligible for work selection and the application represented by the sortition pool should no longer be eligible to create bonds for the operator.\"},\"deposit(address,uint256)\":{\"notice\":\"Add the provided value to operator's pool available for bonding.\"},\"freeBond(address,uint256)\":{\"notice\":\"Releases the bond and moves the bond value to the operator's unbounded value pool.\"},\"hasSecondaryAuthorization(address,address)\":{\"notice\":\"Checks if the sortition pool has been authorized for the provided operator by its authorizer.\"},\"reassignBond(address,uint256,address,uint256)\":{\"notice\":\"Reassigns a bond to a new holder under a new reference.\"},\"seizeBond(address,uint256,uint256,address)\":{\"notice\":\"Seizes the bond by moving some or all of the locked bond to the provided destination address.\"},\"withdraw(uint256,address)\":{\"notice\":\"Withdraws amount from operator's value available for bonding. Should not be used by grantee of managed grants. For this case, please use `withdrawAsManagedGrantee`.     /// This function can be called only by: - operator, - liquid, staked tokens owner (not a grant), - direct staked tokens grantee (not a managed grant). \"},\"withdrawAsManagedGrantee(uint256,address,address)\":{\"notice\":\"Withdraws amount from operator's value available for bonding. Can be called only by staked tokens managed grantee.\"}},\"notice\":\"Contract holding deposits from keeps' operators.\"}},\"settings\":{\"compilationTarget\":{\"/home/kowal/Projects/sovryn/keep-ecdsa/solidity/contracts/KeepBonding.sol\":\"KeepBonding\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/kowal/Projects/sovryn/keep-ecdsa/solidity/contracts/AbstractBonding.sol\":{\"keccak256\":\"0xfa1dc6ce7275597b41bf827cbaccba02356221fd4582043f4202a564283a8c94\",\"urls\":[\"bzz-raw://1467ee58821e268916c01214a60ba89a6c1f86552b6804c03e6a24ff8c2324fa\",\"dweb:/ipfs/QmPWHY2yazh7XfTnYCEwZBvoAShK7vkjCXGikMeE9UCaaG\"]},\"/home/kowal/Projects/sovryn/keep-ecdsa/solidity/contracts/KeepBonding.sol\":{\"keccak256\":\"0x9d735436f51788923fdb965c03f74ff9781e91351998f8f6335cfcd0b5547c3a\",\"urls\":[\"bzz-raw://d013bde0b2aeb22fb561540c17dc99efe2ff0fef0bd1b60672dfcbcd78a68d9b\",\"dweb:/ipfs/QmeWWdKv6z7QXNpzHAnFwcUUPWAcDeYiL6T7VeHtPYCepr\"]},\"/home/kowal/Projects/sovryn/keep-ecdsa/solidity/contracts/api/IBondingManagement.sol\":{\"keccak256\":\"0x00888f7edf918020ce70acf3ab6a17ff3d4b410a5413bf7ded1d3d5f21de1fb7\",\"urls\":[\"bzz-raw://a8e5989318021ed8866f03537c649c12fb75831859df5198028e5a4430494799\",\"dweb:/ipfs/QmWCPALgJvVfq3aveqEyRcquEckdeHFFbD7ATuraMAVaer\"]},\"@keep-network/keep-core/contracts/Authorizations.sol\":{\"keccak256\":\"0xd49b3840507c924cc37ac2da48bf1549013a79d84daf2cb106b4d4b9c6096e7a\",\"urls\":[\"bzz-raw://2b740d974564d027f9df04253f71ce2314839a682beac926b778e0f7ea59fbb5\",\"dweb:/ipfs/QmamRuiYLpt2fCUPrQypkvrf7BrCsdV12QgaSHQYPsJHT2\"]},\"@keep-network/keep-core/contracts/GrantStakingPolicy.sol\":{\"keccak256\":\"0x9d7604d5ccd4bf23b5aca39074183aabad98ce47bc74edd2023e7e0b1be6d1b5\",\"urls\":[\"bzz-raw://92fb21051ecfa9b9885b775c2cff1778cfbab3afe3b436e234a4f08181277983\",\"dweb:/ipfs/QmPxQUWpL6iFcydJxyFsZjmWRnxziPVA2rqrgwhn6F7Tfe\"]},\"@keep-network/keep-core/contracts/KeepRegistry.sol\":{\"keccak256\":\"0x723cf0ade28c4158935e6c22f1da1ee98252ad1bc1cac30fe8fa462fe36ea886\",\"urls\":[\"bzz-raw://6244a0370c42ae7bac430e646694d64b80397e02209ae9ec1e01776e6b5a49fc\",\"dweb:/ipfs/QmcygjqGFv81ZpyKTUwdMRt1VdnM9H6pGUuKAP5YLmL5U8\"]},\"@keep-network/keep-core/contracts/KeepToken.sol\":{\"keccak256\":\"0x50defd2a00e356ed8eaf9aba405719f567c2da0164db5cdeadd68d155f6ded3b\",\"urls\":[\"bzz-raw://dbc8fb24f311c2dc95a26b1a1dfc9c7d93c634d32ef623fc23f799da5988fafb\",\"dweb:/ipfs/QmShZ3FtP2WUC9r1rbka8BWSf6oFkBbuxgxiDqhpwxo6zZ\"]},\"@keep-network/keep-core/contracts/ManagedGrant.sol\":{\"keccak256\":\"0x47f1cccc9f9c095b34ca514ae25cc467bbced15251b06f39896e0237e7fdec7c\",\"urls\":[\"bzz-raw://cad43bec15804ff17bd40fdee3598676f716b60204da9be163f15f45135ad250\",\"dweb:/ipfs/QmYHYEfR2UPZJZpsDhN2o1iD7drVSz8oqbYQFVT4G2oKqr\"]},\"@keep-network/keep-core/contracts/StakeDelegatable.sol\":{\"keccak256\":\"0xa1d81d17bc9f6bcc5878fb9b8acfdf7797c1561bf35111bac6bdbc3bba2c62aa\",\"urls\":[\"bzz-raw://deca3e5444cd9a5546818854009f9ac8c8e58479609de1a128ca73863f10ae7a\",\"dweb:/ipfs/QmcWYJkcHxsmCEhxRz6W5gSBgH597VYZgEaog9pzoLyZtt\"]},\"@keep-network/keep-core/contracts/TokenGrant.sol\":{\"keccak256\":\"0xad97f1a667f3be66dc6904fb7925e940ca57e4c88d38ae960672d95d7911bf6f\",\"urls\":[\"bzz-raw://f3f6b377ddcc2ad2b47811f115c20bdf6a6a208066afaebe027ac4eb165ca231\",\"dweb:/ipfs/QmXNSkqCDoBS1KGQbQ3PqXr1iMPgkPNWLcEKiBrV8u5LeW\"]},\"@keep-network/keep-core/contracts/TokenGrantStake.sol\":{\"keccak256\":\"0x014bbb7f336388024480415391cad745ec52cd255cd2740c890948246ab4d524\",\"urls\":[\"bzz-raw://745d488e7271fe9c71879c09fd09eb96b2193346adfddbb59638b80610707be3\",\"dweb:/ipfs/QmR3DyUzhTjE971QovXxMchRkUD3eHUj5S73Eahrf2Wyw8\"]},\"@keep-network/keep-core/contracts/TokenSender.sol\":{\"keccak256\":\"0xe50a3a7d2f30e8801d8b608c462f65c868e17ff8b2f0db3448876adf0f288117\",\"urls\":[\"bzz-raw://f040546b183d26a9e26adfc01a6425eb6bce1cec1ab5b142aa360c8096ede385\",\"dweb:/ipfs/QmdRa8huRUmsTTvwnWPBF7V2gTQAGsGn3VFUeBfbisBszw\"]},\"@keep-network/keep-core/contracts/TokenStaking.sol\":{\"keccak256\":\"0x957a8b500117fd8c74466e9c2cfd13e295e5cd66107bda1e5fdea1871248d0e8\",\"urls\":[\"bzz-raw://c6cca24bbf724e77009cb683d1715b8ffb1faa7ad2089156d6fc8d600a397fd4\",\"dweb:/ipfs/QmeVnKTgFhfVSfEgCcoFD86MfGUB9FTD8cbi5SxX2Vmy67\"]},\"@keep-network/keep-core/contracts/TokenStakingEscrow.sol\":{\"keccak256\":\"0x152a565d564bee09ea3f0f363c912fe3361966bf8d60f14ebcb8bf593d3b140e\",\"urls\":[\"bzz-raw://78ffe4daadcfeacc49c45c4e9879f62c2df3bdd00587b033492ee901537976f1\",\"dweb:/ipfs/QmPwmSu4XF7KpHnC6bqBTkrkjA6CUnC8h5PML9DqkAzLW8\"]},\"@keep-network/keep-core/contracts/libraries/RolesLookup.sol\":{\"keccak256\":\"0x4622ccfb359f6478d3e87fb99f755dcebde1b5040662f3572ab8c8d50d2f8bc0\",\"urls\":[\"bzz-raw://cee3570c755b0a30412af08ce4663f85078b10a0eccf6808bec125897c7ead8e\",\"dweb:/ipfs/Qmc9EAjLfBYXfhtd24uNFzu1XKrPaqS5ismF4ZGsPyiBuU\"]},\"@keep-network/keep-core/contracts/libraries/grant/UnlockingSchedule.sol\":{\"keccak256\":\"0x26f8fe158e3f661bc54fc42a50a1686ef92dd18316a03592bafa2db6a2af9c3f\",\"urls\":[\"bzz-raw://718b4a48d7a50c151328cd15e91e9b9b4cba0db7f7b6b06533709614f9811a55\",\"dweb:/ipfs/QmYyTN6cLZiWumwE6jt2yDHNtc6DMCXaEntgKAN3zqp8yX\"]},\"@keep-network/keep-core/contracts/libraries/staking/GrantStaking.sol\":{\"keccak256\":\"0x96253ba2eb78b83a04dd48f0a7ff6083ca72d6e4a27dec0888959c1b3b0be9aa\",\"urls\":[\"bzz-raw://a2ad3ddeba9de2f24b1c1c0339baf52a0b0446248ddfc0554d8fb71ce2057c0f\",\"dweb:/ipfs/QmdYxpcxm8TG7i3qYswudhxvff8hnARSR1GsVcY2fjUpzh\"]},\"@keep-network/keep-core/contracts/libraries/staking/LockUtils.sol\":{\"keccak256\":\"0x0fbd9a4d82cf8803f00cb59cca9580d379c8d98a759b8a6d74f75f01c19fc635\",\"urls\":[\"bzz-raw://f2df931f0a11d4f63aa1f6193419606711a24ce7381dd15db52419c783dc7952\",\"dweb:/ipfs/QmRMGWSbfYPaxppBb7w2cQHpAwDc4T9MBmpZqU396i8hKK\"]},\"@keep-network/keep-core/contracts/libraries/staking/Locks.sol\":{\"keccak256\":\"0xf45306074f9e893646c21e53954891e29c8011887545d8bbbcab7ef74558b18a\",\"urls\":[\"bzz-raw://971d3c54afde9050e455e79ec42b28d86a101bec8afab30e22b1fa4bfc110cc4\",\"dweb:/ipfs/QmfGTvrbc8dJXaxsxAmZM6oU8AvP5V6C2PQ5JF3gCJC81m\"]},\"@keep-network/keep-core/contracts/libraries/staking/MinimumStakeSchedule.sol\":{\"keccak256\":\"0x31a399a918eba21f0002019a70b1b68c9610a5a4977fcd874b86d4965eb974c3\",\"urls\":[\"bzz-raw://acbe55a89d5e6f7b6d4add0764e7b47acbdc31afc0d5b1f211b45546d3a5cd6c\",\"dweb:/ipfs/QmcXSUaLV7d117ZvyMnRB3MVXVEGy62ccB5u6d8h1Sm792\"]},\"@keep-network/keep-core/contracts/libraries/staking/TopUps.sol\":{\"keccak256\":\"0xe3a3c8d5e542f4f8ac8fdab92de57081257e1c07288e0e592cfc27551085e07f\",\"urls\":[\"bzz-raw://4cffa006da7f76868bcca1d107be436f3cd83339ff76df79c3e92a029e7ad66a\",\"dweb:/ipfs/QmZ5AArQ3gKBeXqGwGnSH45BQZQpGvjuQ4LnNaarrLrdy5\"]},\"@keep-network/keep-core/contracts/utils/AddressArrayUtils.sol\":{\"keccak256\":\"0xfb546b43ffd00d565d8440b6d221f5f046222e95469e33044665a56e79fcde48\",\"urls\":[\"bzz-raw://1f947ef8956e26d564cffd73a4f0dcdb02db1d7a46774d4e8876328116f6b663\",\"dweb:/ipfs/QmYUpg3JhhkogsY5nnjyMg6TEwoqRzTkJAWdhQGSbYqMH3\"]},\"@keep-network/keep-core/contracts/utils/BytesLib.sol\":{\"keccak256\":\"0xf5c726e1c77dea37b9ea1edd9bc7b4eebfafe33ce766a2607eb37d7144e4d68c\",\"urls\":[\"bzz-raw://32f61bad1923d749aff36ad9f62929e603ed27832348ba58d44d01561339d761\",\"dweb:/ipfs/QmWvfwapwUr9SnnEWXdmpo4r2TtVPFJFSUBXKJQpLZkYp1\"]},\"@keep-network/keep-core/contracts/utils/OperatorParams.sol\":{\"keccak256\":\"0xc13cbf7a6ad4740a8ad6373229b20b66eb4cc3d7aa9870161765ab8197513ab7\",\"urls\":[\"bzz-raw://e8343bc058fcee610863777792a25608549d80e126a05d076481dedb48587565\",\"dweb:/ipfs/QmR8ztc4StcK4yw7QmXj2b9TtS3Qs1BERrqDLtPZmUiffS\"]},\"@keep-network/keep-core/contracts/utils/PercentUtils.sol\":{\"keccak256\":\"0x696b15997a739e6c47c5bc29e1f9023998bb188405221a6b337377bca4ab3f68\",\"urls\":[\"bzz-raw://e93e2287fe6b6e1c5cc45ebc92b9d682e19a5b1302e00cb037391da753282bbf\",\"dweb:/ipfs/QmRXmEopRWNaL7mvY5nTyNNob3EPHF67R6Nxhm3F4VsDoo\"]},\"@keep-network/sortition-pools/contracts/api/IBonding.sol\":{\"keccak256\":\"0xe62ea5302af749042e419ad1643f0e9788bbbefe82a5c5d0b3e77a4a5a4b241e\",\"urls\":[\"bzz-raw://3ac748582f07716200c2f500aee47a8c2a79c1144fe3454e112290906cb3dfbf\",\"dweb:/ipfs/QmdNqK1V25QB1asWyWJfsSAVxorTjBp8DXG5eXw71e31rM\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x4ccf2d7b51873db1ccfd54ca2adae5eac3b184f9699911ed4490438419f1c690\",\"urls\":[\"bzz-raw://d62d769b2219d5de39013093412623e624fa887f871826ea3bae6052ee893610\",\"dweb:/ipfs/QmV3yVktya1s617QmuzQR2CfuJgUi3dR2xEZY9ecmqZ2G1\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xf79fb10e8235770eb4aea7249034076a3cc9f9119ad944fc48705bae9c9d20dc\",\"urls\":[\"bzz-raw://cd3429aa9a4878dcf6c73faa32c3722f4013d4be012ece543b246faa6b50f55c\",\"dweb:/ipfs/QmS55hgTvNEAKinus19m65CB4wcymN8EiUPFpRx5tYJ1i2\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x852793a3c2f86d336a683b30d688ec3dcfc57451af5a2bf5975cda3b7191a901\",\"urls\":[\"bzz-raw://4f5b57664069671648fb81f55b0082faecdf1b2f159eec6b1fa6cef9b7d73bc5\",\"dweb:/ipfs/QmcyytaLs7zFdb4Uu7C5PmQRhQdB3wA3fUdkV6mkYfdDFH\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20Burnable.sol\":{\"keccak256\":\"0xa5ebf3344a36eb60e723e0764d85251c496e15e4b2d737b56415502b559a1765\",\"urls\":[\"bzz-raw://c543fd1fc299b7d32c658c86118ff2d0e7897a7c8b9d5f576fe6c0271c28961b\",\"dweb:/ipfs/QmNMrjLnsC4JP54aXLHhpra5NPTAs8rrd2bgXfYYYdJMhS\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol\":{\"keccak256\":\"0xc61b3603089b09a730d8ca72e9133a496cc4405da40e9b87c12f073245d774bf\",\"urls\":[\"bzz-raw://de8bb0003d53de236913f0e0102e7a9d015e02098f2495edd000f207fe2be2f4\",\"dweb:/ipfs/QmbtwNwAJEehWWL7yGGyyMoenQvcqtz91pqLgQPpLRoLYC\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x90e8c2521653bbb1768b05889c5760031e688d9cd361f167489b89215e201b95\",\"urls\":[\"bzz-raw://d0abb99bb8bfc2bc0a89902b8ed1dc0442ad08cc78cee64c291b3df6a27bcccc\",\"dweb:/ipfs/QmP5NaEwZthQeM2ESz4WTT3osrP7jhbvu7ocbttBi2JAw6\"]},\"openzeppelin-solidity/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xf6f89424e17870561dc23c5933c55c5726b66a68d51ad2a2c00c569a5f02f507\",\"urls\":[\"bzz-raw://005657a7ffbf6d12726ac0167b55be965dc473d43f061b605f883a54cc00ab4f\",\"dweb:/ipfs/QmaBzyvDQyNnn6DXQYewEtN9Go85orikSnW9PwNWqUGPEX\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0xf3358e5819ca73357abd6c90bdfffd0474af54364897f6b3e3234c4b71fbe9a1\",\"urls\":[\"bzz-raw://75ae8d04454d1511a2ed986cc8585736f05c5c25280683b3d24712a9f414a4bf\",\"dweb:/ipfs/Qmb3kNCoBUZdah1AgBBD4zMk898j5Qw8ahT1w5cCMYp5Y3\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101155760003560e01c806378f011c1116100a2578063c578617411610071578063c578617414610682578063c8820f6c146106e6578063d20a62fc14610754578063ef1f9661146107ec578063fb1677b11461086857610115565b806378f011c1146104bc5780637ab3cf9314610538578063972f245714610586578063ba7bffd3146105fe57610115565b806342bcb965116100e957806342bcb9651461028e578063446f0f9e1461032657806347e7ef24146103a85780635823cfad146103f65780635fcac8ff1461044e57610115565b8062f714ce1461011a5780630b102471146101685780630cb0a677146101cc5780631133fd2c14610244575b600080fd5b6101666004803603604081101561013057600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108ec565b005b6101ca6004803603604081101561017e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a26565b005b610242600480360360808110156101e257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b68565b005b61024c610ef4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610310600480360360608110156102a457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f19565b6040518082815260200191505060405180910390f35b6103926004803603606081101561033c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611071565b6040518082815260200191505060405180910390f35b6103f4600480360360408110156103be57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611129565b005b6104386004803603602081101561040c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061153a565b6040518082815260200191505060405180910390f35b6104ba6004803603606081101561046457600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611552565b005b61051e600480360360408110156104d257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611605565b604051808215151515815260200191505060405180910390f35b6105846004803603604081101561054e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611699565b005b6105fc6004803603608081101561059c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506118d1565b005b6106406004803603602081101561061457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611bcd565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6106e46004803603604081101561069857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611cb0565b005b610752600480360360608110156106fc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611df2565b005b6107ea600480360360a081101561076a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612204565b005b61084e6004803603604081101561080257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506124e7565b604051808215151515815260200191505060405180910390f35b6108aa6004803603602081101561087e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506125ff565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061096f575061096e81600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff166126e29092919063ffffffff16565b5b806109c357506109c281600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff166127d39092919063ffffffff16565b5b610a18576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260368152602001806131456036913960400191505060405180910390fd5b610a228282612948565b5050565b3373ffffffffffffffffffffffffffffffffffffffff16610a46836125ff565b73ffffffffffffffffffffffffffffffffffffffff1614610acf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f4e6f7420617574686f72697a656400000000000000000000000000000000000081525060200191505060405180910390fd5b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008211610bc1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180613119602c913960400191505060405180910390fd5b60003390506000858286604051602001808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b81526014018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b815260140182815260200193505050506040516020818303038152906040528051906020012090508360036000838152602001908152602001600020541015610ccb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806130c86029913960400191505060405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050610d17856003600085815260200190815260200160002054612c6a90919063ffffffff16565b600360008481526020019081526020016000208190555060008173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb86886040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610db757600080fd5b505af1158015610dcb573d6000803e3d6000fd5b505050506040513d6020811015610de157600080fd5b8101908080519060200190929190505050905080610e67576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f5472616e73666572206661696c6564000000000000000000000000000000000081525060200191505060405180910390fd5b868873ffffffffffffffffffffffffffffffffffffffff167ff8e947b47b515d01aa96426822ddcf23a08f42d8c2dbfd65e674ba824f5513828789604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a35050505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166384d57689846040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610fba57600080fd5b505afa158015610fce573d6000803e3d6000fd5b505050506040513d6020811015610fe457600080fd5b81019080805190602001909291905050508015611007575061100684846124e7565b5b801561101957506110188483611605565b5b1561106557600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905061106a565b600090505b9392505050565b600080848484604051602001808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b81526014018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b8152601401828152602001935050505060405160208183030381529060405280519060200120905060036000828152602001908152602001600020549150509392505050565b600061113483611bcd565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156111bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001806130a06028913960400191505060405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050828173ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e86306040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b15801561129457600080fd5b505afa1580156112a8573d6000803e3d6000fd5b505050506040513d60208110156112be57600080fd5b81019080805190602001909291905050501015611343576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f416c6c6f77616e636520697320746f6f206c6f7700000000000000000000000081525060200191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166323b872dd8530866040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1580156113fe57600080fd5b505af1158015611412573d6000803e3d6000fd5b505050506040513d602081101561142857600080fd5b81019080805190602001909291905050505061148c83600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612cf390919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167ffd586a32ad24d585b1f7b36ee48e66304ad7627b48b39a0ab1d8a3e84741ea2a856040518082815260200191505060405180910390a350505050565b60026020528060005260406000206000915090505481565b6115a18282600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16612d7b909392919063ffffffff16565b6115f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001806130f16028913960400191505060405180910390fd5b6116008383612948565b505050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60003390506000838284604051602001808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b81526014018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b8152601401828152602001935050505060405160208183030381529060405280519060200120905060006003600083815260200190815260200160002054116117c0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f426f6e64206e6f7420666f756e6400000000000000000000000000000000000081525060200191505060405180910390fd5b6000600360008381526020019081526020016000205490506000600360008481526020019081526020016000208190555061184381600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612cf390919063ffffffff16565b600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550838573ffffffffffffffffffffffffffffffffffffffff167f60b8ef4216791426b3d7acfb0b6d11a400872350afd70a3ce5ebf62bea7cb0d460405160405180910390a35050505050565b60003390506000858286604051602001808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b81526014018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b8152601401828152602001935050505060405160208183030381529060405280519060200120905060006003600083815260200190815260200160002054116119f8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f426f6e64206e6f7420666f756e6400000000000000000000000000000000000081525060200191505060405180910390fd5b6000868585604051602001808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b81526014018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b815260140182815260200193505050506040516020818303038152906040528051906020012090506000600360008381526020019081526020016000205414611afd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180613071602f913960400191505060405180910390fd5b6003600083815260200190815260200160002054600360008381526020019081526020016000208190555060006003600084815260200190815260200160002081905550858773ffffffffffffffffffffffffffffffffffffffff167fb1d917176802bfbc813f2d82e745526029a4ccf0ea98d14e7a09a08703595b1e8787604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a350505050505050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ba7bffd3836040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015611c6e57600080fd5b505afa158015611c82573d6000803e3d6000fd5b505050506040513d6020811015611c9857600080fd5b81019080805190602001909291905050509050919050565b3373ffffffffffffffffffffffffffffffffffffffff16611cd0836125ff565b73ffffffffffffffffffffffffffffffffffffffff1614611d59576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f4e6f7420617574686f72697a656400000000000000000000000000000000000081525060200191505060405180910390fd5b6001600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6000611dfd84611bcd565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611e85576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001806130a06028913960400191505060405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050838173ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e85306040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b158015611f5d57600080fd5b505afa158015611f71573d6000803e3d6000fd5b505050506040513d6020811015611f8757600080fd5b8101908080519060200190929190505050101561200c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f416c6c6f77616e6365206f66205f736f7572636520697320746f6f206c6f770081525060200191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166323b872dd8430876040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1580156120c757600080fd5b505af11580156120db573d6000803e3d6000fd5b505050506040513d60208110156120f157600080fd5b81019080805190602001909291905050505061215584600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612cf390919063ffffffff16565b600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167ffd586a32ad24d585b1f7b36ee48e66304ad7627b48b39a0ab1d8a3e84741ea2a866040518082815260200191505060405180910390a35050505050565b81612210863384610f19565b1015612284576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f496e73756666696369656e7420756e626f6e6465642076616c7565000000000081525060200191505060405180910390fd5b6000858585604051602001808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b81526014018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b815260140182815260200193505050506040516020818303038152906040528051906020012090506000600360008381526020019081526020016000205414612389576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180613071602f913960400191505060405180910390fd5b6123db83600260008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612c6a90919063ffffffff16565b600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612444836003600084815260200190815260200160002054612cf390919063ffffffff16565b60036000838152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fa5543d8e139d9ab4342d5c4f6ec1bff5a97f9a52d71f7ffe9845b94f1449fc918787604051808381526020018281526020019250505060405180910390a4505050505050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ef1f966184846040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b1580156125bc57600080fd5b505afa1580156125d0573d6000803e3d6000fd5b505050506040513d60208110156125e657600080fd5b8101908080519060200190929190505050905092915050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fb1677b1836040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156126a057600080fd5b505afa1580156126b4573d6000803e3d6000fd5b505050506040513d60208110156126ca57600080fd5b81019080805190602001909291905050509050919050565b60008373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff166314afd79e856040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561277857600080fd5b505afa15801561278c573d6000803e3d6000fd5b505050506040513d60208110156127a257600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff161490509392505050565b600060608273ffffffffffffffffffffffffffffffffffffffff1663ca9a33ce866040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060006040518083038186803b15801561285457600080fd5b505afa158015612868573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561289257600080fd5b81019080805160405193929190846401000000008211156128b257600080fd5b838201915060208201858111156128c857600080fd5b82518660208202830111640100000000821117156128e557600080fd5b8083526020830192505050908051906020019060200280838360005b8381101561291c578082015181840152602081019050612901565b50505050905001604052505050905061293e8482612ff590919063ffffffff16565b9150509392505050565b81600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156129fd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f496e73756666696369656e7420756e626f6e6465642076616c7565000000000081525060200191505060405180910390fd5b612a4f82600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612c6a90919063ffffffff16565b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000612a9d82611bcd565b905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84876040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015612b4e57600080fd5b505af1158015612b62573d6000803e3d6000fd5b505050506040513d6020811015612b7857600080fd5b8101908080519060200190929190505050905080612bfe576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f5472616e73666572206661696c6564000000000000000000000000000000000081525060200191505060405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f5ebf1d16423ab39117c0ca9327215b5bcd423aaf7042044c87248a4423d252d9876040518082815260200191505060405180910390a35050505050565b600082821115612ce2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b600080828401905083811015612d71576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b60008473ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1663d5f520766040518163ffffffff1660e01b815260040160206040518083038186803b158015612dda57600080fd5b505afa158015612dee573d6000803e3d6000fd5b505050506040513d6020811015612e0457600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1614612e81576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061317b6026913960400191505060405180910390fd5b60608273ffffffffffffffffffffffffffffffffffffffff1663ca9a33ce856040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060006040518083038186803b158015612f0057600080fd5b505afa158015612f14573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506020811015612f3e57600080fd5b8101908080516040519392919084640100000000821115612f5e57600080fd5b83820191506020820185811115612f7457600080fd5b8251866020820283011164010000000082111715612f9157600080fd5b8083526020830192505050908051906020019060200280838360005b83811015612fc8578082015181840152602081019050612fad565b505050509050016040525050509050612fea8582612ff590919063ffffffff16565b915050949350505050565b600080600090505b83518110156130645783818151811061301257fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561305757600191505061306a565b8080600101915050612ffd565b50600090505b9291505056fe5265666572656e6365204944206e6f7420756e6971756520666f7220686f6c64657220616e64206f70657261746f7242656e6566696369617279206e6f7420646566696e656420666f7220746865206f70657261746f7252657175657374656420616d6f756e742069732067726561746572207468616e2074686520626f6e644f6e6c79206772616e74656520697320616c6c6f77656420746f20776974686472617720626f6e6452657175657374656420616d6f756e742073686f756c642062652067726561746572207468616e207a65726f4f6e6c79206f70657261746f72206f7220746865206f776e657220697320616c6c6f77656420746f20776974686472617720626f6e644e6f742061206772616e746565206f66207468652070726f766964656420636f6e7472616374a265627a7a72315820aa2e94669bf355fc99c13e154bdbb0bfcfc90a2c2a7762b5e23393f90a7c83bb64736f6c63430005110032",
  "sourceMap": "2110:2980:14:-;;;2602:334;8:9:-1;5:2;;;30:1;27;20:12;5:2;2602:334:14;;;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;2602:334:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2783:15;2800:17;4037:15:1;4013:8;;:40;;;;;;;;;;;;;;;;;;4082:17;4063:16;;:36;;;;;;;;;;;;;;;;;;3932:174;;2857:19:14;2829:12;;:48;;;;;;;;;;;;;;;;;;2911:17;2887:10;;:42;;;;;;;;;;;;;;;;;;2602:334;;;;2110:2980;;;;;;",
  "deployedSourceMap": "2110:2980:14:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2110:2980:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3432:391;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3432:391:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;13831:251:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13831:251:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;12034:782;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;12034:782:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2322:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;7001:599;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7001:599:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;9338:276;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9338:276:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4242:884;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4242:884:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2532:48;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2532:48:1;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4132:408:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4132:408:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;14255:195:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14255:195:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;11130:468;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11130:468:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;10048:758;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;10048:758:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4919:169:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4919:169:14;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;13171:248:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13171:248:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5131:913;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5131:913:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8127:932;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;8127:932:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4546:230:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4546:230:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4782:131;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4782:131:14;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3432:391;3536:8;3522:22;;:10;:22;;;:100;;;;3564:58;3599:8;3609:12;;;;;;;;;;;3564:10;:34;;;;:58;;;;;:::i;:::-;3522:100;:173;;;;3642:53;3674:8;3684:10;;;;;;;;;;;3642;:31;;;;:53;;;;;:::i;:::-;3522:173;3501:274;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3786:30;3799:6;3807:8;3786:12;:30::i;:::-;3432:391;;:::o;13831:251:1:-;13988:10;13961:37;;:23;13974:9;13961:12;:23::i;:::-;:37;;;13953:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14070:5;14027:15;:26;14043:9;14027:26;;;;;;;;;;;;;;;:40;14054:12;14027:40;;;;;;;;;;;;;;;;:48;;;;;;;;;;;;;;;;;;13831:251;;:::o;12034:782::-;12201:1;12192:6;:10;12184:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12262:14;12279:10;12262:27;;12299:14;12355:8;12365:6;12373:11;12338:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;12338:47:1;;;12328:58;;;;;;12299:87;;12441:6;12418:11;:19;12430:6;12418:19;;;;;;;;;;;;:29;;12397:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12525:15;12549:16;;;;;;;;;;;12525:41;;12598:31;12622:6;12598:11;:19;12610:6;12598:19;;;;;;;;;;;;:23;;:31;;;;:::i;:::-;12576:11;:19;12588:6;12576:19;;;;;;;;;;;:53;;;;12640:12;12655:9;:18;;;12674:11;12687:6;12655:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12655:39:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12655:39:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12655:39:1;;;;;;;;;;;;;;;;12640:54;;12712:7;12704:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12776:11;12766:8;12755:54;;;12789:11;12802:6;12755:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;12034:782;;;;;;;;:::o;2322:31::-;;;;;;;;;;;;;:::o;7001:599::-;7156:7;7323:8;;;;;;;;;;;:35;;;7359:11;7323:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7323:48:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7323:48:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7323:48:1;;;;;;;;;;;;;;;;:110;;;;;7387:46;7411:8;7421:11;7387:23;:46::i;:::-;7323:110;:186;;;;;7449:60;7475:8;7485:23;7449:25;:60::i;:::-;7323:186;7306:269;;;7541:13;:23;7555:8;7541:23;;;;;;;;;;;;;;;;7534:30;;;;7306:269;7592:1;7585:8;;7001:599;;;;;;:::o;9338:276::-;9464:7;9483:14;9539:8;9549:6;9557:11;9522:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;9522:47:1;;;9512:58;;;;;;9483:87;;9588:11;:19;9600:6;9588:19;;;;;;;;;;;;9581:26;;;9338:276;;;;;:::o;4242:884::-;4311:19;4333:23;4347:8;4333:13;:23::i;:::-;4311:45;;4661:1;4638:25;;:11;:25;;;;4617:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4739:15;4763:16;;;;;;;;;;;4739:41;;4859:7;4811:9;:19;;;4831:8;4849:4;4811:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4811:44:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4811:44:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4811:44:1;;;;;;;;;;;;;;;;:55;;4790:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4922:9;:22;;;4945:8;4963:4;4970:7;4922:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4922:56:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4922:56:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4922:56:1;;;;;;;;;;;;;;;;;5014:36;5042:7;5014:13;:23;5028:8;5014:23;;;;;;;;;;;;;;;;:27;;:36;;;;:::i;:::-;4988:13;:23;5002:8;4988:23;;;;;;;;;;;;;;;:62;;;;5098:11;5065:54;;5088:8;5065:54;;;5111:7;5065:54;;;;;;;;;;;;;;;;;;4242:884;;;;:::o;2532:48::-;;;;;;;;;;;;;;;;;:::o;4132:408:14:-;4290:136;4346:8;4372:12;4402:10;;;;;;;;;;;4290;:38;;;;:136;;;;;;:::i;:::-;4269:223;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4503:30;4516:6;4524:8;4503:12;:30::i;:::-;4132:408;;;:::o;14255:195:1:-;14376:4;14403:15;:26;14419:9;14403:26;;;;;;;;;;;;;;;:40;14430:12;14403:40;;;;;;;;;;;;;;;;;;;;;;;;;14396:47;;14255:195;;;;:::o;11130:468::-;11204:14;11221:10;11204:27;;11241:14;11297:8;11307:6;11315:11;11280:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;11280:47:1;;;11270:58;;;;;;11241:87;;11369:1;11347:11;:19;11359:6;11347:19;;;;;;;;;;;;:23;11339:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11400:14;11417:11;:19;11429:6;11417:19;;;;;;;;;;;;11400:36;;11468:1;11446:11;:19;11458:6;11446:19;;;;;;;;;;;:23;;;;11505:35;11533:6;11505:13;:23;11519:8;11505:23;;;;;;;;;;;;;;;;:27;;:35;;;;:::i;:::-;11479:13;:23;11493:8;11479:23;;;;;;;;;;;;;;;:61;;;;11579:11;11569:8;11556:35;;;;;;;;;;;;11130:468;;;;;:::o;10048:758::-;10207:14;10224:10;10207:27;;10244:14;10300:8;10310:6;10318:11;10283:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;10283:47:1;;;10273:58;;;;;;10244:87;;10372:1;10350:11;:19;10362:6;10350:19;;;;;;;;;;;;:23;10342:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10403:17;10462:8;10472:9;10483:14;10445:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;10445:53:1;;;10435:64;;;;;;10403:96;;10557:1;10531:11;:22;10543:9;10531:22;;;;;;;;;;;;:27;10510:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10667:11;:19;10679:6;10667:19;;;;;;;;;;;;10642:11;:22;10654:9;10642:22;;;;;;;;;;;:44;;;;10718:1;10696:11;:19;10708:6;10696:19;;;;;;;;;;;:23;;;;10760:11;10750:8;10735:64;;;10773:9;10784:14;10735:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;10048:758;;;;;;;:::o;4919:169:14:-;5006:15;5044:12;;;;;;;;;;;:26;;;5071:9;5044:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5044:37:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5044:37:14;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5044:37:14;;;;;;;;;;;;;;;;5037:44;;4919:169;;;:::o;13171:248:1:-;13326:10;13299:37;;:23;13312:9;13299:12;:23::i;:::-;:37;;;13291:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13408:4;13365:15;:26;13381:9;13365:26;;;;;;;;;;;;;;;:40;13392:12;13365:40;;;;;;;;;;;;;;;;:47;;;;;;;;;;;;;;;;;;13171:248;;:::o;5131:913::-;5220:19;5242:23;5256:8;5242:13;:23::i;:::-;5220:45;;5570:1;5547:25;;:11;:25;;;;5526:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5648:15;5672:16;;;;;;;;;;;5648:41;;5767:7;5720:9;:19;;;5740:7;5757:4;5720:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5720:43:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5720:43:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5720:43:1;;;;;;;;;;;;;;;;:54;;5699:132;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5841:9;:22;;;5864:7;5881:4;5888:7;5841:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5841:55:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5841:55:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5841:55:1;;;;;;;;;;;;;;;;;5932:36;5960:7;5932:13;:23;5946:8;5932:23;;;;;;;;;;;;;;;;:27;;:36;;;;:::i;:::-;5906:13;:23;5920:8;5906:23;;;;;;;;;;;;;;;:62;;;;6016:11;5983:54;;6006:8;5983:54;;;6029:7;5983:54;;;;;;;;;;;;;;;;;;5131:913;;;;;:::o;8127:932::-;8470:6;8335:131;8375:8;8401:10;8429:23;8335:22;:131::i;:::-;:141;;8314:215;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8540:14;8596:8;8606:6;8614:11;8579:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;8579:47:1;;;8569:58;;;;;;8540:87;;8682:1;8659:11;:19;8671:6;8659:19;;;;;;;;;;;;:24;8638:118;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8793:35;8821:6;8793:13;:23;8807:8;8793:23;;;;;;;;;;;;;;;;:27;;:35;;;;:::i;:::-;8767:13;:23;8781:8;8767:23;;;;;;;;;;;;;;;:61;;;;8860:31;8884:6;8860:11;:19;8872:6;8860:19;;;;;;;;;;;;:23;;:31;;;;:::i;:::-;8838:11;:19;8850:6;8838:19;;;;;;;;;;;:53;;;;8974:23;8907:145;;8954:6;8907:145;;8932:8;8907:145;;;9011:11;9036:6;8907:145;;;;;;;;;;;;;;;;;;;;;;;;8127:932;;;;;;:::o;4546:230:14:-;4668:4;4703:12;;;;;;;;;;;:36;;;4740:9;4751:17;4703:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4703:66:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4703:66:14;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4703:66:14;;;;;;;;;;;;;;;;4684:85;;4546:230;;;;:::o;4782:131::-;4844:7;4870:12;;;;;;;;;;;:25;;;4896:9;4870:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4870:36:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4870:36:14;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4870:36:14;;;;;;;;;;;;;;;;4863:43;;4782:131;;;:::o;612:237:61:-;771:4;832:10;794:48;;:16;:24;;;819:8;794:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;794:34:61;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;794:34:61;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;794:34:61;;;;;;;;;;;;;;;;:48;;;787:55;;612:237;;;;;:::o;1527:277::-;1668:4;1684:26;1713:10;:30;;;1744:7;1713:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1713:39:61;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1713:39:61;;;;;;39:16:-1;36:1;17:17;2:54;1713:39:61;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:2;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1713:39:61;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;385:12;380:3;373:25;421:4;416:3;412:14;405:21;;0:433;;1713:39:61;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1713:39:61;;;;;;;;;;;1684:68;;1769:28;1788:8;1769:9;:18;;:28;;;;:::i;:::-;1762:35;;;1527:277;;;;;:::o;15501:546:1:-;15624:6;15597:13;:23;15611:8;15597:23;;;;;;;;;;;;;;;;:33;;15576:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15720:35;15748:6;15720:13;:23;15734:8;15720:23;;;;;;;;;;;;;;;;:27;;:35;;;;:::i;:::-;15694:13;:23;15708:8;15694:23;;;;;;;;;;;;;;;:61;;;;15766:19;15788:23;15802:8;15788:13;:23::i;:::-;15766:45;;15821:15;15845:16;;;;;;;;;;;15821:41;;15872:12;15887:9;:18;;;15906:11;15919:6;15887:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15887:39:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15887:39:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15887:39:1;;;;;;;;;;;;;;;;15872:54;;15944:7;15936:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16020:11;15987:53;;16010:8;15987:53;;;16033:6;15987:53;;;;;;;;;;;;;;;;;;15501:546;;;;;:::o;1274:179:94:-;1332:7;1364:1;1359;:6;;1351:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1410:9;1426:1;1422;:5;1410:17;;1445:1;1438:8;;;1274:179;;;;:::o;834:176::-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;2671:508:61:-;2857:4;2942:7;2894:55;;2907:20;2894:42;;;:44;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2894:44:61;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2894:44:61;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2894:44:61;;;;;;;;;;;;;;;;:55;;;2873:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3024:26;3053:10;:30;;;3097:20;3053:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3053:74:61;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3053:74:61;;;;;;39:16:-1;36:1;17:17;2:54;3053:74:61;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:2;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3053:74:61;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;385:12;380:3;373:25;421:4;416:3;412:14;405:21;;0:433;;3053:74:61;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3053:74:61;;;;;;;;;;;3024:103;;3144:28;3163:8;3144:9;:18;;:28;;;;:::i;:::-;3137:35;;;2671:508;;;;;;:::o;59:286:68:-;165:4;190:6;199:1;190:10;;185:132;206:4;:11;202:1;:15;185:132;;;254:4;259:1;254:7;;;;;;;;;;;;;;242:19;;:8;:19;;;238:69;;;288:4;281:11;;;;;238:69;219:3;;;;;;;185:132;;;;333:5;326:12;;59:286;;;;;:::o",
  "source": "/**\n▓▓▌ ▓▓ ▐▓▓ ▓▓▓▓▓▓▓▓▓▓▌▐▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▄\n▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▌▐▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓\n  ▓▓▓▓▓▓    ▓▓▓▓▓▓▓▀    ▐▓▓▓▓▓▓    ▐▓▓▓▓▓   ▓▓▓▓▓▓     ▓▓▓▓▓   ▐▓▓▓▓▓▌   ▐▓▓▓▓▓▓\n  ▓▓▓▓▓▓▄▄▓▓▓▓▓▓▓▀      ▐▓▓▓▓▓▓▄▄▄▄         ▓▓▓▓▓▓▄▄▄▄         ▐▓▓▓▓▓▌   ▐▓▓▓▓▓▓\n  ▓▓▓▓▓▓▓▓▓▓▓▓▓▀        ▐▓▓▓▓▓▓▓▓▓▓         ▓▓▓▓▓▓▓▓▓▓▌        ▐▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓\n  ▓▓▓▓▓▓▀▀▓▓▓▓▓▓▄       ▐▓▓▓▓▓▓▀▀▀▀         ▓▓▓▓▓▓▀▀▀▀         ▐▓▓▓▓▓▓▓▓▓▓▓▓▓▓▀\n  ▓▓▓▓▓▓   ▀▓▓▓▓▓▓▄     ▐▓▓▓▓▓▓     ▓▓▓▓▓   ▓▓▓▓▓▓     ▓▓▓▓▓   ▐▓▓▓▓▓▌\n▓▓▓▓▓▓▓▓▓▓ █▓▓▓▓▓▓▓▓▓ ▐▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓  ▓▓▓▓▓▓▓▓▓▓\n▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓ ▐▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓  ▓▓▓▓▓▓▓▓▓▓\n\n                           Trust math, not hardware.\n*/\n\npragma solidity 0.5.17;\n\nimport \"./AbstractBonding.sol\";\n\nimport \"@keep-network/keep-core/contracts/TokenGrant.sol\";\nimport \"@keep-network/keep-core/contracts/libraries/RolesLookup.sol\";\n\n/// @title Keep Bonding\n/// @notice Contract holding deposits from keeps' operators.\ncontract KeepBonding is AbstractBonding {\n    using RolesLookup for address payable;\n\n    // KEEP Token Staking contract.\n    TokenStaking internal tokenStaking;\n\n    // KEEP token grant contract.\n    TokenGrant internal tokenGrant;\n\n    /// @notice Initializes Keep Bonding contract.\n    /// @param registryAddress Keep registry contract address.\n    /// @param tokenStakingAddress KEEP token staking contract address.\n    /// @param tokenGrantAddress KEEP token grant contract address.\n    constructor(\n        address registryAddress,\n        address tokenStakingAddress,\n        address tokenGrantAddress,\n        address _bondTokenAddress\n    ) public AbstractBonding(registryAddress, _bondTokenAddress) {\n        tokenStaking = TokenStaking(tokenStakingAddress);\n        tokenGrant = TokenGrant(tokenGrantAddress);\n    }\n\n    /// @notice Withdraws amount from operator's value available for bonding.\n    /// Should not be used by grantee of managed grants. For this case,\n    /// please use `withdrawAsManagedGrantee`.\n    ///\n    /// This function can be called only by:\n    /// - operator,\n    /// - liquid, staked tokens owner (not a grant),\n    /// - direct staked tokens grantee (not a managed grant).\n    ///\n    /// @param amount Value to withdraw in wei.\n    /// @param operator Address of the operator.\n    function withdraw(uint256 amount, address operator) public {\n        require(\n            msg.sender == operator ||\n                msg.sender.isTokenOwnerForOperator(operator, tokenStaking) ||\n                msg.sender.isGranteeForOperator(operator, tokenGrant),\n            \"Only operator or the owner is allowed to withdraw bond\"\n        );\n\n        withdrawBond(amount, operator);\n    }\n\n    /// @notice Withdraws amount from operator's value available for bonding.\n    /// Can be called only by staked tokens managed grantee.\n    /// @param amount Value to withdraw in wei.\n    /// @param operator Address of the operator.\n    /// @param managedGrant Address of the managed grant contract.\n    function withdrawAsManagedGrantee(\n        uint256 amount,\n        address operator,\n        address managedGrant\n    ) public {\n        require(\n            msg.sender.isManagedGranteeForOperator(\n                operator,\n                managedGrant,\n                tokenGrant\n            ),\n            \"Only grantee is allowed to withdraw bond\"\n        );\n\n        withdrawBond(amount, operator);\n    }\n\n    function isAuthorizedForOperator(\n        address _operator,\n        address _operatorContract\n    ) public view returns (bool) {\n        return\n            tokenStaking.isAuthorizedForOperator(_operator, _operatorContract);\n    }\n\n    function authorizerOf(address _operator) public view returns (address) {\n        return tokenStaking.authorizerOf(_operator);\n    }\n\n    function beneficiaryOf(address _operator)\n        public\n        view\n        returns (address payable)\n    {\n        return tokenStaking.beneficiaryOf(_operator);\n    }\n}\n",
  "sourcePath": "/home/kowal/Projects/sovryn/keep-ecdsa/solidity/contracts/KeepBonding.sol",
  "ast": {
    "absolutePath": "/home/kowal/Projects/sovryn/keep-ecdsa/solidity/contracts/KeepBonding.sol",
    "exportedSymbols": {
      "KeepBonding": [
        4933
      ]
    },
    "id": 4934,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4789,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "1837:23:14"
      },
      {
        "absolutePath": "/home/kowal/Projects/sovryn/keep-ecdsa/solidity/contracts/AbstractBonding.sol",
        "file": "./AbstractBonding.sol",
        "id": 4790,
        "nodeType": "ImportDirective",
        "scope": 4934,
        "sourceUnit": 1866,
        "src": "1862:31:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@keep-network/keep-core/contracts/TokenGrant.sol",
        "file": "@keep-network/keep-core/contracts/TokenGrant.sol",
        "id": 4791,
        "nodeType": "ImportDirective",
        "scope": 4934,
        "sourceUnit": 12448,
        "src": "1895:58:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@keep-network/keep-core/contracts/libraries/RolesLookup.sol",
        "file": "@keep-network/keep-core/contracts/libraries/RolesLookup.sol",
        "id": 4792,
        "nodeType": "ImportDirective",
        "scope": 4934,
        "sourceUnit": 15290,
        "src": "1954:69:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4793,
              "name": "AbstractBonding",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1865,
              "src": "2134:15:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AbstractBonding_$1865",
                "typeString": "contract AbstractBonding"
              }
            },
            "id": 4794,
            "nodeType": "InheritanceSpecifier",
            "src": "2134:15:14"
          }
        ],
        "contractDependencies": [
          1865,
          5839,
          20948
        ],
        "contractKind": "contract",
        "documentation": "@title Keep Bonding\n @notice Contract holding deposits from keeps' operators.",
        "fullyImplemented": true,
        "id": 4933,
        "linearizedBaseContracts": [
          4933,
          1865,
          5839,
          20948
        ],
        "name": "KeepBonding",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 4797,
            "libraryName": {
              "contractScope": null,
              "id": 4795,
              "name": "RolesLookup",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15289,
              "src": "2162:11:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RolesLookup_$15289",
                "typeString": "library RolesLookup"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "2156:38:14",
            "typeName": {
              "id": 4796,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2178:15:14",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            }
          },
          {
            "constant": false,
            "id": 4799,
            "name": "tokenStaking",
            "nodeType": "VariableDeclaration",
            "scope": 4933,
            "src": "2236:34:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TokenStaking_$14180",
              "typeString": "contract TokenStaking"
            },
            "typeName": {
              "contractScope": null,
              "id": 4798,
              "name": "TokenStaking",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 14180,
              "src": "2236:12:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TokenStaking_$14180",
                "typeString": "contract TokenStaking"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 4801,
            "name": "tokenGrant",
            "nodeType": "VariableDeclaration",
            "scope": 4933,
            "src": "2311:30:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TokenGrant_$12447",
              "typeString": "contract TokenGrant"
            },
            "typeName": {
              "contractScope": null,
              "id": 4800,
              "name": "TokenGrant",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12447,
              "src": "2311:10:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TokenGrant_$12447",
                "typeString": "contract TokenGrant"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4828,
              "nodeType": "Block",
              "src": "2819:117:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4820,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4816,
                      "name": "tokenStaking",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4799,
                      "src": "2829:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TokenStaking_$14180",
                        "typeString": "contract TokenStaking"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4818,
                          "name": "tokenStakingAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4805,
                          "src": "2857:19:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 4817,
                        "name": "TokenStaking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14180,
                        "src": "2844:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TokenStaking_$14180_$",
                          "typeString": "type(contract TokenStaking)"
                        }
                      },
                      "id": 4819,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2844:33:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TokenStaking_$14180",
                        "typeString": "contract TokenStaking"
                      }
                    },
                    "src": "2829:48:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TokenStaking_$14180",
                      "typeString": "contract TokenStaking"
                    }
                  },
                  "id": 4821,
                  "nodeType": "ExpressionStatement",
                  "src": "2829:48:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4822,
                      "name": "tokenGrant",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4801,
                      "src": "2887:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TokenGrant_$12447",
                        "typeString": "contract TokenGrant"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4824,
                          "name": "tokenGrantAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4807,
                          "src": "2911:17:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 4823,
                        "name": "TokenGrant",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12447,
                        "src": "2900:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TokenGrant_$12447_$",
                          "typeString": "type(contract TokenGrant)"
                        }
                      },
                      "id": 4825,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2900:29:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TokenGrant_$12447",
                        "typeString": "contract TokenGrant"
                      }
                    },
                    "src": "2887:42:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TokenGrant_$12447",
                      "typeString": "contract TokenGrant"
                    }
                  },
                  "id": 4827,
                  "nodeType": "ExpressionStatement",
                  "src": "2887:42:14"
                }
              ]
            },
            "documentation": "@notice Initializes Keep Bonding contract.\n @param registryAddress Keep registry contract address.\n @param tokenStakingAddress KEEP token staking contract address.\n @param tokenGrantAddress KEEP token grant contract address.",
            "id": 4829,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 4812,
                    "name": "registryAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4803,
                    "src": "2783:15:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 4813,
                    "name": "_bondTokenAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4809,
                    "src": "2800:17:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 4814,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4811,
                  "name": "AbstractBonding",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1865,
                  "src": "2767:15:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_AbstractBonding_$1865_$",
                    "typeString": "type(contract AbstractBonding)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2767:51:14"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4810,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4803,
                  "name": "registryAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 4829,
                  "src": "2623:23:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4802,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2623:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4805,
                  "name": "tokenStakingAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 4829,
                  "src": "2656:27:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4804,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2656:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4807,
                  "name": "tokenGrantAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 4829,
                  "src": "2693:25:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4806,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2693:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4809,
                  "name": "_bondTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 4829,
                  "src": "2728:25:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4808,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2728:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2613:146:14"
            },
            "returnParameters": {
              "id": 4815,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2819:0:14"
            },
            "scope": 4933,
            "src": "2602:334:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4863,
              "nodeType": "Block",
              "src": "3491:332:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 4854,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 4847,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 4840,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 4837,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22448,
                                "src": "3522:3:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 4838,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3522:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 4839,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4833,
                              "src": "3536:8:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "3522:22:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 4844,
                                "name": "operator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4833,
                                "src": "3599:8:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 4845,
                                "name": "tokenStaking",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4799,
                                "src": "3609:12:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TokenStaking_$14180",
                                  "typeString": "contract TokenStaking"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_contract$_TokenStaking_$14180",
                                  "typeString": "contract TokenStaking"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 4841,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 22448,
                                  "src": "3564:3:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 4842,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "3564:10:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 4843,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "isTokenOwnerForOperator",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 15173,
                              "src": "3564:34:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_contract$_StakeDelegatable_$11180_$returns$_t_bool_$bound_to$_t_address_$",
                                "typeString": "function (address,address,contract StakeDelegatable) view returns (bool)"
                              }
                            },
                            "id": 4846,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3564:58:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "3522:100:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 4851,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4833,
                              "src": "3674:8:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 4852,
                              "name": "tokenGrant",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4801,
                              "src": "3684:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TokenGrant_$12447",
                                "typeString": "contract TokenGrant"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_contract$_TokenGrant_$12447",
                                "typeString": "contract TokenGrant"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 4848,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22448,
                                "src": "3642:3:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 4849,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3642:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 4850,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isGranteeForOperator",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 15199,
                            "src": "3642:31:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_contract$_TokenGrant_$12447_$returns$_t_bool_$bound_to$_t_address_$",
                              "typeString": "function (address,address,contract TokenGrant) view returns (bool)"
                            }
                          },
                          "id": 4853,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3642:53:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3522:173:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c79206f70657261746f72206f7220746865206f776e657220697320616c6c6f77656420746f20776974686472617720626f6e64",
                        "id": 4855,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3709:56:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d15dcb475e924008ca1aa25332521b0739d197945caa22d587e3888c5b259d78",
                          "typeString": "literal_string \"Only operator or the owner is allowed to withdraw bond\""
                        },
                        "value": "Only operator or the owner is allowed to withdraw bond"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d15dcb475e924008ca1aa25332521b0739d197945caa22d587e3888c5b259d78",
                          "typeString": "literal_string \"Only operator or the owner is allowed to withdraw bond\""
                        }
                      ],
                      "id": 4836,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22451,
                        22452
                      ],
                      "referencedDeclaration": 22452,
                      "src": "3501:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3501:274:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4857,
                  "nodeType": "ExpressionStatement",
                  "src": "3501:274:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4859,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4831,
                        "src": "3799:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4860,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4833,
                        "src": "3807:8:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4858,
                      "name": "withdrawBond",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1864,
                      "src": "3786:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 4861,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3786:30:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4862,
                  "nodeType": "ExpressionStatement",
                  "src": "3786:30:14"
                }
              ]
            },
            "documentation": "@notice Withdraws amount from operator's value available for bonding.\n Should not be used by grantee of managed grants. For this case,\n please use `withdrawAsManagedGrantee`.\n\n    /// This function can be called only by:\n - operator,\n - liquid, staked tokens owner (not a grant),\n - direct staked tokens grantee (not a managed grant).\n\n    /// @param amount Value to withdraw in wei.\n @param operator Address of the operator.",
            "id": 4864,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4834,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4831,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4864,
                  "src": "3450:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4830,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3450:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4833,
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 4864,
                  "src": "3466:16:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4832,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3466:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3449:34:14"
            },
            "returnParameters": {
              "id": 4835,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3491:0:14"
            },
            "scope": 4933,
            "src": "3432:391:14",
            "stateMutability": "nonpayable",
            "superFunction": 1357,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4889,
              "nodeType": "Block",
              "src": "4259:281:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4877,
                            "name": "operator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4868,
                            "src": "4346:8:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 4878,
                            "name": "managedGrant",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4870,
                            "src": "4372:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 4879,
                            "name": "tokenGrant",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4801,
                            "src": "4402:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenGrant_$12447",
                              "typeString": "contract TokenGrant"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_contract$_TokenGrant_$12447",
                              "typeString": "contract TokenGrant"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 4874,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22448,
                              "src": "4290:3:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 4875,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4290:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "id": 4876,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isManagedGranteeForOperator",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15238,
                          "src": "4290:38:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_address_$_t_contract$_TokenGrant_$12447_$returns$_t_bool_$bound_to$_t_address_$",
                            "typeString": "function (address,address,address,contract TokenGrant) view returns (bool)"
                          }
                        },
                        "id": 4880,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4290:136:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c79206772616e74656520697320616c6c6f77656420746f20776974686472617720626f6e64",
                        "id": 4881,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4440:42:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aee72b5a6c371bd1ef4cafc8bfb5ce01243beae15242cff9707752849fce500e",
                          "typeString": "literal_string \"Only grantee is allowed to withdraw bond\""
                        },
                        "value": "Only grantee is allowed to withdraw bond"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aee72b5a6c371bd1ef4cafc8bfb5ce01243beae15242cff9707752849fce500e",
                          "typeString": "literal_string \"Only grantee is allowed to withdraw bond\""
                        }
                      ],
                      "id": 4873,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22451,
                        22452
                      ],
                      "referencedDeclaration": 22452,
                      "src": "4269:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4269:223:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4883,
                  "nodeType": "ExpressionStatement",
                  "src": "4269:223:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4885,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4866,
                        "src": "4516:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4886,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4868,
                        "src": "4524:8:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4884,
                      "name": "withdrawBond",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1864,
                      "src": "4503:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 4887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4503:30:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4888,
                  "nodeType": "ExpressionStatement",
                  "src": "4503:30:14"
                }
              ]
            },
            "documentation": "@notice Withdraws amount from operator's value available for bonding.\n Can be called only by staked tokens managed grantee.\n @param amount Value to withdraw in wei.\n @param operator Address of the operator.\n @param managedGrant Address of the managed grant contract.",
            "id": 4890,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawAsManagedGrantee",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4871,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4866,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4890,
                  "src": "4175:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4865,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4175:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4868,
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 4890,
                  "src": "4199:16:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4867,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4199:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4870,
                  "name": "managedGrant",
                  "nodeType": "VariableDeclaration",
                  "scope": 4890,
                  "src": "4225:20:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4869,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4225:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4165:86:14"
            },
            "returnParameters": {
              "id": 4872,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4259:0:14"
            },
            "scope": 4933,
            "src": "4132:408:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4905,
              "nodeType": "Block",
              "src": "4674:102:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4901,
                        "name": "_operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4892,
                        "src": "4740:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4902,
                        "name": "_operatorContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4894,
                        "src": "4751:17:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4899,
                        "name": "tokenStaking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4799,
                        "src": "4703:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenStaking_$14180",
                          "typeString": "contract TokenStaking"
                        }
                      },
                      "id": 4900,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isAuthorizedForOperator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8147,
                      "src": "4703:36:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address,address) view external returns (bool)"
                      }
                    },
                    "id": 4903,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4703:66:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 4898,
                  "id": 4904,
                  "nodeType": "Return",
                  "src": "4684:85:14"
                }
              ]
            },
            "documentation": null,
            "id": 4906,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isAuthorizedForOperator",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4895,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4892,
                  "name": "_operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 4906,
                  "src": "4588:17:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4891,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4588:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4894,
                  "name": "_operatorContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 4906,
                  "src": "4615:25:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4893,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4615:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4578:68:14"
            },
            "returnParameters": {
              "id": 4898,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4897,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4906,
                  "src": "4668:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4896,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4668:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4667:6:14"
            },
            "scope": 4933,
            "src": "4546:230:14",
            "stateMutability": "view",
            "superFunction": 1791,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4918,
              "nodeType": "Block",
              "src": "4853:60:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4915,
                        "name": "_operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4908,
                        "src": "4896:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4913,
                        "name": "tokenStaking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4799,
                        "src": "4870:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenStaking_$14180",
                          "typeString": "contract TokenStaking"
                        }
                      },
                      "id": 4914,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "authorizerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11179,
                      "src": "4870:25:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                        "typeString": "function (address) view external returns (address)"
                      }
                    },
                    "id": 4916,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4870:36:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 4912,
                  "id": 4917,
                  "nodeType": "Return",
                  "src": "4863:43:14"
                }
              ]
            },
            "documentation": null,
            "id": 4919,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "authorizerOf",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4909,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4908,
                  "name": "_operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 4919,
                  "src": "4804:17:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4907,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4804:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4803:19:14"
            },
            "returnParameters": {
              "id": 4912,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4911,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4919,
                  "src": "4844:7:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4910,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4844:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4843:9:14"
            },
            "scope": 4933,
            "src": "4782:131:14",
            "stateMutability": "view",
            "superFunction": 1798,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4931,
              "nodeType": "Block",
              "src": "5027:61:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4928,
                        "name": "_operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4921,
                        "src": "5071:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4926,
                        "name": "tokenStaking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4799,
                        "src": "5044:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenStaking_$14180",
                          "typeString": "contract TokenStaking"
                        }
                      },
                      "id": 4927,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "beneficiaryOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11166,
                      "src": "5044:26:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_payable_$",
                        "typeString": "function (address) view external returns (address payable)"
                      }
                    },
                    "id": 4929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5044:37:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "functionReturnParameters": 4925,
                  "id": 4930,
                  "nodeType": "Return",
                  "src": "5037:44:14"
                }
              ]
            },
            "documentation": null,
            "id": 4932,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "beneficiaryOf",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4922,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4921,
                  "name": "_operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 4932,
                  "src": "4942:17:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4920,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4942:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4941:19:14"
            },
            "returnParameters": {
              "id": 4925,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4924,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4932,
                  "src": "5006:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 4923,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5006:15:14",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5005:17:14"
            },
            "scope": 4933,
            "src": "4919:169:14",
            "stateMutability": "view",
            "superFunction": 1805,
            "visibility": "public"
          }
        ],
        "scope": 4934,
        "src": "2110:2980:14"
      }
    ],
    "src": "1837:3254:14"
  },
  "legacyAST": {
    "absolutePath": "/home/kowal/Projects/sovryn/keep-ecdsa/solidity/contracts/KeepBonding.sol",
    "exportedSymbols": {
      "KeepBonding": [
        4933
      ]
    },
    "id": 4934,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4789,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "1837:23:14"
      },
      {
        "absolutePath": "/home/kowal/Projects/sovryn/keep-ecdsa/solidity/contracts/AbstractBonding.sol",
        "file": "./AbstractBonding.sol",
        "id": 4790,
        "nodeType": "ImportDirective",
        "scope": 4934,
        "sourceUnit": 1866,
        "src": "1862:31:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@keep-network/keep-core/contracts/TokenGrant.sol",
        "file": "@keep-network/keep-core/contracts/TokenGrant.sol",
        "id": 4791,
        "nodeType": "ImportDirective",
        "scope": 4934,
        "sourceUnit": 12448,
        "src": "1895:58:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@keep-network/keep-core/contracts/libraries/RolesLookup.sol",
        "file": "@keep-network/keep-core/contracts/libraries/RolesLookup.sol",
        "id": 4792,
        "nodeType": "ImportDirective",
        "scope": 4934,
        "sourceUnit": 15290,
        "src": "1954:69:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4793,
              "name": "AbstractBonding",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1865,
              "src": "2134:15:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AbstractBonding_$1865",
                "typeString": "contract AbstractBonding"
              }
            },
            "id": 4794,
            "nodeType": "InheritanceSpecifier",
            "src": "2134:15:14"
          }
        ],
        "contractDependencies": [
          1865,
          5839,
          20948
        ],
        "contractKind": "contract",
        "documentation": "@title Keep Bonding\n @notice Contract holding deposits from keeps' operators.",
        "fullyImplemented": true,
        "id": 4933,
        "linearizedBaseContracts": [
          4933,
          1865,
          5839,
          20948
        ],
        "name": "KeepBonding",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 4797,
            "libraryName": {
              "contractScope": null,
              "id": 4795,
              "name": "RolesLookup",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15289,
              "src": "2162:11:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RolesLookup_$15289",
                "typeString": "library RolesLookup"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "2156:38:14",
            "typeName": {
              "id": 4796,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2178:15:14",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            }
          },
          {
            "constant": false,
            "id": 4799,
            "name": "tokenStaking",
            "nodeType": "VariableDeclaration",
            "scope": 4933,
            "src": "2236:34:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TokenStaking_$14180",
              "typeString": "contract TokenStaking"
            },
            "typeName": {
              "contractScope": null,
              "id": 4798,
              "name": "TokenStaking",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 14180,
              "src": "2236:12:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TokenStaking_$14180",
                "typeString": "contract TokenStaking"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 4801,
            "name": "tokenGrant",
            "nodeType": "VariableDeclaration",
            "scope": 4933,
            "src": "2311:30:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TokenGrant_$12447",
              "typeString": "contract TokenGrant"
            },
            "typeName": {
              "contractScope": null,
              "id": 4800,
              "name": "TokenGrant",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12447,
              "src": "2311:10:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TokenGrant_$12447",
                "typeString": "contract TokenGrant"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4828,
              "nodeType": "Block",
              "src": "2819:117:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4820,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4816,
                      "name": "tokenStaking",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4799,
                      "src": "2829:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TokenStaking_$14180",
                        "typeString": "contract TokenStaking"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4818,
                          "name": "tokenStakingAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4805,
                          "src": "2857:19:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 4817,
                        "name": "TokenStaking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14180,
                        "src": "2844:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TokenStaking_$14180_$",
                          "typeString": "type(contract TokenStaking)"
                        }
                      },
                      "id": 4819,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2844:33:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TokenStaking_$14180",
                        "typeString": "contract TokenStaking"
                      }
                    },
                    "src": "2829:48:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TokenStaking_$14180",
                      "typeString": "contract TokenStaking"
                    }
                  },
                  "id": 4821,
                  "nodeType": "ExpressionStatement",
                  "src": "2829:48:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4822,
                      "name": "tokenGrant",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4801,
                      "src": "2887:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TokenGrant_$12447",
                        "typeString": "contract TokenGrant"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4824,
                          "name": "tokenGrantAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4807,
                          "src": "2911:17:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 4823,
                        "name": "TokenGrant",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12447,
                        "src": "2900:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TokenGrant_$12447_$",
                          "typeString": "type(contract TokenGrant)"
                        }
                      },
                      "id": 4825,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2900:29:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TokenGrant_$12447",
                        "typeString": "contract TokenGrant"
                      }
                    },
                    "src": "2887:42:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TokenGrant_$12447",
                      "typeString": "contract TokenGrant"
                    }
                  },
                  "id": 4827,
                  "nodeType": "ExpressionStatement",
                  "src": "2887:42:14"
                }
              ]
            },
            "documentation": "@notice Initializes Keep Bonding contract.\n @param registryAddress Keep registry contract address.\n @param tokenStakingAddress KEEP token staking contract address.\n @param tokenGrantAddress KEEP token grant contract address.",
            "id": 4829,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 4812,
                    "name": "registryAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4803,
                    "src": "2783:15:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 4813,
                    "name": "_bondTokenAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4809,
                    "src": "2800:17:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 4814,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4811,
                  "name": "AbstractBonding",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1865,
                  "src": "2767:15:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_AbstractBonding_$1865_$",
                    "typeString": "type(contract AbstractBonding)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2767:51:14"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4810,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4803,
                  "name": "registryAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 4829,
                  "src": "2623:23:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4802,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2623:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4805,
                  "name": "tokenStakingAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 4829,
                  "src": "2656:27:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4804,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2656:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4807,
                  "name": "tokenGrantAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 4829,
                  "src": "2693:25:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4806,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2693:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4809,
                  "name": "_bondTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 4829,
                  "src": "2728:25:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4808,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2728:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2613:146:14"
            },
            "returnParameters": {
              "id": 4815,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2819:0:14"
            },
            "scope": 4933,
            "src": "2602:334:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4863,
              "nodeType": "Block",
              "src": "3491:332:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 4854,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 4847,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 4840,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 4837,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22448,
                                "src": "3522:3:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 4838,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3522:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 4839,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4833,
                              "src": "3536:8:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "3522:22:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 4844,
                                "name": "operator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4833,
                                "src": "3599:8:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 4845,
                                "name": "tokenStaking",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4799,
                                "src": "3609:12:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TokenStaking_$14180",
                                  "typeString": "contract TokenStaking"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_contract$_TokenStaking_$14180",
                                  "typeString": "contract TokenStaking"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 4841,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 22448,
                                  "src": "3564:3:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 4842,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "3564:10:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 4843,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "isTokenOwnerForOperator",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 15173,
                              "src": "3564:34:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_contract$_StakeDelegatable_$11180_$returns$_t_bool_$bound_to$_t_address_$",
                                "typeString": "function (address,address,contract StakeDelegatable) view returns (bool)"
                              }
                            },
                            "id": 4846,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3564:58:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "3522:100:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 4851,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4833,
                              "src": "3674:8:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 4852,
                              "name": "tokenGrant",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4801,
                              "src": "3684:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TokenGrant_$12447",
                                "typeString": "contract TokenGrant"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_contract$_TokenGrant_$12447",
                                "typeString": "contract TokenGrant"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 4848,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22448,
                                "src": "3642:3:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 4849,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3642:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 4850,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isGranteeForOperator",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 15199,
                            "src": "3642:31:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_contract$_TokenGrant_$12447_$returns$_t_bool_$bound_to$_t_address_$",
                              "typeString": "function (address,address,contract TokenGrant) view returns (bool)"
                            }
                          },
                          "id": 4853,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3642:53:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3522:173:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c79206f70657261746f72206f7220746865206f776e657220697320616c6c6f77656420746f20776974686472617720626f6e64",
                        "id": 4855,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3709:56:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d15dcb475e924008ca1aa25332521b0739d197945caa22d587e3888c5b259d78",
                          "typeString": "literal_string \"Only operator or the owner is allowed to withdraw bond\""
                        },
                        "value": "Only operator or the owner is allowed to withdraw bond"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d15dcb475e924008ca1aa25332521b0739d197945caa22d587e3888c5b259d78",
                          "typeString": "literal_string \"Only operator or the owner is allowed to withdraw bond\""
                        }
                      ],
                      "id": 4836,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22451,
                        22452
                      ],
                      "referencedDeclaration": 22452,
                      "src": "3501:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3501:274:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4857,
                  "nodeType": "ExpressionStatement",
                  "src": "3501:274:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4859,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4831,
                        "src": "3799:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4860,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4833,
                        "src": "3807:8:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4858,
                      "name": "withdrawBond",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1864,
                      "src": "3786:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 4861,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3786:30:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4862,
                  "nodeType": "ExpressionStatement",
                  "src": "3786:30:14"
                }
              ]
            },
            "documentation": "@notice Withdraws amount from operator's value available for bonding.\n Should not be used by grantee of managed grants. For this case,\n please use `withdrawAsManagedGrantee`.\n\n    /// This function can be called only by:\n - operator,\n - liquid, staked tokens owner (not a grant),\n - direct staked tokens grantee (not a managed grant).\n\n    /// @param amount Value to withdraw in wei.\n @param operator Address of the operator.",
            "id": 4864,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4834,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4831,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4864,
                  "src": "3450:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4830,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3450:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4833,
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 4864,
                  "src": "3466:16:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4832,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3466:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3449:34:14"
            },
            "returnParameters": {
              "id": 4835,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3491:0:14"
            },
            "scope": 4933,
            "src": "3432:391:14",
            "stateMutability": "nonpayable",
            "superFunction": 1357,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4889,
              "nodeType": "Block",
              "src": "4259:281:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4877,
                            "name": "operator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4868,
                            "src": "4346:8:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 4878,
                            "name": "managedGrant",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4870,
                            "src": "4372:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 4879,
                            "name": "tokenGrant",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4801,
                            "src": "4402:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenGrant_$12447",
                              "typeString": "contract TokenGrant"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_contract$_TokenGrant_$12447",
                              "typeString": "contract TokenGrant"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 4874,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22448,
                              "src": "4290:3:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 4875,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4290:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "id": 4876,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isManagedGranteeForOperator",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15238,
                          "src": "4290:38:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_address_$_t_contract$_TokenGrant_$12447_$returns$_t_bool_$bound_to$_t_address_$",
                            "typeString": "function (address,address,address,contract TokenGrant) view returns (bool)"
                          }
                        },
                        "id": 4880,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4290:136:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c79206772616e74656520697320616c6c6f77656420746f20776974686472617720626f6e64",
                        "id": 4881,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4440:42:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aee72b5a6c371bd1ef4cafc8bfb5ce01243beae15242cff9707752849fce500e",
                          "typeString": "literal_string \"Only grantee is allowed to withdraw bond\""
                        },
                        "value": "Only grantee is allowed to withdraw bond"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aee72b5a6c371bd1ef4cafc8bfb5ce01243beae15242cff9707752849fce500e",
                          "typeString": "literal_string \"Only grantee is allowed to withdraw bond\""
                        }
                      ],
                      "id": 4873,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22451,
                        22452
                      ],
                      "referencedDeclaration": 22452,
                      "src": "4269:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4269:223:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4883,
                  "nodeType": "ExpressionStatement",
                  "src": "4269:223:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4885,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4866,
                        "src": "4516:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4886,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4868,
                        "src": "4524:8:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4884,
                      "name": "withdrawBond",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1864,
                      "src": "4503:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 4887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4503:30:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4888,
                  "nodeType": "ExpressionStatement",
                  "src": "4503:30:14"
                }
              ]
            },
            "documentation": "@notice Withdraws amount from operator's value available for bonding.\n Can be called only by staked tokens managed grantee.\n @param amount Value to withdraw in wei.\n @param operator Address of the operator.\n @param managedGrant Address of the managed grant contract.",
            "id": 4890,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawAsManagedGrantee",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4871,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4866,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4890,
                  "src": "4175:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4865,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4175:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4868,
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 4890,
                  "src": "4199:16:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4867,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4199:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4870,
                  "name": "managedGrant",
                  "nodeType": "VariableDeclaration",
                  "scope": 4890,
                  "src": "4225:20:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4869,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4225:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4165:86:14"
            },
            "returnParameters": {
              "id": 4872,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4259:0:14"
            },
            "scope": 4933,
            "src": "4132:408:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4905,
              "nodeType": "Block",
              "src": "4674:102:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4901,
                        "name": "_operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4892,
                        "src": "4740:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4902,
                        "name": "_operatorContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4894,
                        "src": "4751:17:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4899,
                        "name": "tokenStaking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4799,
                        "src": "4703:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenStaking_$14180",
                          "typeString": "contract TokenStaking"
                        }
                      },
                      "id": 4900,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isAuthorizedForOperator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8147,
                      "src": "4703:36:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address,address) view external returns (bool)"
                      }
                    },
                    "id": 4903,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4703:66:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 4898,
                  "id": 4904,
                  "nodeType": "Return",
                  "src": "4684:85:14"
                }
              ]
            },
            "documentation": null,
            "id": 4906,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isAuthorizedForOperator",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4895,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4892,
                  "name": "_operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 4906,
                  "src": "4588:17:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4891,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4588:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4894,
                  "name": "_operatorContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 4906,
                  "src": "4615:25:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4893,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4615:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4578:68:14"
            },
            "returnParameters": {
              "id": 4898,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4897,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4906,
                  "src": "4668:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4896,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4668:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4667:6:14"
            },
            "scope": 4933,
            "src": "4546:230:14",
            "stateMutability": "view",
            "superFunction": 1791,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4918,
              "nodeType": "Block",
              "src": "4853:60:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4915,
                        "name": "_operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4908,
                        "src": "4896:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4913,
                        "name": "tokenStaking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4799,
                        "src": "4870:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenStaking_$14180",
                          "typeString": "contract TokenStaking"
                        }
                      },
                      "id": 4914,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "authorizerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11179,
                      "src": "4870:25:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                        "typeString": "function (address) view external returns (address)"
                      }
                    },
                    "id": 4916,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4870:36:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 4912,
                  "id": 4917,
                  "nodeType": "Return",
                  "src": "4863:43:14"
                }
              ]
            },
            "documentation": null,
            "id": 4919,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "authorizerOf",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4909,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4908,
                  "name": "_operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 4919,
                  "src": "4804:17:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4907,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4804:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4803:19:14"
            },
            "returnParameters": {
              "id": 4912,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4911,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4919,
                  "src": "4844:7:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4910,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4844:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4843:9:14"
            },
            "scope": 4933,
            "src": "4782:131:14",
            "stateMutability": "view",
            "superFunction": 1798,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4931,
              "nodeType": "Block",
              "src": "5027:61:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4928,
                        "name": "_operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4921,
                        "src": "5071:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4926,
                        "name": "tokenStaking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4799,
                        "src": "5044:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenStaking_$14180",
                          "typeString": "contract TokenStaking"
                        }
                      },
                      "id": 4927,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "beneficiaryOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11166,
                      "src": "5044:26:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_payable_$",
                        "typeString": "function (address) view external returns (address payable)"
                      }
                    },
                    "id": 4929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5044:37:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "functionReturnParameters": 4925,
                  "id": 4930,
                  "nodeType": "Return",
                  "src": "5037:44:14"
                }
              ]
            },
            "documentation": null,
            "id": 4932,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "beneficiaryOf",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4922,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4921,
                  "name": "_operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 4932,
                  "src": "4942:17:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4920,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4942:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4941:19:14"
            },
            "returnParameters": {
              "id": 4925,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4924,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4932,
                  "src": "5006:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 4923,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5006:15:14",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5005:17:14"
            },
            "scope": 4933,
            "src": "4919:169:14",
            "stateMutability": "view",
            "superFunction": 1805,
            "visibility": "public"
          }
        ],
        "scope": 4934,
        "src": "2110:2980:14"
      }
    ],
    "src": "1837:3254:14"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {
    "31": {
      "events": {
        "0xa5543d8e139d9ab4342d5c4f6ec1bff5a97f9a52d71f7ffe9845b94f1449fc91": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "holder",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sortitionPool",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "referenceID",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "BondCreated",
          "type": "event",
          "signature": "0xa5543d8e139d9ab4342d5c4f6ec1bff5a97f9a52d71f7ffe9845b94f1449fc91"
        },
        "0xb1d917176802bfbc813f2d82e745526029a4ccf0ea98d14e7a09a08703595b1e": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "referenceID",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "newHolder",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "newReferenceID",
              "type": "uint256"
            }
          ],
          "name": "BondReassigned",
          "type": "event",
          "signature": "0xb1d917176802bfbc813f2d82e745526029a4ccf0ea98d14e7a09a08703595b1e"
        },
        "0x60b8ef4216791426b3d7acfb0b6d11a400872350afd70a3ce5ebf62bea7cb0d4": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "referenceID",
              "type": "uint256"
            }
          ],
          "name": "BondReleased",
          "type": "event",
          "signature": "0x60b8ef4216791426b3d7acfb0b6d11a400872350afd70a3ce5ebf62bea7cb0d4"
        },
        "0xf8e947b47b515d01aa96426822ddcf23a08f42d8c2dbfd65e674ba824f551382": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "referenceID",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "destination",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "BondSeized",
          "type": "event",
          "signature": "0xf8e947b47b515d01aa96426822ddcf23a08f42d8c2dbfd65e674ba824f551382"
        },
        "0xfd586a32ad24d585b1f7b36ee48e66304ad7627b48b39a0ab1d8a3e84741ea2a": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "beneficiary",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "UnbondedValueDeposited",
          "type": "event",
          "signature": "0xfd586a32ad24d585b1f7b36ee48e66304ad7627b48b39a0ab1d8a3e84741ea2a"
        },
        "0x5ebf1d16423ab39117c0ca9327215b5bcd423aaf7042044c87248a4423d252d9": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "beneficiary",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "UnbondedValueWithdrawn",
          "type": "event",
          "signature": "0x5ebf1d16423ab39117c0ca9327215b5bcd423aaf7042044c87248a4423d252d9"
        }
      },
      "links": {},
      "address": "0xc1D545c5558561dE1D5d7a8a21fF1FBd1BD5a3F8",
      "transactionHash": "0xadde1572df66f5eb2357214b114ef07314c3875f1cb1d81ea7d71f7329faeba6"
    }
  },
  "schemaVersion": "3.0.22",
  "updatedAt": "2021-02-01T13:33:05.549Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "authorizeSortitionPoolContract(address,address)": {
        "details": "Only operator's authorizer can call this function."
      },
      "availableUnbondedValue(address,address,address)": {
        "details": "Implements function expected by sortition pools' IBonding interface.",
        "params": {
          "authorizedSortitionPool": "Address of authorized sortition pool.",
          "bondCreator": "Address authorized to create a bond.",
          "operator": "Address of the operator."
        },
        "return": "Amount of authorized wei deposit available for bonding."
      },
      "bondAmount(address,address,uint256)": {
        "params": {
          "holder": "Address of the holder of the bond.",
          "operator": "Address of the operator.",
          "referenceID": "Reference ID of the bond."
        },
        "return": "Amount of wei in the selected bond."
      },
      "constructor": {
        "params": {
          "registryAddress": "Keep registry contract address.",
          "tokenGrantAddress": "KEEP token grant contract address.",
          "tokenStakingAddress": "KEEP token staking contract address."
        }
      },
      "createBond(address,address,uint256,uint256,address)": {
        "details": "Function can be executed only by authorized contract. Reference ID should be unique for holder and operator.",
        "params": {
          "amount": "Value to bond in wei.",
          "authorizedSortitionPool": "Address of authorized sortition pool.",
          "holder": "Address of the holder of the bond.",
          "operator": "Address of the operator to bond.",
          "referenceID": "Reference ID used to track the bond by holder."
        }
      },
      "deauthorizeSortitionPoolContract(address,address)": {
        "details": "Only operator's authorizer can call this function."
      },
      "deposit(address,uint256)": {
        "params": {
          "operator": "Address of the operator."
        }
      },
      "freeBond(address,uint256)": {
        "details": "Function requires that caller is the holder of the bond which is being released.",
        "params": {
          "operator": "Address of the bonded operator.",
          "referenceID": "Reference ID of the bond."
        }
      },
      "hasSecondaryAuthorization(address,address)": {
        "details": "See authorizeSortitionPoolContract."
      },
      "reassignBond(address,uint256,address,uint256)": {
        "details": "Function requires that a caller is the current holder of the bond which is being reassigned.",
        "params": {
          "newHolder": "Address of the new holder of the bond.",
          "newReferenceID": "New reference ID to register the bond.",
          "operator": "Address of the bonded operator.",
          "referenceID": "Reference ID of the bond."
        }
      },
      "seizeBond(address,uint256,uint256,address)": {
        "details": "Function requires that a caller is the holder of the bond which is being seized.",
        "params": {
          "amount": "Amount to be seized.",
          "destination": "Address to send the amount to.",
          "operator": "Address of the bonded operator.",
          "referenceID": "Reference ID of the bond."
        }
      },
      "withdraw(uint256,address)": {
        "params": {
          "amount": "Value to withdraw in wei.",
          "operator": "Address of the operator."
        }
      },
      "withdrawAsManagedGrantee(uint256,address,address)": {
        "params": {
          "amount": "Value to withdraw in wei.",
          "managedGrant": "Address of the managed grant contract.",
          "operator": "Address of the operator."
        }
      }
    },
    "title": "Keep Bonding"
  },
  "userdoc": {
    "methods": {
      "authorizeSortitionPoolContract(address,address)": {
        "notice": "Authorizes sortition pool for the provided operator. Operator's authorizers need to authorize individual sortition pools per application since they may be interested in participating only in a subset of keep types used by the given application."
      },
      "availableUnbondedValue(address,address,address)": {
        "notice": "Returns the amount of wei the operator has made available for bonding and that is still unbounded. If the operator doesn't exist or bond creator is not authorized as an operator contract or it is not authorized by the operator or there is no secondary authorization for the provided sortition pool, function returns 0."
      },
      "bondAmount(address,address,uint256)": {
        "notice": "Returns value of wei bonded for the operator."
      },
      "constructor": "Initializes Keep Bonding contract.",
      "createBond(address,address,uint256,uint256,address)": {
        "notice": "Create bond for the given operator, holder, reference and amount."
      },
      "deauthorizeSortitionPoolContract(address,address)": {
        "notice": "Deauthorizes sortition pool for the provided operator. Authorizer may deauthorize individual sortition pool in case the operator should no longer be eligible for work selection and the application represented by the sortition pool should no longer be eligible to create bonds for the operator."
      },
      "deposit(address,uint256)": {
        "notice": "Add the provided value to operator's pool available for bonding."
      },
      "freeBond(address,uint256)": {
        "notice": "Releases the bond and moves the bond value to the operator's unbounded value pool."
      },
      "hasSecondaryAuthorization(address,address)": {
        "notice": "Checks if the sortition pool has been authorized for the provided operator by its authorizer."
      },
      "reassignBond(address,uint256,address,uint256)": {
        "notice": "Reassigns a bond to a new holder under a new reference."
      },
      "seizeBond(address,uint256,uint256,address)": {
        "notice": "Seizes the bond by moving some or all of the locked bond to the provided destination address."
      },
      "withdraw(uint256,address)": {
        "notice": "Withdraws amount from operator's value available for bonding. Should not be used by grantee of managed grants. For this case, please use `withdrawAsManagedGrantee`.     /// This function can be called only by: - operator, - liquid, staked tokens owner (not a grant), - direct staked tokens grantee (not a managed grant). "
      },
      "withdrawAsManagedGrantee(uint256,address,address)": {
        "notice": "Withdraws amount from operator's value available for bonding. Can be called only by staked tokens managed grantee."
      }
    },
    "notice": "Contract holding deposits from keeps' operators."
  }
}