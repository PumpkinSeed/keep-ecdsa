{
  "contractName": "FullyBackedBondingStub",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract KeepRegistry",
          "name": "_keepRegistry",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_initializationPeriod",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_bondTokenAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "holder",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sortitionPool",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "referenceID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "BondCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "referenceID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newHolder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newReferenceID",
          "type": "uint256"
        }
      ],
      "name": "BondReassigned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "referenceID",
          "type": "uint256"
        }
      ],
      "name": "BondReleased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "referenceID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "destination",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "BondSeized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "Delegated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "authorizer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "OperatorDelegated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "OperatorToppedUp",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "UnbondedValueDeposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "UnbondedValueWithdrawn",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "DELEGATION_LOCK_PERIOD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "MINIMUM_DELEGATION_DEPOSIT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_operatorContract",
          "type": "address"
        }
      ],
      "name": "authorizeOperatorContract",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_poolAddress",
          "type": "address"
        }
      ],
      "name": "authorizeSortitionPoolContract",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "authorizerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "bondCreator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "authorizedSortitionPool",
          "type": "address"
        }
      ],
      "name": "availableUnbondedValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "beneficiaryOf",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "referenceID",
          "type": "uint256"
        }
      ],
      "name": "bondAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "bondTokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "delegatedAuthoritySource",
          "type": "address"
        }
      ],
      "name": "claimDelegatedAuthority",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "referenceID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "authorizedSortitionPool",
          "type": "address"
        }
      ],
      "name": "createBond",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_poolAddress",
          "type": "address"
        }
      ],
      "name": "deauthorizeSortitionPoolContract",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "authorizer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "delegate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_source",
          "type": "address"
        }
      ],
      "name": "depositFor",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "referenceID",
          "type": "uint256"
        }
      ],
      "name": "freeBond",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "operatorContract",
          "type": "address"
        }
      ],
      "name": "getAuthoritySource",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "getDelegationInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "createdAt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "undelegatedAt",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_poolAddress",
          "type": "address"
        }
      ],
      "name": "hasSecondaryAuthorization",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "initializationPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_operatorContract",
          "type": "address"
        }
      ],
      "name": "isApprovedOperatorContract",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_operatorContract",
          "type": "address"
        }
      ],
      "name": "isAuthorizedForOperator",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "bondCreator",
          "type": "address"
        }
      ],
      "name": "isInitialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "referenceID",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "newHolder",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "newReferenceID",
          "type": "uint256"
        }
      ],
      "name": "reassignBond",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "referenceID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "destination",
          "type": "address"
        }
      ],
      "name": "seizeBond",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "topUp",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "unbondedValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "_beneficiary",
          "type": "address"
        }
      ],
      "name": "setBeneficiary",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract KeepRegistry\",\"name\":\"_keepRegistry\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_initializationPeriod\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_bondTokenAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sortitionPool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"referenceID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BondCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"referenceID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newHolder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newReferenceID\",\"type\":\"uint256\"}],\"name\":\"BondReassigned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"referenceID\",\"type\":\"uint256\"}],\"name\":\"BondReleased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"referenceID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BondSeized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"Delegated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"authorizer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"OperatorDelegated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"OperatorToppedUp\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"UnbondedValueDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"UnbondedValueWithdrawn\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DELEGATION_LOCK_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MINIMUM_DELEGATION_DEPOSIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operatorContract\",\"type\":\"address\"}],\"name\":\"authorizeOperatorContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_poolAddress\",\"type\":\"address\"}],\"name\":\"authorizeSortitionPoolContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"authorizerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"bondCreator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"authorizedSortitionPool\",\"type\":\"address\"}],\"name\":\"availableUnbondedValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"beneficiaryOf\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"referenceID\",\"type\":\"uint256\"}],\"name\":\"bondAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bondTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatedAuthoritySource\",\"type\":\"address\"}],\"name\":\"claimDelegatedAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"referenceID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"authorizedSortitionPool\",\"type\":\"address\"}],\"name\":\"createBond\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_poolAddress\",\"type\":\"address\"}],\"name\":\"deauthorizeSortitionPoolContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"authorizer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"delegate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_source\",\"type\":\"address\"}],\"name\":\"depositFor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"referenceID\",\"type\":\"uint256\"}],\"name\":\"freeBond\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"operatorContract\",\"type\":\"address\"}],\"name\":\"getAuthoritySource\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"getDelegationInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"undelegatedAt\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_poolAddress\",\"type\":\"address\"}],\"name\":\"hasSecondaryAuthorization\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initializationPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operatorContract\",\"type\":\"address\"}],\"name\":\"isApprovedOperatorContract\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operatorContract\",\"type\":\"address\"}],\"name\":\"isAuthorizedForOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"bondCreator\",\"type\":\"address\"}],\"name\":\"isInitialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"referenceID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newHolder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newReferenceID\",\"type\":\"uint256\"}],\"name\":\"reassignBond\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"referenceID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"seizeBond\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_beneficiary\",\"type\":\"address\"}],\"name\":\"setBeneficiary\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"topUp\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"unbondedValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract is for testing purposes only.\",\"methods\":{\"authorizeOperatorContract(address,address)\":{\"params\":{\"_operator\":\"address of stake operator.\",\"_operatorContract\":\"address of operator contract.\"}},\"authorizeSortitionPoolContract(address,address)\":{\"details\":\"Only operator's authorizer can call this function.\"},\"authorizerOf(address)\":{\"return\":\"Authorizer address.\"},\"availableUnbondedValue(address,address,address)\":{\"details\":\"Implements function expected by sortition pools' IBonding interface.\",\"params\":{\"authorizedSortitionPool\":\"Address of authorized sortition pool.\",\"bondCreator\":\"Address authorized to create a bond.\",\"operator\":\"Address of the operator.\"},\"return\":\"Amount of authorized wei deposit available for bonding.\"},\"balanceOf(address)\":{\"params\":{\"_address\":\"The address to query the balance of.\"},\"return\":\"An uint256 representing the amount staked by the passed address.\"},\"beneficiaryOf(address)\":{\"return\":\"Beneficiary address.\"},\"bondAmount(address,address,uint256)\":{\"params\":{\"holder\":\"Address of the holder of the bond.\",\"operator\":\"Address of the operator.\",\"referenceID\":\"Reference ID of the bond.\"},\"return\":\"Amount of wei in the selected bond.\"},\"claimDelegatedAuthority(address)\":{\"details\":\"If `delegatedAuthoritySource` is an approved operator contract and recognizes the claimant, this relationship will be recorded in `delegatedAuthority`. Later, the claimant can slash, seize, place locks etc. on operators that have authorized the `delegatedAuthoritySource`. If the `delegatedAuthoritySource` is disabled with the panic button, any recipients of delegated authority from it will also be disabled.\"},\"createBond(address,address,uint256,uint256,address)\":{\"details\":\"Function can be executed only by authorized contract. Reference ID should be unique for holder and operator.\",\"params\":{\"amount\":\"Value to bond in wei.\",\"authorizedSortitionPool\":\"Address of authorized sortition pool.\",\"holder\":\"Address of the holder of the bond.\",\"operator\":\"Address of the operator to bond.\",\"referenceID\":\"Reference ID used to track the bond by holder.\"}},\"deauthorizeSortitionPoolContract(address,address)\":{\"details\":\"Only operator's authorizer can call this function.\"},\"delegate(address,address,address,uint256)\":{\"params\":{\"authorizer\":\"Address of the authorizer.\",\"beneficiary\":\"Address of the beneficiary.\",\"operator\":\"Address of the operator.\"}},\"deposit(address,uint256)\":{\"params\":{\"operator\":\"Address of the operator.\"}},\"freeBond(address,uint256)\":{\"details\":\"Function requires that caller is the holder of the bond which is being released.\",\"params\":{\"operator\":\"Address of the bonded operator.\",\"referenceID\":\"Reference ID of the bond.\"}},\"getDelegationInfo(address)\":{\"params\":{\"operator\":\"Address of the operator.\"},\"return\":\"createdAt The time when the delegation was created.undelegatedAt The time when undelegation has been requested. If undelegation has not been requested, 0 is returned.\"},\"hasSecondaryAuthorization(address,address)\":{\"details\":\"See authorizeSortitionPoolContract.\"},\"isApprovedOperatorContract(address)\":{\"params\":{\"_operatorContract\":\"address of operator contract.\"},\"return\":\"True if operator contract is approved, false if operator contract has not been approved or if it was disabled by the panic button.\"},\"isAuthorizedForOperator(address,address)\":{\"params\":{\"_operator\":\"address of stake operator.\",\"_operatorContract\":\"address of operator contract.\"}},\"isInitialized(address,address)\":{\"params\":{\"bondCreator\":\"The bond creator contract address.\",\"operator\":\"The operator address.\"},\"return\":\"True if operator has passed initialization period for given bond creator contract, false otherwise.\"},\"ownerOf(address)\":{\"return\":\"Stake owner address.\"},\"reassignBond(address,uint256,address,uint256)\":{\"details\":\"Function requires that a caller is the current holder of the bond which is being reassigned.\",\"params\":{\"newHolder\":\"Address of the new holder of the bond.\",\"newReferenceID\":\"New reference ID to register the bond.\",\"operator\":\"Address of the bonded operator.\",\"referenceID\":\"Reference ID of the bond.\"}},\"seizeBond(address,uint256,uint256,address)\":{\"details\":\"Function requires that a caller is the holder of the bond which is being seized.\",\"params\":{\"amount\":\"Amount to be seized.\",\"destination\":\"Address to send the amount to.\",\"operator\":\"Address of the bonded operator.\",\"referenceID\":\"Reference ID of the bond.\"}},\"topUp(address,uint256)\":{\"details\":\"This function should be used to add new unbonded value to the system for an operator. The `deposit` function defined in parent abstract contract should be called only by applications returning value that has been already initially deposited and seized later. As an application may seize bonds and return them to the bonding contract with `deposit` function it makes tracking the totally deposited value much more complicated. Functions `delegate` and `topUps` should be used to add fresh value to the contract and events emitted by these functions should be enough to determine total value deposited ever for an operator.\",\"params\":{\"operator\":\"Address of the operator.\"}},\"withdraw(uint256,address)\":{\"params\":{\"amount\":\"Value to withdraw in wei.\",\"operator\":\"Address of the operator.\"}}},\"title\":\"Fully Backed Bonding Stub\"},\"userdoc\":{\"methods\":{\"authorizeOperatorContract(address,address)\":{\"notice\":\"Authorizes operator contract to access staked token balance of the provided operator. Can only be executed by stake operator authorizer. Contracts using delegated authority cannot be authorized with `authorizeOperatorContract`. Instead, authorize `getAuthoritySource(_operatorContract)`.\"},\"authorizeSortitionPoolContract(address,address)\":{\"notice\":\"Authorizes sortition pool for the provided operator. Operator's authorizers need to authorize individual sortition pools per application since they may be interested in participating only in a subset of keep types used by the given application.\"},\"authorizerOf(address)\":{\"notice\":\"Gets the authorizer for the specified operator address.\"},\"availableUnbondedValue(address,address,address)\":{\"notice\":\"Returns the amount of wei the operator has made available for bonding and that is still unbounded. If the operator doesn't exist or bond creator is not authorized as an operator contract or it is not authorized by the operator or there is no secondary authorization for the provided sortition pool, function returns 0.\"},\"balanceOf(address)\":{\"notice\":\"Gets the stake balance of the specified address.\"},\"beneficiaryOf(address)\":{\"notice\":\"Gets the beneficiary for the specified operator address.\"},\"bondAmount(address,address,uint256)\":{\"notice\":\"Returns value of wei bonded for the operator.\"},\"claimDelegatedAuthority(address)\":{\"notice\":\"Grant the sender the same authority as `delegatedAuthoritySource`\"},\"createBond(address,address,uint256,uint256,address)\":{\"notice\":\"Create bond for the given operator, holder, reference and amount.\"},\"deauthorizeSortitionPoolContract(address,address)\":{\"notice\":\"Deauthorizes sortition pool for the provided operator. Authorizer may deauthorize individual sortition pool in case the operator should no longer be eligible for work selection and the application represented by the sortition pool should no longer be eligible to create bonds for the operator.\"},\"delegate(address,address,address,uint256)\":{\"notice\":\"Registers delegation details. The function is used to register addresses of operator, beneficiary and authorizer for a delegation from the caller. The function requires ETH to be submitted in the call as a protection against attacks blocking operators. The value should be at least equal to the minimum delegation deposit. Whole amount is deposited as operator's unbonded value for the future bonding.\"},\"deposit(address,uint256)\":{\"notice\":\"Add the provided value to operator's pool available for bonding.\"},\"freeBond(address,uint256)\":{\"notice\":\"Releases the bond and moves the bond value to the operator's unbounded value pool.\"},\"getAuthoritySource(address)\":{\"notice\":\"Get the source of the operator contract's authority. If the contract uses delegated authority, returns the original source of the delegated authority. If the contract doesn't use delegated authority, returns the contract itself. Authorize `getAuthoritySource(operatorContract)` to grant `operatorContract` the authority to penalize an operator.\"},\"getDelegationInfo(address)\":{\"notice\":\"Gets delegation info for the given operator.\"},\"hasSecondaryAuthorization(address,address)\":{\"notice\":\"Checks if the sortition pool has been authorized for the provided operator by its authorizer.\"},\"isApprovedOperatorContract(address)\":{\"notice\":\"Checks if the operator contract is authorized in the registry. If the contract uses delegated authority it checks authorization of the source contract.\"},\"isAuthorizedForOperator(address,address)\":{\"notice\":\"Checks if operator contract has access to the staked token balance of the provided operator.\"},\"isInitialized(address,address)\":{\"notice\":\"Checks if the operator for the given bond creator contract has passed the initialization period.\"},\"ownerOf(address)\":{\"notice\":\"Gets the stake owner for the specified operator address.\"},\"reassignBond(address,uint256,address,uint256)\":{\"notice\":\"Reassigns a bond to a new holder under a new reference.\"},\"seizeBond(address,uint256,uint256,address)\":{\"notice\":\"Seizes the bond by moving some or all of the locked bond to the provided destination address.\"},\"topUp(address,uint256)\":{\"notice\":\"Top-ups operator's unbonded value.\"},\"withdraw(uint256,address)\":{\"notice\":\"Withdraws amount from operator's value available for bonding. This function can be called only by: - operator, - owner of the stake. Withdraw cannot be performed immediately after delegation to protect from a griefing. It is required that delegator waits specific period of time before they can pull out the funds deposited on delegation.\"}}}},\"settings\":{\"compilationTarget\":{\"/home/kowal/Projects/sovryn/keep-ecdsa/solidity/contracts/test/FullyBackedBondingStub.sol\":\"FullyBackedBondingStub\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/kowal/Projects/sovryn/keep-ecdsa/solidity/contracts/AbstractBonding.sol\":{\"keccak256\":\"0xfa1dc6ce7275597b41bf827cbaccba02356221fd4582043f4202a564283a8c94\",\"urls\":[\"bzz-raw://1467ee58821e268916c01214a60ba89a6c1f86552b6804c03e6a24ff8c2324fa\",\"dweb:/ipfs/QmPWHY2yazh7XfTnYCEwZBvoAShK7vkjCXGikMeE9UCaaG\"]},\"/home/kowal/Projects/sovryn/keep-ecdsa/solidity/contracts/api/IBondingManagement.sol\":{\"keccak256\":\"0x00888f7edf918020ce70acf3ab6a17ff3d4b410a5413bf7ded1d3d5f21de1fb7\",\"urls\":[\"bzz-raw://a8e5989318021ed8866f03537c649c12fb75831859df5198028e5a4430494799\",\"dweb:/ipfs/QmWCPALgJvVfq3aveqEyRcquEckdeHFFbD7ATuraMAVaer\"]},\"/home/kowal/Projects/sovryn/keep-ecdsa/solidity/contracts/fully-backed/FullyBackedBonding.sol\":{\"keccak256\":\"0x6943aec677ad9ac1da3ac0b3ad79ce3da95e49f7640fb5c0d2662cbcf84cc26b\",\"urls\":[\"bzz-raw://952c9bdf6ca861aaa84286ceef3e550fb89947ee5b13c2996569651ce3880e3b\",\"dweb:/ipfs/QmS24wQNkQq7oNs3oKz5PdCL3Jt7b93RjoRye5ur4rznzr\"]},\"/home/kowal/Projects/sovryn/keep-ecdsa/solidity/contracts/test/FullyBackedBondingStub.sol\":{\"keccak256\":\"0xf30ea3657b19f023ace5f1c863f40f59c74f11d00c643c3d6f1158e2a8911d6c\",\"urls\":[\"bzz-raw://855eaefeb2298367dc58c1f78d95f67e82d4f7f5792f8ffac71d86e757a3aac8\",\"dweb:/ipfs/QmRwExCwuqjmKsJxL1kafvwNPuNKHsEtZH9fapC865vKBe\"]},\"@keep-network/keep-core/contracts/Authorizations.sol\":{\"keccak256\":\"0xd49b3840507c924cc37ac2da48bf1549013a79d84daf2cb106b4d4b9c6096e7a\",\"urls\":[\"bzz-raw://2b740d974564d027f9df04253f71ce2314839a682beac926b778e0f7ea59fbb5\",\"dweb:/ipfs/QmamRuiYLpt2fCUPrQypkvrf7BrCsdV12QgaSHQYPsJHT2\"]},\"@keep-network/keep-core/contracts/KeepRegistry.sol\":{\"keccak256\":\"0x723cf0ade28c4158935e6c22f1da1ee98252ad1bc1cac30fe8fa462fe36ea886\",\"urls\":[\"bzz-raw://6244a0370c42ae7bac430e646694d64b80397e02209ae9ec1e01776e6b5a49fc\",\"dweb:/ipfs/QmcygjqGFv81ZpyKTUwdMRt1VdnM9H6pGUuKAP5YLmL5U8\"]},\"@keep-network/keep-core/contracts/StakeDelegatable.sol\":{\"keccak256\":\"0xa1d81d17bc9f6bcc5878fb9b8acfdf7797c1561bf35111bac6bdbc3bba2c62aa\",\"urls\":[\"bzz-raw://deca3e5444cd9a5546818854009f9ac8c8e58479609de1a128ca73863f10ae7a\",\"dweb:/ipfs/QmcWYJkcHxsmCEhxRz6W5gSBgH597VYZgEaog9pzoLyZtt\"]},\"@keep-network/keep-core/contracts/utils/OperatorParams.sol\":{\"keccak256\":\"0xc13cbf7a6ad4740a8ad6373229b20b66eb4cc3d7aa9870161765ab8197513ab7\",\"urls\":[\"bzz-raw://e8343bc058fcee610863777792a25608549d80e126a05d076481dedb48587565\",\"dweb:/ipfs/QmR8ztc4StcK4yw7QmXj2b9TtS3Qs1BERrqDLtPZmUiffS\"]},\"@keep-network/sortition-pools/contracts/api/IBonding.sol\":{\"keccak256\":\"0xe62ea5302af749042e419ad1643f0e9788bbbefe82a5c5d0b3e77a4a5a4b241e\",\"urls\":[\"bzz-raw://3ac748582f07716200c2f500aee47a8c2a79c1144fe3454e112290906cb3dfbf\",\"dweb:/ipfs/QmdNqK1V25QB1asWyWJfsSAVxorTjBp8DXG5eXw71e31rM\"]},\"@keep-network/sortition-pools/contracts/api/IFullyBackedBonding.sol\":{\"keccak256\":\"0x7ae54969ff6989a2b918d49c4cc1a795b93eb8c03e64ad4e25aff3a0be82d05d\",\"urls\":[\"bzz-raw://baf7230f6934530351131f02817fa8ac5e96bbc5898ef3dc86db9d313101d707\",\"dweb:/ipfs/QmPaTsArVgnJaKKWTiM4KD8TQbihg8mymWWr7Qy6Cc6d7e\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x4ccf2d7b51873db1ccfd54ca2adae5eac3b184f9699911ed4490438419f1c690\",\"urls\":[\"bzz-raw://d62d769b2219d5de39013093412623e624fa887f871826ea3bae6052ee893610\",\"dweb:/ipfs/QmV3yVktya1s617QmuzQR2CfuJgUi3dR2xEZY9ecmqZ2G1\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x852793a3c2f86d336a683b30d688ec3dcfc57451af5a2bf5975cda3b7191a901\",\"urls\":[\"bzz-raw://4f5b57664069671648fb81f55b0082faecdf1b2f159eec6b1fa6cef9b7d73bc5\",\"dweb:/ipfs/QmcyytaLs7zFdb4Uu7C5PmQRhQdB3wA3fUdkV6mkYfdDFH\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x90e8c2521653bbb1768b05889c5760031e688d9cd361f167489b89215e201b95\",\"urls\":[\"bzz-raw://d0abb99bb8bfc2bc0a89902b8ed1dc0442ad08cc78cee64c291b3df6a27bcccc\",\"dweb:/ipfs/QmP5NaEwZthQeM2ESz4WTT3osrP7jhbvu7ocbttBi2JAw6\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101e45760003560e01c80637ab3cf931161010f578063cbe945dc116100a2578063f165478311610071578063f165478314610c7b578063f52564ec14610cdf578063fab46d6614610d43578063fb1677b114610da2576101e4565b8063cbe945dc14610a95578063d20a62fc14610b19578063d6f7ddf914610bb1578063ef1f966114610bff576101e4565b8063aed1ec72116100de578063aed1ec7214610921578063ba7bffd31461093f578063c5786174146109c3578063c8820f6c14610a27576101e4565b80637ab3cf93146107bb57806384d5768914610809578063972f245714610865578063a590ae36146108dd576101e4565b806342bcb965116101875780636258b75d116101565780636258b75d1461063b5780636741f9121461065957806370a08231146106e757806378f011c11461073f576101e4565b806342bcb9651461047b578063446f0f9e1461051357806347e7ef24146105955780635823cfad146105e3576101e4565b80630cb0a677116101c35780630cb0a677146102b95780631133fd2c1461033157806314afd79e1461037b57806330315f62146103ff576101e4565b8062f714ce146101e9578063063cb844146102375780630b10247114610255575b600080fd5b610235600480360360408110156101ff57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e26565b005b61023f610f54565b6040518082815260200191505060405180910390f35b6102b76004803603604081101561026b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f61565b005b61032f600480360360808110156102cf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506110a3565b005b61033961142f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103bd6004803603602081101561039157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611454565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104616004803603604081101561041557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506114c0565b604051808215151515815260200191505060405180910390f35b6104fd6004803603606081101561049157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061152c565b6040518082815260200191505060405180910390f35b61057f6004803603606081101561052957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611684565b6040518082815260200191505060405180910390f35b6105e1600480360360408110156105ab57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061173c565b005b610625600480360360208110156105f957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b4d565b6040518082815260200191505060405180910390f35b610643611b65565b6040518082815260200191505060405180910390f35b6106e56004803603608081101561066f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611b6b565b005b610729600480360360208110156106fd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061209e565b6040518082815260200191505060405180910390f35b6107a16004803603604081101561075557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506120f2565b604051808215151515815260200191505060405180910390f35b610807600480360360408110156107d157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612186565b005b61084b6004803603602081101561081f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506123be565b604051808215151515815260200191505060405180910390f35b6108db6004803603608081101561087b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506124a9565b005b61091f600480360360208110156108f357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506127a5565b005b6109296129cf565b6040518082815260200191505060405180910390f35b6109816004803603602081101561095557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506129d5565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610a25600480360360408110156109d957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612a41565b005b610a9360048036036060811015610a3d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612b83565b005b610ad760048036036020811015610aab57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612f95565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610baf600480360360a0811015610b2f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061304a565b005b610bfd60048036036040811015610bc757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061332d565b005b610c6160048036036040811015610c1557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506133b1565b604051808215151515815260200191505060405180910390f35b610cdd60048036036040811015610c9157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061344d565b005b610d4160048036036040811015610cf557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506136b5565b005b610d8560048036036020811015610d5957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061373a565b604051808381526020018281526020019250505060405180910390f35b610de460048036036020811015610db857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506137a0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610e935750610e6481611454565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610ee8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526036815260200180613f5e6036913960400191505060405180910390fd5b610ef18161380c565b610f46576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526029815260200180613ee06029913960400191505060405180910390fd5b610f508282613876565b5050565b68022b1c8c1227a0000081565b3373ffffffffffffffffffffffffffffffffffffffff16610f81836137a0565b73ffffffffffffffffffffffffffffffffffffffff161461100a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f4e6f7420617574686f72697a656400000000000000000000000000000000000081525060200191505060405180910390fd5b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600082116110fc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180613f32602c913960400191505060405180910390fd5b60003390506000858286604051602001808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b81526014018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b815260140182815260200193505050506040516020818303038152906040528051906020012090508360036000838152602001908152602001600020541015611206576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526029815260200180613f096029913960400191505060405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050611252856003600085815260200190815260200160002054613b9890919063ffffffff16565b600360008481526020019081526020016000208190555060008173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb86886040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156112f257600080fd5b505af1158015611306573d6000803e3d6000fd5b505050506040513d602081101561131c57600080fd5b81019080805190602001909291905050509050806113a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f5472616e73666572206661696c6564000000000000000000000000000000000081525060200191505060405180910390fd5b868873ffffffffffffffffffffffffffffffffffffffff167ff8e947b47b515d01aa96426822ddcf23a08f42d8c2dbfd65e674ba824f5513828789604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a35050505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600080600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905061151284846133b1565b8015611523575061152281613c21565b5b91505092915050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166384d57689846040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156115cd57600080fd5b505afa1580156115e1573d6000803e3d6000fd5b505050506040513d60208110156115f757600080fd5b8101908080519060200190929190505050801561161a575061161984846133b1565b5b801561162c575061162b84836120f2565b5b1561167857600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905061167d565b600090505b9392505050565b600080848484604051602001808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b81526014018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b8152601401828152602001935050505060405160208183030381529060405280519060200120905060036000828152602001908152602001600020549150509392505050565b6000611747836129d5565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156117cf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180613eb86028913960400191505060405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050828173ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e86306040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b1580156118a757600080fd5b505afa1580156118bb573d6000803e3d6000fd5b505050506040513d60208110156118d157600080fd5b81019080805190602001909291905050501015611956576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f416c6c6f77616e636520697320746f6f206c6f7700000000000000000000000081525060200191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166323b872dd8530866040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b158015611a1157600080fd5b505af1158015611a25573d6000803e3d6000fd5b505050506040513d6020811015611a3b57600080fd5b810190808051906020019092919050505050611a9f83600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054613c4990919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167ffd586a32ad24d585b1f7b36ee48e66304ad7627b48b39a0ab1d8a3e84741ea2a856040518082815260200191505060405180910390a350505050565b60026020528060005260406000206000915090505481565b61a8c081565b6000339050600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415611c13576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f496e76616c6964206f70657261746f722061646472657373000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611cb6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f496e76616c696420617574686f72697a6572206164647265737300000000000081525060200191505060405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff16600860008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611dc3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180613e2d602b913960400191505060405180910390fd5b68022b1c8c1227a00000831015611e25576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526031815260200180613e876031913960400191505060405180910390fd5b6040518060800160405280611e3d6000426000613cd1565b81526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff16815250600860008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050611fc0868433612b83565b8573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4bc154dd35d6a5cb9206482ecb473cdbf2473006d6bce728b9cc0741bcc59ea260405160405180910390a38373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fa39bf252411ec873a14985aaddc5fc000c26cfa8001460a09b618e2e03c8f304866040518082815260200191505060405180910390a4505050505050565b60006120eb600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154613de8565b9050919050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60003390506000838284604051602001808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b81526014018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b8152601401828152602001935050505060405160208183030381529060405280519060200120905060006003600083815260200190815260200160002054116122ad576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f426f6e64206e6f7420666f756e6400000000000000000000000000000000000081525060200191505060405180910390fd5b6000600360008381526020019081526020016000205490506000600360008481526020019081526020016000208190555061233081600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054613c4990919063ffffffff16565b600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550838573ffffffffffffffffffffffffffffffffffffffff167f60b8ef4216791426b3d7acfb0b6d11a400872350afd70a3ce5ebf62bea7cb0d460405160405180910390a35050505050565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166384d5768961240784612f95565b6040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561246757600080fd5b505afa15801561247b573d6000803e3d6000fd5b505050506040513d602081101561249157600080fd5b81019080805190602001909291905050509050919050565b60003390506000858286604051602001808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b81526014018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b8152601401828152602001935050505060405160208183030381529060405280519060200120905060006003600083815260200190815260200160002054116125d0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f426f6e64206e6f7420666f756e6400000000000000000000000000000000000081525060200191505060405180910390fd5b6000868585604051602001808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b81526014018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b8152601401828152602001935050505060405160208183030381529060405280519060200120905060006003600083815260200190815260200160002054146126d5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180613e58602f913960400191505060405180910390fd5b6003600083815260200190815260200160002054600360008381526020019081526020016000208190555060006003600084815260200190815260200160002081905550858773ffffffffffffffffffffffffffffffffffffffff167fb1d917176802bfbc813f2d82e745526029a4ccf0ea98d14e7a09a08703595b1e8787604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a350505050505050565b806127af816123be565b612821576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4f70657261746f7220636f6e747261637420756e617070726f7665640000000081525060200191505060405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1663d870c034336040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b1580156128a057600080fd5b505af11580156128b4573d6000803e3d6000fd5b505050506040513d60208110156128ca57600080fd5b810190808051906020019092919050505061294d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f556e7265636f676e697a656420636c61696d616e74000000000000000000000081525060200191505060405180910390fd5b81600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60095481565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b3373ffffffffffffffffffffffffffffffffffffffff16612a61836137a0565b73ffffffffffffffffffffffffffffffffffffffff1614612aea576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f4e6f7420617574686f72697a656400000000000000000000000000000000000081525060200191505060405180910390fd5b6001600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6000612b8e846129d5565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612c16576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180613eb86028913960400191505060405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050838173ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e85306040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b158015612cee57600080fd5b505afa158015612d02573d6000803e3d6000fd5b505050506040513d6020811015612d1857600080fd5b81019080805190602001909291905050501015612d9d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f416c6c6f77616e6365206f66205f736f7572636520697320746f6f206c6f770081525060200191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166323b872dd8430876040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b158015612e5857600080fd5b505af1158015612e6c573d6000803e3d6000fd5b505050506040513d6020811015612e8257600080fd5b810190808051906020019092919050505050612ee684600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054613c4990919063ffffffff16565b600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167ffd586a32ad24d585b1f7b36ee48e66304ad7627b48b39a0ab1d8a3e84741ea2a866040518082815260200191505060405180910390a35050505050565b600080600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156130385782915050613045565b61304181612f95565b9150505b919050565b8161305686338461152c565b10156130ca576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f496e73756666696369656e7420756e626f6e6465642076616c7565000000000081525060200191505060405180910390fd5b6000858585604051602001808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b81526014018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b8152601401828152602001935050505060405160208183030381529060405280519060200120905060006003600083815260200190815260200160002054146131cf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180613e58602f913960400191505060405180910390fd5b61322183600260008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054613b9890919063ffffffff16565b600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061328a836003600084815260200190815260200160002054613c4990919063ffffffff16565b60036000838152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fa5543d8e139d9ab4342d5c4f6ec1bff5a97f9a52d71f7ffe9845b94f1449fc918787604051808381526020018281526020019250505060405180910390a4505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905061335e838333612b83565b8273ffffffffffffffffffffffffffffffffffffffff167fee1e07016afd2b0494337cfa45092b70aaeadd1c5ec9c3a3d1a763761a1df49a836040518082815260200191505060405180910390a2505050565b6000600560006133c084612f95565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b80613457816123be565b6134c9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4f70657261746f7220636f6e747261637420756e617070726f7665640000000081525060200191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166134e9846137a0565b73ffffffffffffffffffffffffffffffffffffffff1614613572576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f4e6f74206f70657261746f7220617574686f72697a657200000000000000000081525060200191505060405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1661359283612f95565b73ffffffffffffffffffffffffffffffffffffffff161461361b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f44656c65676174656420617574686f726974792075736564000000000000000081525060200191505060405180910390fd5b6001600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505050565b80600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000806000600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905061378d81613e02565b61379682613e19565b9250925050915091565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061386d61a8c061385f600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154613e02565b613c4990919063ffffffff16565b42119050919050565b81600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561392b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f496e73756666696369656e7420756e626f6e6465642076616c7565000000000081525060200191505060405180910390fd5b61397d82600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054613b9890919063ffffffff16565b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060006139cb826129d5565b905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84876040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015613a7c57600080fd5b505af1158015613a90573d6000803e3d6000fd5b505050506040513d6020811015613aa657600080fd5b8101908080519060200190929190505050905080613b2c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f5472616e73666572206661696c6564000000000000000000000000000000000081525060200191505060405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f5ebf1d16423ab39117c0ca9327215b5bcd423aaf7042044c87248a4423d252d9876040518082815260200191505060405180910390a35050505050565b600082821115613c10576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b6000613c40600954613c3284613e02565b613c4990919063ffffffff16565b42119050919050565b600080828401905083811015613cc7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b60006001608060020a03841115613d50576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f75696e74313238206f766572666c6f770000000000000000000000000000000081525060200191505060405180910390fd5b6001604060020a038284171115613dcf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f75696e743634206f766572666c6f77000000000000000000000000000000000081525060200191505060405180910390fd5b81604084901b604060020286901b171790509392505050565b60006001608060020a03604060020283901c169050919050565b60006001604060020a03604083901c169050919050565b60006001604060020a038216905091905056fe46756c6c794261636b6564426f6e64696e673a204f70657261746f7220616c726561647920696e207573655265666572656e6365204944206e6f7420756e6971756520666f7220686f6c64657220616e64206f70657261746f7246756c6c794261636b6564426f6e64696e673a20496e73756666696369656e742064656c65676174696f6e2076616c756542656e6566696369617279206e6f7420646566696e656420666f7220746865206f70657261746f7244656c65676174696f6e206c6f636b20706572696f6420686173206e6f74207061737365642079657452657175657374656420616d6f756e742069732067726561746572207468616e2074686520626f6e6452657175657374656420616d6f756e742073686f756c642062652067726561746572207468616e207a65726f4f6e6c79206f70657261746f72206f7220746865206f776e657220697320616c6c6f77656420746f20776974686472617720626f6e64a265627a7a723158206bb6482bb45389deda9eb7789fce68426cf8749501260f35fc3bb932d067d00e64736f6c63430005110032",
  "sourceMap": "226:615:34:-;;;398:279;8:9:-1;5:2;;;30:1;27;20:12;5:2;398:279:34;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;398:279:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;581:13;608:21;643:17;3912:13:22;3854;3870:17;4037:15:1;4013:8;;:40;;;;;;;;;;;;;;;;;;4082:17;4063:16;;:36;;;;;;;;;;;;;;;;;;3932:174;;4281:9:46;4270:8;;:20;;;;;;;;;;;;;;;;;;4217:80;3964:21:22;3941:20;:44;;;;3679:313;;;398:279:34;;;226:615;;;;;;",
  "deployedSourceMap": "226:615:34:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;226:615:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7835:407:22;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7835:407:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2986:61;;;:::i;:::-;;;;;;;;;;;;;;;;;;;13831:251:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13831:251:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;12034:782;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;12034:782:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2322:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2744:116:55;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2744:116:55;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;7016:313:22;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7016:313:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;7001:599:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7001:599:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;9338:276;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9338:276:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4242:884;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4242:884:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2532:48;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2532:48:1;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3205:57:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4621:1014;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;4621:1014:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2485:143:55;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2485:143:55;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;14255:195:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14255:195:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;11130:468;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11130:468:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7195:258:46;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7195:258:46;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;10048:758:1;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;10048:758:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6421:366:46;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6421:366:46;;;;;;;;;;;;;;;;;;;:::i;:::-;;3269:35:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2976:136:55;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2976:136:55;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;13171:248:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13171:248:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5131:913;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5131:913:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7868:348:46;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7868:348:46;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;8127:932:1;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;8127:932:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6440:217:22;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6440:217:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5653:216:46;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5653:216:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4939:476;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4939:476:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;683:156:34;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;683:156:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8566:344:22;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8566:344:22;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;3226:126:55;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3226:126:55;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;7835:407:22;7939:8;7925:22;;:10;:22;;;:57;;;;7965:17;7973:8;7965:7;:17::i;:::-;7951:31;;:10;:31;;;7925:57;7904:158;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8094:33;8118:8;8094:23;:33::i;:::-;8073:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8205:30;8218:6;8226:8;8205:12;:30::i;:::-;7835:407;;:::o;2986:61::-;3039:8;2986:61;:::o;13831:251:1:-;13988:10;13961:37;;:23;13974:9;13961:12;:23::i;:::-;:37;;;13953:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14070:5;14027:15;:26;14043:9;14027:26;;;;;;;;;;;;;;;:40;14054:12;14027:40;;;;;;;;;;;;;;;;:48;;;;;;;;;;;;;;;;;;13831:251;;:::o;12034:782::-;12201:1;12192:6;:10;12184:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12262:14;12279:10;12262:27;;12299:14;12355:8;12365:6;12373:11;12338:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;12338:47:1;;;12328:58;;;;;;12299:87;;12441:6;12418:11;:19;12430:6;12418:19;;;;;;;;;;;;:29;;12397:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12525:15;12549:16;;;;;;;;;;;12525:41;;12598:31;12622:6;12598:11;:19;12610:6;12598:19;;;;;;;;;;;;:23;;:31;;;;:::i;:::-;12576:11;:19;12588:6;12576:19;;;;;;;;;;;:53;;;;12640:12;12655:9;:18;;;12674:11;12687:6;12655:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12655:39:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12655:39:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12655:39:1;;;;;;;;;;;;;;;;12640:54;;12712:7;12704:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12776:11;12766:8;12755:54;;;12789:11;12802:6;12755:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;12034:782;;;;;;;;:::o;2322:31::-;;;;;;;;;;;;;:::o;2744:116:55:-;2801:7;2827:9;:20;2837:9;2827:20;;;;;;;;;;;;;;;:26;;;;;;;;;;;;2820:33;;2744:116;;;:::o;7016:313:22:-;7123:4;7143:22;7168:9;:19;7178:8;7168:19;;;;;;;;;;;;;;;:32;;;7143:57;;7230:46;7254:8;7264:11;7230:23;:46::i;:::-;:92;;;;;7292:30;7307:14;7292;:30::i;:::-;7230:92;7211:111;;;7016:313;;;;:::o;7001:599:1:-;7156:7;7323:8;;;;;;;;;;;:35;;;7359:11;7323:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7323:48:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7323:48:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7323:48:1;;;;;;;;;;;;;;;;:110;;;;;7387:46;7411:8;7421:11;7387:23;:46::i;:::-;7323:110;:186;;;;;7449:60;7475:8;7485:23;7449:25;:60::i;:::-;7323:186;7306:269;;;7541:13;:23;7555:8;7541:23;;;;;;;;;;;;;;;;7534:30;;;;7306:269;7592:1;7585:8;;7001:599;;;;;;:::o;9338:276::-;9464:7;9483:14;9539:8;9549:6;9557:11;9522:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;9522:47:1;;;9512:58;;;;;;9483:87;;9588:11;:19;9600:6;9588:19;;;;;;;;;;;;9581:26;;;9338:276;;;;;:::o;4242:884::-;4311:19;4333:23;4347:8;4333:13;:23::i;:::-;4311:45;;4661:1;4638:25;;:11;:25;;;;4617:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4739:15;4763:16;;;;;;;;;;;4739:41;;4859:7;4811:9;:19;;;4831:8;4849:4;4811:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4811:44:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4811:44:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4811:44:1;;;;;;;;;;;;;;;;:55;;4790:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4922:9;:22;;;4945:8;4963:4;4970:7;4922:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4922:56:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4922:56:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4922:56:1;;;;;;;;;;;;;;;;;5014:36;5042:7;5014:13;:23;5028:8;5014:23;;;;;;;;;;;;;;;;:27;;:36;;;;:::i;:::-;4988:13;:23;5002:8;4988:23;;;;;;;;;;;;;;;:62;;;;5098:11;5065:54;;5088:8;5065:54;;;5111:7;5065:54;;;;;;;;;;;;;;;;;;4242:884;;;;:::o;2532:48::-;;;;;;;;;;;;;;;;;:::o;3205:57:22:-;3254:8;3205:57;:::o;4621:1014::-;4780:13;4796:10;4780:26;;4845:1;4825:22;;:8;:22;;;;4817:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4916:1;4894:24;;:10;:24;;;;4886:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4959:15;4983:16;;;;;;;;;;;4959:41;;5069:1;5032:39;;:9;:19;5042:8;5032:19;;;;;;;;;;;;;;;:25;;;;;;;;;;;;:39;;;5011:129;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3039:8;5172:7;:37;;5151:133;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5316:142;;;;;;;;5338:42;5358:1;5361:15;5378:1;5338:19;:42::i;:::-;5316:142;;;;5394:5;5316:142;;;;;;5413:11;5316:142;;;;;;5438:10;5316:142;;;;;5294:9;:19;5304:8;5294:19;;;;;;;;;;;;;;;:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5469:41;5480:8;5490:7;5499:10;5469;:41::i;:::-;5543:8;5526:26;;5536:5;5526:26;;;;;;;;;;;;5608:10;5567:61;;5595:11;5567:61;;5585:8;5567:61;;;5620:7;5567:61;;;;;;;;;;;;;;;;;;4621:1014;;;;;;:::o;2485:143:55:-;2543:15;2577:44;:9;:19;2587:8;2577:19;;;;;;;;;;;;;;;:32;;;:42;:44::i;:::-;2570:51;;2485:143;;;:::o;14255:195:1:-;14376:4;14403:15;:26;14419:9;14403:26;;;;;;;;;;;;;;;:40;14430:12;14403:40;;;;;;;;;;;;;;;;;;;;;;;;;14396:47;;14255:195;;;;:::o;11130:468::-;11204:14;11221:10;11204:27;;11241:14;11297:8;11307:6;11315:11;11280:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;11280:47:1;;;11270:58;;;;;;11241:87;;11369:1;11347:11;:19;11359:6;11347:19;;;;;;;;;;;;:23;11339:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11400:14;11417:11;:19;11429:6;11417:19;;;;;;;;;;;;11400:36;;11468:1;11446:11;:19;11458:6;11446:19;;;;;;;;;;;:23;;;;11505:35;11533:6;11505:13;:23;11519:8;11505:23;;;;;;;;;;;;;;;;:27;;:35;;;;:::i;:::-;11479:13;:23;11493:8;11479:23;;;;;;;;;;;;;;;:61;;;;11579:11;11569:8;11556:35;;;;;;;;;;;;11130:468;;;;;:::o;7195:258:46:-;7303:4;7342:8;;;;;;;;;;;:35;;;7395:37;7414:17;7395:18;:37::i;:::-;7342:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7342:104:46;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7342:104:46;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7342:104:46;;;;;;;;;;;;;;;;7323:123;;7195:258;;;:::o;10048:758:1:-;10207:14;10224:10;10207:27;;10244:14;10300:8;10310:6;10318:11;10283:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;10283:47:1;;;10273:58;;;;;;10244:87;;10372:1;10350:11;:19;10362:6;10350:19;;;;;;;;;;;;:23;10342:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10403:17;10462:8;10472:9;10483:14;10445:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;10445:53:1;;;10435:64;;;;;;10403:96;;10557:1;10531:11;:22;10543:9;10531:22;;;;;;;;;;;;:27;10510:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10667:11;:19;10679:6;10667:19;;;;;;;;;;;;10642:11;:22;10654:9;10642:22;;;;;;;;;;;:44;;;;10718:1;10696:11;:19;10708:6;10696:19;;;;;;;;;;;:23;;;;10760:11;10750:8;10735:64;;;10773:9;10784:14;10735:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;10048:758;;;;;;;:::o;6421:366:46:-;6538:24;4095:44;4122:16;4095:26;:44::i;:::-;4074:119;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6614:24;6595:59;;;6655:10;6595:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6595:71:46;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6595:71:46;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6595:71:46;;;;;;;;;;;;;;;;6574:139;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6756:24;6723:18;:30;6742:10;6723:30;;;;;;;;;;;;;;;;:57;;;;;;;;;;;;;;;;;;6421:366;;:::o;3269:35:22:-;;;;:::o;2976:136:55:-;3039:15;3073:9;:20;3083:9;3073:20;;;;;;;;;;;;;;;:32;;;;;;;;;;;;3066:39;;2976:136;;;:::o;13171:248:1:-;13326:10;13299:37;;:23;13312:9;13299:12;:23::i;:::-;:37;;;13291:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13408:4;13365:15;:26;13381:9;13365:26;;;;;;;;;;;;;;;:40;13392:12;13365:40;;;;;;;;;;;;;;;;:47;;;;;;;;;;;;;;;;;;13171:248;;:::o;5131:913::-;5220:19;5242:23;5256:8;5242:13;:23::i;:::-;5220:45;;5570:1;5547:25;;:11;:25;;;;5526:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5648:15;5672:16;;;;;;;;;;;5648:41;;5767:7;5720:9;:19;;;5740:7;5757:4;5720:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5720:43:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5720:43:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5720:43:1;;;;;;;;;;;;;;;;:54;;5699:132;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5841:9;:22;;;5864:7;5881:4;5888:7;5841:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5841:55:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5841:55:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5841:55:1;;;;;;;;;;;;;;;;;5932:36;5960:7;5932:13;:23;5946:8;5932:23;;;;;;;;;;;;;;;;:27;;:36;;;;:::i;:::-;5906:13;:23;5920:8;5906:23;;;;;;;;;;;;;;;:62;;;;6016:11;5983:54;;6006:8;5983:54;;;6029:7;5983:54;;;;;;;;;;;;;;;;;;5131:913;;;;;:::o;7868:348:46:-;7957:7;7976:32;8011:18;:36;8030:16;8011:36;;;;;;;;;;;;;;;;;;;;;;;;;7976:71;;8097:1;8061:38;;:24;:38;;;8057:92;;;8122:16;8115:23;;;;;8057:92;8165:44;8184:24;8165:18;:44::i;:::-;8158:51;;;7868:348;;;;:::o;8127:932:1:-;8470:6;8335:131;8375:8;8401:10;8429:23;8335:22;:131::i;:::-;:141;;8314:215;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8540:14;8596:8;8606:6;8614:11;8579:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;8579:47:1;;;8569:58;;;;;;8540:87;;8682:1;8659:11;:19;8671:6;8659:19;;;;;;;;;;;;:24;8638:118;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8793:35;8821:6;8793:13;:23;8807:8;8793:23;;;;;;;;;;;;;;;;:27;;:35;;;;:::i;:::-;8767:13;:23;8781:8;8767:23;;;;;;;;;;;;;;;:61;;;;8860:31;8884:6;8860:11;:19;8872:6;8860:19;;;;;;;;;;;;:23;;:31;;;;:::i;:::-;8838:11;:19;8850:6;8838:19;;;;;;;;;;;:53;;;;8974:23;8907:145;;8954:6;8907:145;;8932:8;8907:145;;;9011:11;9036:6;8907:145;;;;;;;;;;;;;;;;;;;;;;;;8127:932;;;;;;:::o;6440:217:22:-;6507:15;6531:16;;;;;;;;;;;6507:41;;6558;6569:8;6579:7;6588:10;6558;:41::i;:::-;6632:8;6615:35;;;6642:7;6615:35;;;;;;;;;;;;;;;;;;6440:217;;;:::o;5653:216:46:-;5775:4;5798:14;:53;5813:37;5832:17;5813:18;:37::i;:::-;5798:53;;;;;;;;;;;;;;;:64;5852:9;5798:64;;;;;;;;;;;;;;;;;;;;;;;;;5791:71;;5653:216;;;;:::o;4939:476::-;5072:17;4095:44;4122:16;4095:26;:44::i;:::-;4074:119;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5149:10;5122:37;;:23;5135:9;5122:12;:23::i;:::-;:37;;;5101:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5280:17;5239:58;;:37;5258:17;5239:18;:37::i;:::-;:58;;;5218:129;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5404:4;5357:14;:33;5372:17;5357:33;;;;;;;;;;;;;;;:44;5391:9;5357:44;;;;;;;;;;;;;;;;:51;;;;;;;;;;;;;;;;;;4939:476;;;:::o;683:156:34:-;820:12;785:9;:20;795:9;785:20;;;;;;;;;;;;;;;:32;;;:47;;;;;;;;;;;;;;;;;;683:156;;:::o;8566:344:22:-;8656:17;8675:21;8712:22;8737:9;:19;8747:8;8737:19;;;;;;;;;;;;;;;:32;;;8712:57;;8801:37;:14;:35;:37::i;:::-;8852:41;:14;:39;:41::i;:::-;8780:123;;;;;8566:344;;;:::o;3226:126:55:-;3288:7;3314:9;:20;3324:9;3314:20;;;;;;;;;;;;;;;:31;;;;;;;;;;;;3307:38;;3226:126;;;:::o;9400:287:22:-;9498:4;9567:113;3254:8;9567:55;:9;:19;9577:8;9567:19;;;;;;;;;;;;;;;:32;;;:53;:55::i;:::-;:59;;:113;;;;:::i;:::-;9537:15;:143;9518:162;;9400:287;;;:::o;15501:546:1:-;15624:6;15597:13;:23;15611:8;15597:23;;;;;;;;;;;;;;;;:33;;15576:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15720:35;15748:6;15720:13;:23;15734:8;15720:23;;;;;;;;;;;;;;;;:27;;:35;;;;:::i;:::-;15694:13;:23;15708:8;15694:23;;;;;;;;;;;;;;;:61;;;;15766:19;15788:23;15802:8;15788:13;:23::i;:::-;15766:45;;15821:15;15845:16;;;;;;;;;;;15821:41;;15872:12;15887:9;:18;;;15906:11;15919:6;15887:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15887:39:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15887:39:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15887:39:1;;;;;;;;;;;;;;;;15872:54;;15944:7;15936:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16020:11;15987:53;;16010:8;15987:53;;;16033:6;15987:53;;;;;;;;;;;;;;;;;;15501:546;;;;;:::o;1274:179:94:-;1332:7;1364:1;1359;:6;;1351:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1410:9;1426:1;1422;:5;1410:17;;1445:1;1438:8;;;1274:179;;;;:::o;8982:234:22:-;9077:4;9146:63;9188:20;;9146:37;:14;:35;:37::i;:::-;:41;;:63;;;;:::i;:::-;9116:15;:93;9097:112;;8982:234;;;:::o;834:176:94:-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;1143:717:70:-;1268:7;1022:1;899:3;1003:1;:15;1002:21;1402:6;:20;;1381:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;965:1;859:2;943:1;:18;942:24;1693:13;1681:9;:25;1680:44;;1659:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1839:13;859:2;1809:9;:27;;859:2;1117:1;:19;1784:6;:22;;:52;:68;1776:77;;1143:717;;;;;:::o;2190:148::-;2262:7;1022:1;899:3;1003:1;:15;1002:21;859:2;1117:1;:19;2289:12;:28;;2288:43;2281:50;;2190:148;;;:::o;2619:164::-;2702:7;965:1;859:2;943:1;:18;942:24;859:2;2729:12;:30;;2728:48;2721:55;;2619:164;;;:::o;3086:148::-;3173:7;965:1;859:2;943:1;:18;942:24;3199:12;:28;3192:35;;3086:148;;;:::o",
  "source": "pragma solidity 0.5.17;\n\nimport \"../fully-backed/FullyBackedBonding.sol\";\n\nimport \"openzeppelin-solidity/contracts/math/SafeMath.sol\";\n\n/// @title Fully Backed Bonding Stub\n/// @dev This contract is for testing purposes only.\ncontract FullyBackedBondingStub is FullyBackedBonding {\n    // using SafeMath for uint256;\n    // // address public delegatedAuthority;\n    // bool slashingShouldFail;\n    constructor(\n        KeepRegistry _keepRegistry,\n        uint256 _initializationPeriod,\n        address _bondTokenAddress\n    )\n        public\n        FullyBackedBonding(\n            _keepRegistry,\n            _initializationPeriod,\n            _bondTokenAddress\n        )\n    {}\n\n    function setBeneficiary(address _operator, address payable _beneficiary)\n        public\n    {\n        operators[_operator].beneficiary = _beneficiary;\n    }\n}\n",
  "sourcePath": "/home/kowal/Projects/sovryn/keep-ecdsa/solidity/contracts/test/FullyBackedBondingStub.sol",
  "ast": {
    "absolutePath": "/home/kowal/Projects/sovryn/keep-ecdsa/solidity/contracts/test/FullyBackedBondingStub.sol",
    "exportedSymbols": {
      "FullyBackedBondingStub": [
        7327
      ]
    },
    "id": 7328,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7292,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:34"
      },
      {
        "absolutePath": "/home/kowal/Projects/sovryn/keep-ecdsa/solidity/contracts/fully-backed/FullyBackedBonding.sol",
        "file": "../fully-backed/FullyBackedBonding.sol",
        "id": 7293,
        "nodeType": "ImportDirective",
        "scope": 7328,
        "sourceUnit": 6157,
        "src": "25:48:34",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 7294,
        "nodeType": "ImportDirective",
        "scope": 7328,
        "sourceUnit": 21470,
        "src": "75:59:34",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7295,
              "name": "FullyBackedBonding",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6156,
              "src": "261:18:34",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FullyBackedBonding_$6156",
                "typeString": "contract FullyBackedBonding"
              }
            },
            "id": 7296,
            "nodeType": "InheritanceSpecifier",
            "src": "261:18:34"
          }
        ],
        "contractDependencies": [
          1865,
          5839,
          6156,
          8047,
          8217,
          11180,
          20948,
          20963
        ],
        "contractKind": "contract",
        "documentation": "@title Fully Backed Bonding Stub\n @dev This contract is for testing purposes only.",
        "fullyImplemented": true,
        "id": 7327,
        "linearizedBaseContracts": [
          7327,
          6156,
          11180,
          8217,
          8047,
          1865,
          5839,
          20963,
          20948
        ],
        "name": "FullyBackedBondingStub",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 7310,
              "nodeType": "Block",
              "src": "675:2:34",
              "statements": []
            },
            "documentation": null,
            "id": 7311,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 7305,
                    "name": "_keepRegistry",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7298,
                    "src": "581:13:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_KeepRegistry_$8815",
                      "typeString": "contract KeepRegistry"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 7306,
                    "name": "_initializationPeriod",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7300,
                    "src": "608:21:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 7307,
                    "name": "_bondTokenAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7302,
                    "src": "643:17:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 7308,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7304,
                  "name": "FullyBackedBonding",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6156,
                  "src": "549:18:34",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_FullyBackedBonding_$6156_$",
                    "typeString": "type(contract FullyBackedBonding)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "549:121:34"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7298,
                  "name": "_keepRegistry",
                  "nodeType": "VariableDeclaration",
                  "scope": 7311,
                  "src": "419:26:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_KeepRegistry_$8815",
                    "typeString": "contract KeepRegistry"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 7297,
                    "name": "KeepRegistry",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8815,
                    "src": "419:12:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_KeepRegistry_$8815",
                      "typeString": "contract KeepRegistry"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7300,
                  "name": "_initializationPeriod",
                  "nodeType": "VariableDeclaration",
                  "scope": 7311,
                  "src": "455:29:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7299,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "455:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7302,
                  "name": "_bondTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 7311,
                  "src": "494:25:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7301,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "494:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "409:116:34"
            },
            "returnParameters": {
              "id": 7309,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "675:0:34"
            },
            "scope": 7327,
            "src": "398:279:34",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7325,
              "nodeType": "Block",
              "src": "775:64:34",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 7318,
                          "name": "operators",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11116,
                          "src": "785:9:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Operator_$11125_storage_$",
                            "typeString": "mapping(address => struct StakeDelegatable.Operator storage ref)"
                          }
                        },
                        "id": 7320,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 7319,
                          "name": "_operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7313,
                          "src": "795:9:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "785:20:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Operator_$11125_storage",
                          "typeString": "struct StakeDelegatable.Operator storage ref"
                        }
                      },
                      "id": 7321,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "beneficiary",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11122,
                      "src": "785:32:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 7322,
                      "name": "_beneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7315,
                      "src": "820:12:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "785:47:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 7324,
                  "nodeType": "ExpressionStatement",
                  "src": "785:47:34"
                }
              ]
            },
            "documentation": null,
            "id": 7326,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setBeneficiary",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7316,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7313,
                  "name": "_operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 7326,
                  "src": "707:17:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7312,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "707:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7315,
                  "name": "_beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 7326,
                  "src": "726:28:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 7314,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "726:15:34",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "706:49:34"
            },
            "returnParameters": {
              "id": 7317,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "775:0:34"
            },
            "scope": 7327,
            "src": "683:156:34",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 7328,
        "src": "226:615:34"
      }
    ],
    "src": "0:842:34"
  },
  "legacyAST": {
    "absolutePath": "/home/kowal/Projects/sovryn/keep-ecdsa/solidity/contracts/test/FullyBackedBondingStub.sol",
    "exportedSymbols": {
      "FullyBackedBondingStub": [
        7327
      ]
    },
    "id": 7328,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7292,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:34"
      },
      {
        "absolutePath": "/home/kowal/Projects/sovryn/keep-ecdsa/solidity/contracts/fully-backed/FullyBackedBonding.sol",
        "file": "../fully-backed/FullyBackedBonding.sol",
        "id": 7293,
        "nodeType": "ImportDirective",
        "scope": 7328,
        "sourceUnit": 6157,
        "src": "25:48:34",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 7294,
        "nodeType": "ImportDirective",
        "scope": 7328,
        "sourceUnit": 21470,
        "src": "75:59:34",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7295,
              "name": "FullyBackedBonding",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6156,
              "src": "261:18:34",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FullyBackedBonding_$6156",
                "typeString": "contract FullyBackedBonding"
              }
            },
            "id": 7296,
            "nodeType": "InheritanceSpecifier",
            "src": "261:18:34"
          }
        ],
        "contractDependencies": [
          1865,
          5839,
          6156,
          8047,
          8217,
          11180,
          20948,
          20963
        ],
        "contractKind": "contract",
        "documentation": "@title Fully Backed Bonding Stub\n @dev This contract is for testing purposes only.",
        "fullyImplemented": true,
        "id": 7327,
        "linearizedBaseContracts": [
          7327,
          6156,
          11180,
          8217,
          8047,
          1865,
          5839,
          20963,
          20948
        ],
        "name": "FullyBackedBondingStub",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 7310,
              "nodeType": "Block",
              "src": "675:2:34",
              "statements": []
            },
            "documentation": null,
            "id": 7311,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 7305,
                    "name": "_keepRegistry",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7298,
                    "src": "581:13:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_KeepRegistry_$8815",
                      "typeString": "contract KeepRegistry"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 7306,
                    "name": "_initializationPeriod",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7300,
                    "src": "608:21:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 7307,
                    "name": "_bondTokenAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7302,
                    "src": "643:17:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 7308,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7304,
                  "name": "FullyBackedBonding",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6156,
                  "src": "549:18:34",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_FullyBackedBonding_$6156_$",
                    "typeString": "type(contract FullyBackedBonding)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "549:121:34"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7298,
                  "name": "_keepRegistry",
                  "nodeType": "VariableDeclaration",
                  "scope": 7311,
                  "src": "419:26:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_KeepRegistry_$8815",
                    "typeString": "contract KeepRegistry"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 7297,
                    "name": "KeepRegistry",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8815,
                    "src": "419:12:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_KeepRegistry_$8815",
                      "typeString": "contract KeepRegistry"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7300,
                  "name": "_initializationPeriod",
                  "nodeType": "VariableDeclaration",
                  "scope": 7311,
                  "src": "455:29:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7299,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "455:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7302,
                  "name": "_bondTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 7311,
                  "src": "494:25:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7301,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "494:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "409:116:34"
            },
            "returnParameters": {
              "id": 7309,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "675:0:34"
            },
            "scope": 7327,
            "src": "398:279:34",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7325,
              "nodeType": "Block",
              "src": "775:64:34",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 7318,
                          "name": "operators",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11116,
                          "src": "785:9:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Operator_$11125_storage_$",
                            "typeString": "mapping(address => struct StakeDelegatable.Operator storage ref)"
                          }
                        },
                        "id": 7320,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 7319,
                          "name": "_operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7313,
                          "src": "795:9:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "785:20:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Operator_$11125_storage",
                          "typeString": "struct StakeDelegatable.Operator storage ref"
                        }
                      },
                      "id": 7321,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "beneficiary",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11122,
                      "src": "785:32:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 7322,
                      "name": "_beneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7315,
                      "src": "820:12:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "785:47:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 7324,
                  "nodeType": "ExpressionStatement",
                  "src": "785:47:34"
                }
              ]
            },
            "documentation": null,
            "id": 7326,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setBeneficiary",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7316,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7313,
                  "name": "_operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 7326,
                  "src": "707:17:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7312,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "707:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7315,
                  "name": "_beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 7326,
                  "src": "726:28:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 7314,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "726:15:34",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "706:49:34"
            },
            "returnParameters": {
              "id": 7317,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "775:0:34"
            },
            "scope": 7327,
            "src": "683:156:34",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 7328,
        "src": "226:615:34"
      }
    ],
    "src": "0:842:34"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.22",
  "updatedAt": "2021-01-29T17:36:47.970Z",
  "devdoc": {
    "details": "This contract is for testing purposes only.",
    "methods": {
      "authorizeOperatorContract(address,address)": {
        "params": {
          "_operator": "address of stake operator.",
          "_operatorContract": "address of operator contract."
        }
      },
      "authorizeSortitionPoolContract(address,address)": {
        "details": "Only operator's authorizer can call this function."
      },
      "authorizerOf(address)": {
        "return": "Authorizer address."
      },
      "availableUnbondedValue(address,address,address)": {
        "details": "Implements function expected by sortition pools' IBonding interface.",
        "params": {
          "authorizedSortitionPool": "Address of authorized sortition pool.",
          "bondCreator": "Address authorized to create a bond.",
          "operator": "Address of the operator."
        },
        "return": "Amount of authorized wei deposit available for bonding."
      },
      "balanceOf(address)": {
        "params": {
          "_address": "The address to query the balance of."
        },
        "return": "An uint256 representing the amount staked by the passed address."
      },
      "beneficiaryOf(address)": {
        "return": "Beneficiary address."
      },
      "bondAmount(address,address,uint256)": {
        "params": {
          "holder": "Address of the holder of the bond.",
          "operator": "Address of the operator.",
          "referenceID": "Reference ID of the bond."
        },
        "return": "Amount of wei in the selected bond."
      },
      "claimDelegatedAuthority(address)": {
        "details": "If `delegatedAuthoritySource` is an approved operator contract and recognizes the claimant, this relationship will be recorded in `delegatedAuthority`. Later, the claimant can slash, seize, place locks etc. on operators that have authorized the `delegatedAuthoritySource`. If the `delegatedAuthoritySource` is disabled with the panic button, any recipients of delegated authority from it will also be disabled."
      },
      "createBond(address,address,uint256,uint256,address)": {
        "details": "Function can be executed only by authorized contract. Reference ID should be unique for holder and operator.",
        "params": {
          "amount": "Value to bond in wei.",
          "authorizedSortitionPool": "Address of authorized sortition pool.",
          "holder": "Address of the holder of the bond.",
          "operator": "Address of the operator to bond.",
          "referenceID": "Reference ID used to track the bond by holder."
        }
      },
      "deauthorizeSortitionPoolContract(address,address)": {
        "details": "Only operator's authorizer can call this function."
      },
      "delegate(address,address,address,uint256)": {
        "params": {
          "authorizer": "Address of the authorizer.",
          "beneficiary": "Address of the beneficiary.",
          "operator": "Address of the operator."
        }
      },
      "deposit(address,uint256)": {
        "params": {
          "operator": "Address of the operator."
        }
      },
      "freeBond(address,uint256)": {
        "details": "Function requires that caller is the holder of the bond which is being released.",
        "params": {
          "operator": "Address of the bonded operator.",
          "referenceID": "Reference ID of the bond."
        }
      },
      "getDelegationInfo(address)": {
        "params": {
          "operator": "Address of the operator."
        },
        "return": "createdAt The time when the delegation was created.undelegatedAt The time when undelegation has been requested. If undelegation has not been requested, 0 is returned."
      },
      "hasSecondaryAuthorization(address,address)": {
        "details": "See authorizeSortitionPoolContract."
      },
      "isApprovedOperatorContract(address)": {
        "params": {
          "_operatorContract": "address of operator contract."
        },
        "return": "True if operator contract is approved, false if operator contract has not been approved or if it was disabled by the panic button."
      },
      "isAuthorizedForOperator(address,address)": {
        "params": {
          "_operator": "address of stake operator.",
          "_operatorContract": "address of operator contract."
        }
      },
      "isInitialized(address,address)": {
        "params": {
          "bondCreator": "The bond creator contract address.",
          "operator": "The operator address."
        },
        "return": "True if operator has passed initialization period for given bond creator contract, false otherwise."
      },
      "ownerOf(address)": {
        "return": "Stake owner address."
      },
      "reassignBond(address,uint256,address,uint256)": {
        "details": "Function requires that a caller is the current holder of the bond which is being reassigned.",
        "params": {
          "newHolder": "Address of the new holder of the bond.",
          "newReferenceID": "New reference ID to register the bond.",
          "operator": "Address of the bonded operator.",
          "referenceID": "Reference ID of the bond."
        }
      },
      "seizeBond(address,uint256,uint256,address)": {
        "details": "Function requires that a caller is the holder of the bond which is being seized.",
        "params": {
          "amount": "Amount to be seized.",
          "destination": "Address to send the amount to.",
          "operator": "Address of the bonded operator.",
          "referenceID": "Reference ID of the bond."
        }
      },
      "topUp(address,uint256)": {
        "details": "This function should be used to add new unbonded value to the system for an operator. The `deposit` function defined in parent abstract contract should be called only by applications returning value that has been already initially deposited and seized later. As an application may seize bonds and return them to the bonding contract with `deposit` function it makes tracking the totally deposited value much more complicated. Functions `delegate` and `topUps` should be used to add fresh value to the contract and events emitted by these functions should be enough to determine total value deposited ever for an operator.",
        "params": {
          "operator": "Address of the operator."
        }
      },
      "withdraw(uint256,address)": {
        "params": {
          "amount": "Value to withdraw in wei.",
          "operator": "Address of the operator."
        }
      }
    },
    "title": "Fully Backed Bonding Stub"
  },
  "userdoc": {
    "methods": {
      "authorizeOperatorContract(address,address)": {
        "notice": "Authorizes operator contract to access staked token balance of the provided operator. Can only be executed by stake operator authorizer. Contracts using delegated authority cannot be authorized with `authorizeOperatorContract`. Instead, authorize `getAuthoritySource(_operatorContract)`."
      },
      "authorizeSortitionPoolContract(address,address)": {
        "notice": "Authorizes sortition pool for the provided operator. Operator's authorizers need to authorize individual sortition pools per application since they may be interested in participating only in a subset of keep types used by the given application."
      },
      "authorizerOf(address)": {
        "notice": "Gets the authorizer for the specified operator address."
      },
      "availableUnbondedValue(address,address,address)": {
        "notice": "Returns the amount of wei the operator has made available for bonding and that is still unbounded. If the operator doesn't exist or bond creator is not authorized as an operator contract or it is not authorized by the operator or there is no secondary authorization for the provided sortition pool, function returns 0."
      },
      "balanceOf(address)": {
        "notice": "Gets the stake balance of the specified address."
      },
      "beneficiaryOf(address)": {
        "notice": "Gets the beneficiary for the specified operator address."
      },
      "bondAmount(address,address,uint256)": {
        "notice": "Returns value of wei bonded for the operator."
      },
      "claimDelegatedAuthority(address)": {
        "notice": "Grant the sender the same authority as `delegatedAuthoritySource`"
      },
      "createBond(address,address,uint256,uint256,address)": {
        "notice": "Create bond for the given operator, holder, reference and amount."
      },
      "deauthorizeSortitionPoolContract(address,address)": {
        "notice": "Deauthorizes sortition pool for the provided operator. Authorizer may deauthorize individual sortition pool in case the operator should no longer be eligible for work selection and the application represented by the sortition pool should no longer be eligible to create bonds for the operator."
      },
      "delegate(address,address,address,uint256)": {
        "notice": "Registers delegation details. The function is used to register addresses of operator, beneficiary and authorizer for a delegation from the caller. The function requires ETH to be submitted in the call as a protection against attacks blocking operators. The value should be at least equal to the minimum delegation deposit. Whole amount is deposited as operator's unbonded value for the future bonding."
      },
      "deposit(address,uint256)": {
        "notice": "Add the provided value to operator's pool available for bonding."
      },
      "freeBond(address,uint256)": {
        "notice": "Releases the bond and moves the bond value to the operator's unbounded value pool."
      },
      "getAuthoritySource(address)": {
        "notice": "Get the source of the operator contract's authority. If the contract uses delegated authority, returns the original source of the delegated authority. If the contract doesn't use delegated authority, returns the contract itself. Authorize `getAuthoritySource(operatorContract)` to grant `operatorContract` the authority to penalize an operator."
      },
      "getDelegationInfo(address)": {
        "notice": "Gets delegation info for the given operator."
      },
      "hasSecondaryAuthorization(address,address)": {
        "notice": "Checks if the sortition pool has been authorized for the provided operator by its authorizer."
      },
      "isApprovedOperatorContract(address)": {
        "notice": "Checks if the operator contract is authorized in the registry. If the contract uses delegated authority it checks authorization of the source contract."
      },
      "isAuthorizedForOperator(address,address)": {
        "notice": "Checks if operator contract has access to the staked token balance of the provided operator."
      },
      "isInitialized(address,address)": {
        "notice": "Checks if the operator for the given bond creator contract has passed the initialization period."
      },
      "ownerOf(address)": {
        "notice": "Gets the stake owner for the specified operator address."
      },
      "reassignBond(address,uint256,address,uint256)": {
        "notice": "Reassigns a bond to a new holder under a new reference."
      },
      "seizeBond(address,uint256,uint256,address)": {
        "notice": "Seizes the bond by moving some or all of the locked bond to the provided destination address."
      },
      "topUp(address,uint256)": {
        "notice": "Top-ups operator's unbonded value."
      },
      "withdraw(uint256,address)": {
        "notice": "Withdraws amount from operator's value available for bonding. This function can be called only by: - operator, - owner of the stake. Withdraw cannot be performed immediately after delegation to protect from a griefing. It is required that delegator waits specific period of time before they can pull out the funds deposited on delegation."
      }
    }
  }
}